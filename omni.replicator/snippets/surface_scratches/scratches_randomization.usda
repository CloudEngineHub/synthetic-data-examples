#usda 1.0
(
    customLayerData = {
        dictionary audioSettings = {
            double dopplerLimit = 2
            double dopplerScale = 1
            token enableDistanceDelay = "off"
            token enableDoppler = "off"
            token enableInterauralDelay = "off"
            double nonSpatialTimeScale = 1
            double spatialTimeScale = 1
            double speedOfSound = 340
        }
        dictionary cameraSettings = {
            dictionary Front = {
                double3 position = (0, 0, 50000)
                double radius = 500
            }
            dictionary Perspective = {
                double3 position = (-27.43726414861917, 32.59290269818252, 59.677509323096864)
                double3 target = (-5.592588747006676, 8.168227082494138, 1.263151137001465)
            }
            dictionary Right = {
                double3 position = (-50000, 0, -1.1102230246251565e-11)
                double radius = 500
            }
            dictionary Top = {
                double3 position = (-4.329780281177466e-12, 50000, 1.1102230246251565e-11)
                double radius = 500
            }
            string boundCamera = "/OmniverseKit_Persp"
        }
        dictionary omni_layer = {
            dictionary muteness = {
            }
        }
        dictionary renderSettings = {
            double "rtx:hydra:points:defaultWidth" = 1
            double "rtx:post:dof:fNumber" = 5.599999904632568
            double "rtx:post:dof:focalLength" = 35
            double "rtx:post:dof:subjectDistance" = 5
        }
    }
    defaultPrim = "World"
    doc = """scratches_randomzation demo created by Paul Callender"""
    endTimeCode = 0
    metersPerUnit = 0.01
    startTimeCode = 0
    timeCodesPerSecond = 24
    upAxis = "Y"
)

def Xform "World"
{
    def DistantLight "defaultLight" (
        apiSchemas = ["ShapingAPI"]
    )
    {
        float angle = 1
        color3f color = (0.36105606, 0.4226781, 0.66795367)
        float intensity = 3000
        float shaping:cone:angle = 180
        float shaping:cone:softness
        float shaping:focus
        color3f shaping:focusTint
        asset shaping:ies:file
        double3 xformOp:rotateXYZ = (315, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def Scope "Looks"
    {
        def Material "OmniPBR" (
            customData = {
                dictionary ui = {
                    dictionary nodegraph = {
                        dictionary node = {
                            dictionary pos = {
                                double2 output = (1170.140380859375, 59.01169967651367)
                            }
                        }
                    }
                }
            }
        )
        {
            token outputs:mdl:displacement
            token outputs:mdl:surface.connect = </World/Looks/OmniPBR/OmniSurfaceBlendBase.outputs:out>
            token outputs:mdl:volume

            def Shader "data_lookup_float3" (
                apiSchemas = ["NodeGraphNodeAPI"]
            )
            {
                reorder properties = ["inputs:name", "inputs:default_value"]
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:mdl:sourceAsset = @nvidia/support_definitions.mdl@
                uniform token info:mdl:sourceAsset:subIdentifier = "data_lookup_float3"
                float3 inputs:default_value (
                    customData = {
                        float3 default = (0, 0, 0)
                    }
                    hidden = false
                    renderType = "float3"
                )
                bool inputs:excludeFromWhiteMode = 0 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Material Flags"
                    displayName = "Exclude from White Mode"
                    hidden = false
                )
                string inputs:name = "random_color" (
                    hidden = false
                    renderType = "string"
                )
                float3 outputs:out (
                    renderType = "float3"
                )
                uniform token ui:nodegraph:node:expansionState = "open"
                uniform float2 ui:nodegraph:node:pos = (-1719.1984, 136.92104)
            }

            def Shader "x" (
                apiSchemas = ["NodeGraphNodeAPI"]
            )
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:mdl:sourceAsset = @nvidia/aux_definitions.mdl@
                uniform token info:mdl:sourceAsset:subIdentifier = "x(float3)"
                float3 inputs:a (
                    customData = {
                        float3 default = (0, 0, 0)
                    }
                    hidden = false
                    renderType = "float3"
                )
                float3 inputs:a.connect = </World/Looks/OmniPBR/data_lookup_float3.outputs:out>
                bool inputs:excludeFromWhiteMode = 0 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Material Flags"
                    displayName = "Exclude from White Mode"
                    hidden = false
                )
                float outputs:out (
                    renderType = "float"
                )
                uniform token ui:nodegraph:node:expansionState = "open"
                uniform float2 ui:nodegraph:node:pos = (-1218.8994, 141.73224)
            }

            def Shader "multiply02" (
                apiSchemas = ["NodeGraphNodeAPI"]
            )
            {
                reorder properties = ["inputs:a", "inputs:b"]
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:mdl:sourceAsset = @nvidia/support_definitions.mdl@
                uniform token info:mdl:sourceAsset:subIdentifier = "multiply(float,float)"
                float inputs:a (
                    customData = {
                        float default = 0
                    }
                    hidden = false
                    renderType = "float"
                )
                float inputs:a.connect = </World/Looks/OmniPBR/x.outputs:out>
                float inputs:b = 360 (
                    customData = {
                        float default = 0
                    }
                    hidden = false
                    renderType = "float"
                )
                bool inputs:excludeFromWhiteMode = 0 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Material Flags"
                    displayName = "Exclude from White Mode"
                    hidden = false
                )
                float outputs:out (
                    renderType = "float"
                )
                uniform token ui:nodegraph:node:expansionState = "open"
                uniform float2 ui:nodegraph:node:pos = (-1012.8081, 143.37856)
            }

            def Shader "z" (
                apiSchemas = ["NodeGraphNodeAPI"]
            )
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:mdl:sourceAsset = @nvidia/aux_definitions.mdl@
                uniform token info:mdl:sourceAsset:subIdentifier = "z(float3)"
                float3 inputs:a (
                    customData = {
                        float3 default = (0, 0, 0)
                    }
                    hidden = false
                    renderType = "float3"
                )
                float3 inputs:a.connect = </World/Looks/OmniPBR/data_lookup_float3.outputs:out>
                bool inputs:excludeFromWhiteMode = 0 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Material Flags"
                    displayName = "Exclude from White Mode"
                    hidden = false
                )
                float outputs:out (
                    renderType = "float"
                )
                uniform token ui:nodegraph:node:expansionState = "open"
                uniform float2 ui:nodegraph:node:pos = (-1412.8395, 325.88718)
            }

            def Shader "construct_float2" (
                apiSchemas = ["NodeGraphNodeAPI"]
            )
            {
                reorder properties = ["inputs:x", "inputs:y"]
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:mdl:sourceAsset = @nvidia/aux_definitions.mdl@
                uniform token info:mdl:sourceAsset:subIdentifier = "construct_float2(float,float)"
                bool inputs:excludeFromWhiteMode = 0 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Material Flags"
                    displayName = "Exclude from White Mode"
                    hidden = false
                )
                float inputs:x (
                    customData = {
                        float default = 0
                    }
                    hidden = false
                    renderType = "float"
                )
                float inputs:x.connect = </World/Looks/OmniPBR/remap.outputs:out>
                float inputs:y (
                    customData = {
                        float default = 0
                    }
                    hidden = false
                    renderType = "float"
                )
                float inputs:y.connect = </World/Looks/OmniPBR/remap.outputs:out>
                float2 outputs:out (
                    renderType = "float2"
                )
                uniform token ui:nodegraph:node:expansionState = "open"
                uniform float2 ui:nodegraph:node:pos = (-1012.624, 330.11096)
            }

            def Shader "remap" (
                apiSchemas = ["NodeGraphNodeAPI"]
            )
            {
                reorder properties = ["inputs:a", "inputs:start_old", "inputs:end_old", "inputs:start_new", "inputs:end_new"]
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:mdl:sourceAsset = @nvidia/support_definitions.mdl@
                uniform token info:mdl:sourceAsset:subIdentifier = "remap(float,float,float,float,float)"
                float inputs:a (
                    customData = {
                        float default = 0
                    }
                    hidden = false
                    renderType = "float"
                )
                float inputs:a.connect = </World/Looks/OmniPBR/z.outputs:out>
                float inputs:end_new = 2 (
                    customData = {
                        float default = 1
                    }
                    hidden = false
                    renderType = "float"
                )
                float inputs:end_old (
                    customData = {
                        float default = 1
                    }
                    hidden = false
                    renderType = "float"
                )
                bool inputs:excludeFromWhiteMode = 0 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Material Flags"
                    displayName = "Exclude from White Mode"
                    hidden = false
                )
                float inputs:start_new = 1.5 (
                    customData = {
                        float default = 0
                    }
                    hidden = false
                    renderType = "float"
                )
                float inputs:start_old (
                    customData = {
                        float default = 0
                    }
                    hidden = false
                    renderType = "float"
                )
                float outputs:out (
                    renderType = "float"
                )
                uniform token ui:nodegraph:node:expansionState = "open"
                uniform float2 ui:nodegraph:node:pos = (-1221.7076, 330.11108)
            }

            def NodeGraph "file_texture" (
                apiSchemas = ["NodeGraphNodeAPI"]
            )
            {
                reorder properties = ["inputs:texture", "inputs:mono_source", "inputs:brightness", "inputs:contrast", "inputs:invert", "inputs:texture_space", "inputs:rotation", "inputs:translation", "inputs:scaling", "inputs:clip", "outputs:tex", "outputs:color", "outputs:mono", "outputs:r", "outputs:g", "outputs:b"]
                float inputs:brightness (
                    customData = {
                        double default = 1
                    }
                    displayGroup = "Bitmap parameters"
                    displayName = "Brightness"
                    renderType = "float"
                )
                bool inputs:clip (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Placement"
                    displayName = "Clip"
                    renderType = "bool"
                )
                float inputs:contrast (
                    customData = {
                        double default = 1
                    }
                    displayGroup = "Bitmap parameters"
                    displayName = "Contrast"
                    renderType = "float"
                )
                bool inputs:invert (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Bitmap parameters"
                    displayName = "Invert image"
                    renderType = "bool"
                )
                int inputs:mono_source (
                    customData = {
                        int default = 1
                    }
                    displayGroup = "Bitmap parameters"
                    displayName = "Scalar mode"
                    renderType = "mono_mode"
                    sdrMetadata = {
                        string __SDR__enum_value = "mono_average"
                        string options = "mono_alpha:0|mono_average:1|mono_luminance:2|mono_maximum:3"
                    }
                )
                float inputs:rotation (
                    customData = {
                        double default = 0
                    }
                    displayGroup = "Placement"
                    displayName = "Rotation"
                    renderType = "float"
                )
                float inputs:rotation.connect = </World/Looks/OmniPBR/multiply02.outputs:out>
                float2 inputs:scaling (
                    customData = {
                        double2 default = (1, 1)
                    }
                    displayGroup = "Placement"
                    displayName = "Tiling"
                    renderType = "float2"
                )
                float2 inputs:scaling.connect = </World/Looks/OmniPBR/construct_float2.outputs:out>
                asset inputs:texture = @./scratches_randomization.png@ (
                    colorSpace = "sRGB"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Bitmap parameters"
                    displayName = "Bitmap file"
                    renderType = "texture_2d"
                )
                int inputs:texture_space (
                    customData = {
                        int default = 0
                        dictionary range = {
                            int max = 3
                            int min = 0
                        }
                    }
                    displayGroup = "Placement"
                    displayName = "UV space index"
                    renderType = "int"
                )
                float2 inputs:translation (
                    customData = {
                        double2 default = (0, 0)
                    }
                    displayGroup = "Placement"
                    displayName = "Offset"
                    renderType = "float2"
                )
                float outputs:b (
                    renderType = "float"
                )
                float outputs:b.connect = </World/Looks/OmniPBR/file_texture/z.outputs:out>
                color3f outputs:color (
                    renderType = "color"
                )
                color3f outputs:color.connect = </World/Looks/OmniPBR/file_texture/construct_color.outputs:out>
                float outputs:g (
                    renderType = "float"
                )
                float outputs:g.connect = </World/Looks/OmniPBR/file_texture/y.outputs:out>
                float outputs:mono (
                    renderType = "float"
                )
                float outputs:mono.connect = </World/Looks/OmniPBR/file_texture/construct_float.outputs:out>
                float outputs:r (
                    renderType = "float"
                )
                float outputs:r.connect = </World/Looks/OmniPBR/file_texture/x.outputs:out>
                token outputs:tex (
                    renderType = "texture_return"
                )
                token outputs:tex.connect = </World/Looks/OmniPBR/file_texture/file_texture.outputs:out>
                custom token ui:description = "Allows texturing using image files of various file formats"
                uniform token ui:displayGroup = "Texturing, high level"
                uniform token ui:displayName = "Bitmap texture"
                uniform token ui:nodegraph:node:expansionState = "open"
                uniform asset ui:nodegraph:node:icon = @core_definitions.file_texture.png@
                uniform float2 ui:nodegraph:node:pos = (-722.0467, 117.79854)
                custom int ui:order = 30

                def Shader "file_texture"
                {
                    reorder properties = ["inputs:texture", "inputs:mono_source", "inputs:brightness", "inputs:contrast", "inputs:invert", "inputs:texture_space", "inputs:rotation", "inputs:translation", "inputs:scaling", "inputs:clip"]
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:mdl:sourceAsset = @nvidia/core_definitions.mdl@
                    uniform token info:mdl:sourceAsset:subIdentifier = "file_texture(texture_2d,::base::mono_mode,float,float,float2,float2,float,bool,int,bool)"
                    float inputs:brightness (
                        customData = {
                            double default = 1
                        }
                        displayGroup = "Bitmap parameters"
                        displayName = "Brightness"
                        renderType = "float"
                    )
                    float inputs:brightness.connect = </World/Looks/OmniPBR/file_texture.inputs:brightness>
                    bool inputs:clip (
                        customData = {
                            bool default = 0
                        }
                        displayGroup = "Placement"
                        displayName = "Clip"
                        doc = "If set to true, texture will not repeat. Outside of the texture, color will be black and the scalar value will be 0"
                        renderType = "bool"
                    )
                    bool inputs:clip.connect = </World/Looks/OmniPBR/file_texture.inputs:clip>
                    float inputs:contrast (
                        customData = {
                            double default = 1
                        }
                        displayGroup = "Bitmap parameters"
                        displayName = "Contrast"
                        renderType = "float"
                    )
                    float inputs:contrast.connect = </World/Looks/OmniPBR/file_texture.inputs:contrast>
                    bool inputs:excludeFromWhiteMode = 0 (
                        customData = {
                            bool default = 0
                        }
                        displayGroup = "Material Flags"
                        displayName = "Exclude from White Mode"
                        hidden = false
                    )
                    bool inputs:invert (
                        customData = {
                            bool default = 0
                        }
                        displayGroup = "Bitmap parameters"
                        displayName = "Invert image"
                        doc = "Invert image"
                        renderType = "bool"
                    )
                    bool inputs:invert.connect = </World/Looks/OmniPBR/file_texture.inputs:invert>
                    int inputs:mono_source (
                        customData = {
                            int default = 1
                        }
                        displayGroup = "Bitmap parameters"
                        displayName = "Scalar mode"
                        doc = "Defines how the texture applies to scalar parameters"
                        renderType = "mono_mode"
                        sdrMetadata = {
                            string __SDR__enum_value = "mono_average"
                            string options = "mono_alpha:0|mono_average:1|mono_luminance:2|mono_maximum:3"
                        }
                    )
                    int inputs:mono_source.connect = </World/Looks/OmniPBR/file_texture.inputs:mono_source>
                    float inputs:rotation (
                        customData = {
                            double default = 0
                        }
                        displayGroup = "Placement"
                        displayName = "Rotation"
                        doc = "Rotation angle of the texture in degrees"
                        renderType = "float"
                    )
                    float inputs:rotation.connect = </World/Looks/OmniPBR/file_texture.inputs:rotation>
                    float2 inputs:scaling (
                        customData = {
                            double2 default = (1, 1)
                        }
                        displayGroup = "Placement"
                        displayName = "Tiling"
                        doc = "Controls the scale of the texture on the object"
                        renderType = "float2"
                    )
                    float2 inputs:scaling.connect = </World/Looks/OmniPBR/file_texture.inputs:scaling>
                    asset inputs:texture (
                        colorSpace = "sRGB"
                        customData = {
                            asset default = @@
                        }
                        displayGroup = "Bitmap parameters"
                        displayName = "Bitmap file"
                        renderType = "texture_2d"
                    )
                    asset inputs:texture.connect = </World/Looks/OmniPBR/file_texture.inputs:texture>
                    int inputs:texture_space (
                        customData = {
                            int default = 0
                            dictionary range = {
                                int max = 3
                                int min = 0
                            }
                        }
                        displayGroup = "Placement"
                        displayName = "UV space index"
                        doc = "Selects a specific UV space"
                        renderType = "int"
                    )
                    int inputs:texture_space.connect = </World/Looks/OmniPBR/file_texture.inputs:texture_space>
                    float2 inputs:translation (
                        customData = {
                            double2 default = (0, 0)
                        }
                        displayGroup = "Placement"
                        displayName = "Offset"
                        doc = "Controls position of the texture on the object"
                        renderType = "float2"
                    )
                    float2 inputs:translation.connect = </World/Looks/OmniPBR/file_texture.inputs:translation>
                    token outputs:out (
                        renderType = "texture_return"
                    )
                }

                def Shader "construct_float"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:mdl:sourceAsset = @nvidia/aux_definitions.mdl@
                    uniform token info:mdl:sourceAsset:subIdentifier = "construct_float(::base::texture_return)"
                    token inputs:a (
                        renderType = "texture_return"
                    )
                    token inputs:a.connect = </World/Looks/OmniPBR/file_texture/file_texture.outputs:out>
                    bool inputs:excludeFromWhiteMode = 0 (
                        customData = {
                            bool default = 0
                        }
                        displayGroup = "Material Flags"
                        displayName = "Exclude from White Mode"
                        hidden = false
                    )
                    float outputs:out (
                        renderType = "float"
                    )
                }

                def Shader "construct_color"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:mdl:sourceAsset = @nvidia/aux_definitions.mdl@
                    uniform token info:mdl:sourceAsset:subIdentifier = "construct_color(::base::texture_return)"
                    token inputs:a (
                        renderType = "texture_return"
                    )
                    token inputs:a.connect = </World/Looks/OmniPBR/file_texture/file_texture.outputs:out>
                    bool inputs:excludeFromWhiteMode = 0 (
                        customData = {
                            bool default = 0
                        }
                        displayGroup = "Material Flags"
                        displayName = "Exclude from White Mode"
                        hidden = false
                    )
                    color3f outputs:out (
                        renderType = "color"
                    )
                }

                def Shader "x"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:mdl:sourceAsset = @nvidia/aux_definitions.mdl@
                    uniform token info:mdl:sourceAsset:subIdentifier = "x(color)"
                    color3f inputs:a (
                        renderType = "color"
                    )
                    color3f inputs:a.connect = </World/Looks/OmniPBR/file_texture/construct_color.outputs:out>
                    bool inputs:excludeFromWhiteMode = 0 (
                        customData = {
                            bool default = 0
                        }
                        displayGroup = "Material Flags"
                        displayName = "Exclude from White Mode"
                        hidden = false
                    )
                    float outputs:out (
                        renderType = "float"
                    )
                }

                def Shader "y"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:mdl:sourceAsset = @nvidia/aux_definitions.mdl@
                    uniform token info:mdl:sourceAsset:subIdentifier = "y(color)"
                    color3f inputs:a (
                        renderType = "color"
                    )
                    color3f inputs:a.connect = </World/Looks/OmniPBR/file_texture/construct_color.outputs:out>
                    bool inputs:excludeFromWhiteMode = 0 (
                        customData = {
                            bool default = 0
                        }
                        displayGroup = "Material Flags"
                        displayName = "Exclude from White Mode"
                        hidden = false
                    )
                    float outputs:out (
                        renderType = "float"
                    )
                }

                def Shader "z"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:mdl:sourceAsset = @nvidia/aux_definitions.mdl@
                    uniform token info:mdl:sourceAsset:subIdentifier = "z(color)"
                    color3f inputs:a (
                        renderType = "color"
                    )
                    color3f inputs:a.connect = </World/Looks/OmniPBR/file_texture/construct_color.outputs:out>
                    bool inputs:excludeFromWhiteMode = 0 (
                        customData = {
                            bool default = 0
                        }
                        displayGroup = "Material Flags"
                        displayName = "Exclude from White Mode"
                        hidden = false
                    )
                    float outputs:out (
                        renderType = "float"
                    )
                }
            }

            def Shader "OmniSurfaceBlendBase" (
                apiSchemas = ["NodeGraphNodeAPI"]
            )
            {
                reorder properties = ["inputs:base_material", "inputs:blend_material", "inputs:blend_weight", "inputs:enable_opacity", "inputs:geometry_opacity_threshold"]
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:mdl:sourceAsset = @OmniSurface/OmniSurfaceBlendBase.mdl@
                uniform token info:mdl:sourceAsset:subIdentifier = "OmniSurfaceBlendBase"
                token inputs:base_material (
                    displayGroup = "Materials"
                    displayName = "Base Material"
                    hidden = true
                    renderType = "material"
                )
                token inputs:base_material.connect = </World/Looks/OmniPBR/scratched_metal_v201.outputs:out>
                token inputs:blend_material (
                    displayGroup = "Materials"
                    displayName = "Blend Material"
                    hidden = true
                    renderType = "material"
                )
                token inputs:blend_material.connect = </World/Looks/OmniPBR/scratched_metal_v202.outputs:out>
                float inputs:blend_weight (
                    customData = {
                        float default = 1
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    displayGroup = "Blending"
                    displayName = "Weight"
                    hidden = false
                    renderType = "float"
                )
                float inputs:blend_weight.connect = </World/Looks/OmniPBR/multiply01.outputs:out>
                bool inputs:enable_opacity (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Geometry"
                    displayName = "Enable Opacity"
                    doc = "Enables the use of cutout opacity"
                    hidden = false
                    renderType = "bool"
                )
                bool inputs:excludeFromWhiteMode = 0 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Material Flags"
                    displayName = "Exclude from White Mode"
                    hidden = false
                )
                float inputs:geometry_opacity_threshold = 0 (
                    customData = {
                        float default = 0
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    displayGroup = "Geometry"
                    displayName = "Opacity Threshold"
                    doc = "If > 0, remap opacity values to 1 when >= threshold and to 0 otherwise"
                    hidden = false
                )
                token outputs:out (
                    renderType = "material"
                )
                uniform token ui:nodegraph:node:expansionState = "open"
                uniform float2 ui:nodegraph:node:pos = (714.2855, 60.34445)
            }

            def Shader "scratched_metal_v201" (
                apiSchemas = ["NodeGraphNodeAPI"]
            )
            {
                reorder properties = ["inputs:metal_color", "inputs:roughness", "inputs:glossy_weight", "inputs:anisotropy", "inputs:anisotropy_rotation", "inputs:normal"]
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:mdl:sourceAsset = @nvidia/core_definitions.mdl@
                uniform token info:mdl:sourceAsset:subIdentifier = "scratched_metal_v2"
                float inputs:anisotropy (
                    customData = {
                        float default = 0
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    displayName = "Anisotropy"
                    doc = "Higher values will stretch the highlight"
                    hidden = false
                    renderType = "float"
                )
                float inputs:anisotropy_rotation (
                    customData = {
                        float default = 0
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    displayName = "Anisotropy rotation"
                    doc = "Changes the orientation of the anisotropy. A value of 1 will rotate the orientation 360 degrees."
                    hidden = false
                    renderType = "float"
                )
                bool inputs:excludeFromWhiteMode = 0 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Material Flags"
                    displayName = "Exclude from White Mode"
                    hidden = false
                )
                float inputs:glossy_weight = 0.9 (
                    customData = {
                        float default = 0.9
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    displayName = "Reflection weight"
                    doc = "Intensity of highlights and glossy reflections and highlights"
                    hidden = false
                    renderType = "float"
                )
                color3f inputs:metal_color = (0.07411934, 0.11553271, 0.16988415) (
                    customData = {
                        float3 default = (0.9, 0.9, 0.9)
                    }
                    displayName = "Color"
                    doc = "The color of the metal"
                    hidden = false
                    renderType = "color"
                )
                float3 inputs:normal (
                    customData = {
                        float3 default = (0, 0, 0)
                    }
                    displayName = "Bumps"
                    doc = "Attach bump or normal maps here"
                    hidden = true
                    renderType = "float3"
                )
                float inputs:roughness = 0.17 (
                    customData = {
                        float default = 0.2
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    displayName = "Roughness"
                    doc = "Higher roughness values lead to bigger highlights and blurry reflections"
                    hidden = false
                    renderType = "float"
                )
                token outputs:out (
                    renderType = "material"
                )
                uniform token ui:nodegraph:node:expansionState = "open"
                uniform float2 ui:nodegraph:node:pos = (265.7426, 21.59628)
            }

            def Shader "scratched_metal_v202" (
                apiSchemas = ["NodeGraphNodeAPI"]
            )
            {
                reorder properties = ["inputs:metal_color", "inputs:roughness", "inputs:glossy_weight", "inputs:anisotropy", "inputs:anisotropy_rotation", "inputs:normal"]
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:mdl:sourceAsset = @nvidia/core_definitions.mdl@
                uniform token info:mdl:sourceAsset:subIdentifier = "scratched_metal_v2"
                float inputs:anisotropy (
                    customData = {
                        float default = 0
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    displayName = "Anisotropy"
                    doc = "Higher values will stretch the highlight"
                    hidden = false
                    renderType = "float"
                )
                float inputs:anisotropy_rotation (
                    customData = {
                        float default = 0
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    displayName = "Anisotropy rotation"
                    doc = "Changes the orientation of the anisotropy. A value of 1 will rotate the orientation 360 degrees."
                    hidden = false
                    renderType = "float"
                )
                bool inputs:excludeFromWhiteMode = 0 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Material Flags"
                    displayName = "Exclude from White Mode"
                    hidden = false
                )
                float inputs:glossy_weight (
                    customData = {
                        float default = 0.9
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    displayName = "Reflection weight"
                    doc = "Intensity of highlights and glossy reflections and highlights"
                    hidden = false
                    renderType = "float"
                )
                color3f inputs:metal_color (
                    customData = {
                        float3 default = (0.9, 0.9, 0.9)
                    }
                    displayName = "Color"
                    doc = "The color of the metal"
                    hidden = false
                    renderType = "color"
                )
                float3 inputs:normal (
                    customData = {
                        float3 default = (0, 0, 0)
                    }
                    displayName = "Bumps"
                    doc = "Attach bump or normal maps here"
                    hidden = true
                    renderType = "float3"
                )
                float inputs:roughness = 0.78 (
                    customData = {
                        float default = 0.2
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    displayName = "Roughness"
                    doc = "Higher roughness values lead to bigger highlights and blurry reflections"
                    hidden = false
                    renderType = "float"
                )
                token outputs:out (
                    renderType = "material"
                )
                uniform token ui:nodegraph:node:expansionState = "open"
                uniform float2 ui:nodegraph:node:pos = (252.82478, 283.53)
            }

            def NodeGraph "perlin_noise_texture" (
                apiSchemas = ["NodeGraphNodeAPI"]
            )
            {
                reorder properties = ["inputs:color1", "inputs:color2", "inputs:noise_levels", "inputs:absolute_noise", "inputs:noise_threshold_low", "inputs:noise_threshold_high", "inputs:object_space", "inputs:texture_space", "inputs:rotation", "inputs:translation", "inputs:scaling", "outputs:tex", "outputs:color", "outputs:mono", "outputs:r", "outputs:g", "outputs:b"]
                bool inputs:absolute_noise (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Noise parameters"
                    displayName = "Billowing appearance"
                    renderType = "bool"
                )
                color3f inputs:color1 (
                    customData = {
                        double3 default = (1, 1, 1)
                    }
                    displayGroup = "Noise parameters"
                    displayName = "Color 1"
                    renderType = "color"
                )
                color3f inputs:color2 (
                    customData = {
                        double3 default = (0, 0, 0)
                    }
                    displayGroup = "Noise parameters"
                    displayName = "Color 2"
                    renderType = "color"
                )
                int inputs:noise_levels = 3 (
                    customData = {
                        int default = 3
                        dictionary range = {
                            int max = 6
                            int min = 1
                        }
                    }
                    displayGroup = "Noise parameters"
                    displayName = "Levels"
                    renderType = "int"
                )
                float inputs:noise_threshold_high (
                    customData = {
                        double default = 1
                        dictionary range = {
                            int max = 1
                            int min = 0
                        }
                    }
                    displayGroup = "Noise parameters"
                    displayName = "Upper threshold"
                    renderType = "float"
                )
                float inputs:noise_threshold_low (
                    customData = {
                        double default = 0
                        dictionary range = {
                            int max = 1
                            int min = 0
                        }
                    }
                    displayGroup = "Noise parameters"
                    displayName = "Lower threshold"
                    renderType = "float"
                )
                bool inputs:object_space = 0 (
                    customData = {
                        bool default = 1
                    }
                    displayGroup = "Placement"
                    displayName = "Use object space"
                    renderType = "bool"
                )
                float3 inputs:rotation (
                    customData = {
                        double3 default = (0, 0, 0)
                    }
                    displayGroup = "Placement"
                    displayName = "Rotation"
                    renderType = "float3"
                )
                float3 inputs:scaling (
                    customData = {
                        double3 default = (10, 10, 10)
                    }
                    displayGroup = "Placement"
                    displayName = "Tiling"
                    renderType = "float3"
                )
                int inputs:texture_space (
                    customData = {
                        int default = 0
                        dictionary range = {
                            int max = 3
                            int min = 0
                        }
                    }
                    displayGroup = "Placement"
                    displayName = "UV space index"
                    renderType = "int"
                )
                float3 inputs:translation (
                    customData = {
                        double3 default = (0, 0, 0)
                    }
                    displayGroup = "Placement"
                    displayName = "Offset"
                    renderType = "float3"
                )
                float3 inputs:translation.connect = </World/Looks/OmniPBR/construct_float3.outputs:out>
                float outputs:b (
                    renderType = "float"
                )
                float outputs:b.connect = </World/Looks/OmniPBR/perlin_noise_texture/z.outputs:out>
                color3f outputs:color (
                    renderType = "color"
                )
                color3f outputs:color.connect = </World/Looks/OmniPBR/perlin_noise_texture/construct_color.outputs:out>
                float outputs:g (
                    renderType = "float"
                )
                float outputs:g.connect = </World/Looks/OmniPBR/perlin_noise_texture/y.outputs:out>
                float outputs:mono (
                    renderType = "float"
                )
                float outputs:mono.connect = </World/Looks/OmniPBR/perlin_noise_texture/construct_float.outputs:out>
                float outputs:r (
                    renderType = "float"
                )
                float outputs:r.connect = </World/Looks/OmniPBR/perlin_noise_texture/x.outputs:out>
                token outputs:tex (
                    renderType = "texture_return"
                )
                token outputs:tex.connect = </World/Looks/OmniPBR/perlin_noise_texture/perlin_noise_texture.outputs:out>
                custom token ui:description = "Allow texturing with a random noise pattern"
                uniform token ui:displayGroup = "Texturing, high level"
                uniform token ui:displayName = "Perlin noise texture"
                uniform token ui:nodegraph:node:expansionState = "open"
                uniform asset ui:nodegraph:node:icon = @core_definitions.perlin_noise_texture.png@
                uniform float2 ui:nodegraph:node:pos = (-900.64825, 692.84265)
                custom int ui:order = 34

                def Shader "perlin_noise_texture"
                {
                    reorder properties = ["inputs:color1", "inputs:color2", "inputs:noise_levels", "inputs:absolute_noise", "inputs:noise_threshold_low", "inputs:noise_threshold_high", "inputs:object_space", "inputs:texture_space", "inputs:rotation", "inputs:translation", "inputs:scaling"]
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:mdl:sourceAsset = @nvidia/core_definitions.mdl@
                    uniform token info:mdl:sourceAsset:subIdentifier = "perlin_noise_texture(color,color,bool,int,bool,float,float,float3,float3,float3,int)"
                    bool inputs:absolute_noise (
                        customData = {
                            bool default = 0
                        }
                        displayGroup = "Noise parameters"
                        displayName = "Billowing appearance"
                        renderType = "bool"
                    )
                    bool inputs:absolute_noise.connect = </World/Looks/OmniPBR/perlin_noise_texture.inputs:absolute_noise>
                    color3f inputs:color1 (
                        customData = {
                            double3 default = (1, 1, 1)
                        }
                        displayGroup = "Noise parameters"
                        displayName = "Color 1"
                        renderType = "color"
                    )
                    color3f inputs:color1.connect = </World/Looks/OmniPBR/perlin_noise_texture.inputs:color1>
                    color3f inputs:color2 (
                        customData = {
                            double3 default = (0, 0, 0)
                        }
                        displayGroup = "Noise parameters"
                        displayName = "Color 2"
                        renderType = "color"
                    )
                    color3f inputs:color2.connect = </World/Looks/OmniPBR/perlin_noise_texture.inputs:color2>
                    bool inputs:excludeFromWhiteMode = 0 (
                        customData = {
                            bool default = 0
                        }
                        displayGroup = "Material Flags"
                        displayName = "Exclude from White Mode"
                        hidden = false
                    )
                    int inputs:noise_levels (
                        customData = {
                            int default = 3
                            dictionary range = {
                                int max = 6
                                int min = 1
                            }
                        }
                        displayGroup = "Noise parameters"
                        displayName = "Levels"
                        doc = "Higher amounts will add detail to the noise"
                        renderType = "int"
                    )
                    int inputs:noise_levels.connect = </World/Looks/OmniPBR/perlin_noise_texture.inputs:noise_levels>
                    float inputs:noise_threshold_high (
                        customData = {
                            double default = 1
                            dictionary range = {
                                int max = 1
                                int min = 0
                            }
                        }
                        displayGroup = "Noise parameters"
                        displayName = "Upper threshold"
                        doc = "Lowering this value will create bigger areas uniformly colored with Color 1"
                        renderType = "float"
                    )
                    float inputs:noise_threshold_high.connect = </World/Looks/OmniPBR/perlin_noise_texture.inputs:noise_threshold_high>
                    float inputs:noise_threshold_low (
                        customData = {
                            double default = 0
                            dictionary range = {
                                int max = 1
                                int min = 0
                            }
                        }
                        displayGroup = "Noise parameters"
                        displayName = "Lower threshold"
                        doc = "Increasing this value will create bigger areas uniformly colored with Color 2"
                        renderType = "float"
                    )
                    float inputs:noise_threshold_low.connect = </World/Looks/OmniPBR/perlin_noise_texture.inputs:noise_threshold_low>
                    bool inputs:object_space (
                        customData = {
                            bool default = 1
                        }
                        displayGroup = "Placement"
                        displayName = "Use object space"
                        doc = "If off, UV space will be used. If on, 3d texturing in object space will apply. For applications that do not support object space, world space will be used"
                        renderType = "bool"
                    )
                    bool inputs:object_space.connect = </World/Looks/OmniPBR/perlin_noise_texture.inputs:object_space>
                    float3 inputs:rotation (
                        customData = {
                            double3 default = (0, 0, 0)
                        }
                        displayGroup = "Placement"
                        displayName = "Rotation"
                        doc = "Rotation angle of the texture in degrees"
                        renderType = "float3"
                    )
                    float3 inputs:rotation.connect = </World/Looks/OmniPBR/perlin_noise_texture.inputs:rotation>
                    float3 inputs:scaling (
                        customData = {
                            double3 default = (10, 10, 10)
                        }
                        displayGroup = "Placement"
                        displayName = "Tiling"
                        doc = "Controls the scale of the texture on the object"
                        renderType = "float3"
                    )
                    float3 inputs:scaling.connect = </World/Looks/OmniPBR/perlin_noise_texture.inputs:scaling>
                    int inputs:texture_space (
                        customData = {
                            int default = 0
                            dictionary range = {
                                int max = 3
                                int min = 0
                            }
                        }
                        displayGroup = "Placement"
                        displayName = "UV space index"
                        doc = 'Only applies if "Use object space" is off. Selects a specific UV space'
                        renderType = "int"
                    )
                    int inputs:texture_space.connect = </World/Looks/OmniPBR/perlin_noise_texture.inputs:texture_space>
                    float3 inputs:translation (
                        customData = {
                            double3 default = (0, 0, 0)
                        }
                        displayGroup = "Placement"
                        displayName = "Offset"
                        doc = "Controls position of the texture on the object"
                        renderType = "float3"
                    )
                    float3 inputs:translation.connect = </World/Looks/OmniPBR/perlin_noise_texture.inputs:translation>
                    token outputs:out (
                        renderType = "texture_return"
                    )
                }

                def Shader "construct_float"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:mdl:sourceAsset = @nvidia/aux_definitions.mdl@
                    uniform token info:mdl:sourceAsset:subIdentifier = "construct_float(::base::texture_return)"
                    token inputs:a (
                        renderType = "texture_return"
                    )
                    token inputs:a.connect = </World/Looks/OmniPBR/perlin_noise_texture/perlin_noise_texture.outputs:out>
                    bool inputs:excludeFromWhiteMode = 0 (
                        customData = {
                            bool default = 0
                        }
                        displayGroup = "Material Flags"
                        displayName = "Exclude from White Mode"
                        hidden = false
                    )
                    float outputs:out (
                        renderType = "float"
                    )
                }

                def Shader "construct_color"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:mdl:sourceAsset = @nvidia/aux_definitions.mdl@
                    uniform token info:mdl:sourceAsset:subIdentifier = "construct_color(::base::texture_return)"
                    token inputs:a (
                        renderType = "texture_return"
                    )
                    token inputs:a.connect = </World/Looks/OmniPBR/perlin_noise_texture/perlin_noise_texture.outputs:out>
                    bool inputs:excludeFromWhiteMode = 0 (
                        customData = {
                            bool default = 0
                        }
                        displayGroup = "Material Flags"
                        displayName = "Exclude from White Mode"
                        hidden = false
                    )
                    color3f outputs:out (
                        renderType = "color"
                    )
                }

                def Shader "x"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:mdl:sourceAsset = @nvidia/aux_definitions.mdl@
                    uniform token info:mdl:sourceAsset:subIdentifier = "x(color)"
                    color3f inputs:a (
                        renderType = "color"
                    )
                    color3f inputs:a.connect = </World/Looks/OmniPBR/perlin_noise_texture/construct_color.outputs:out>
                    bool inputs:excludeFromWhiteMode = 0 (
                        customData = {
                            bool default = 0
                        }
                        displayGroup = "Material Flags"
                        displayName = "Exclude from White Mode"
                        hidden = false
                    )
                    float outputs:out (
                        renderType = "float"
                    )
                }

                def Shader "y"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:mdl:sourceAsset = @nvidia/aux_definitions.mdl@
                    uniform token info:mdl:sourceAsset:subIdentifier = "y(color)"
                    color3f inputs:a (
                        renderType = "color"
                    )
                    color3f inputs:a.connect = </World/Looks/OmniPBR/perlin_noise_texture/construct_color.outputs:out>
                    bool inputs:excludeFromWhiteMode = 0 (
                        customData = {
                            bool default = 0
                        }
                        displayGroup = "Material Flags"
                        displayName = "Exclude from White Mode"
                        hidden = false
                    )
                    float outputs:out (
                        renderType = "float"
                    )
                }

                def Shader "z"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:mdl:sourceAsset = @nvidia/aux_definitions.mdl@
                    uniform token info:mdl:sourceAsset:subIdentifier = "z(color)"
                    color3f inputs:a (
                        renderType = "color"
                    )
                    color3f inputs:a.connect = </World/Looks/OmniPBR/perlin_noise_texture/construct_color.outputs:out>
                    bool inputs:excludeFromWhiteMode = 0 (
                        customData = {
                            bool default = 0
                        }
                        displayGroup = "Material Flags"
                        displayName = "Exclude from White Mode"
                        hidden = false
                    )
                    float outputs:out (
                        renderType = "float"
                    )
                }
            }

            def Shader "multiply" (
                apiSchemas = ["NodeGraphNodeAPI"]
            )
            {
                reorder properties = ["inputs:a", "inputs:b"]
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:mdl:sourceAsset = @nvidia/support_definitions.mdl@
                uniform token info:mdl:sourceAsset:subIdentifier = "multiply(float,float)"
                float inputs:a (
                    customData = {
                        float default = 0
                    }
                    hidden = false
                    renderType = "float"
                )
                float inputs:a.connect = </World/Looks/OmniPBR/multiply03.outputs:out>
                float inputs:b (
                    customData = {
                        float default = 0
                    }
                    hidden = false
                    renderType = "float"
                )
                float inputs:b.connect = </World/Looks/OmniPBR/perlin_noise_texture.outputs:mono>
                bool inputs:excludeFromWhiteMode = 0 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Material Flags"
                    displayName = "Exclude from White Mode"
                    hidden = false
                )
                float outputs:out (
                    renderType = "float"
                )
                uniform token ui:nodegraph:node:expansionState = "open"
                uniform float2 ui:nodegraph:node:pos = (-17.815407, 598.25726)
            }

            def Shader "condition" (
                apiSchemas = ["NodeGraphNodeAPI"]
            )
            {
                reorder properties = ["inputs:x", "inputs:a", "inputs:b"]
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:mdl:sourceAsset = @nvidia/support_definitions.mdl@
                uniform token info:mdl:sourceAsset:subIdentifier = "condition(bool,float,float)"
                float inputs:a (
                    customData = {
                        float default = 0
                    }
                    hidden = false
                    renderType = "float"
                )
                float inputs:a.connect = </World/Looks/OmniPBR/perlin_noise_texture.outputs:r>
                float inputs:b (
                    customData = {
                        float default = 0
                    }
                    hidden = false
                    renderType = "float"
                )
                bool inputs:excludeFromWhiteMode = 0 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Material Flags"
                    displayName = "Exclude from White Mode"
                    hidden = false
                )
                bool inputs:x (
                    customData = {
                        bool default = 1
                    }
                    hidden = false
                    renderType = "bool"
                )
                bool inputs:x.connect = </World/Looks/OmniPBR/compare.outputs:out>
                float outputs:out (
                    renderType = "float"
                )
                uniform token ui:nodegraph:node:expansionState = "open"
                uniform float2 ui:nodegraph:node:pos = (-31.884296, 776.6469)
            }

            def Shader "compare" (
                apiSchemas = ["NodeGraphNodeAPI"]
            )
            {
                reorder properties = ["inputs:a", "inputs:b"]
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:mdl:sourceAsset = @nvidia/support_definitions.mdl@
                uniform token info:mdl:sourceAsset:subIdentifier = "compare"
                float inputs:a (
                    customData = {
                        float default = 0
                    }
                    hidden = false
                    renderType = "float"
                )
                float inputs:a.connect = </World/Looks/OmniPBR/perlin_noise_texture.outputs:r>
                float inputs:b = 0.5 (
                    customData = {
                        float default = 0
                    }
                    hidden = false
                    renderType = "float"
                )
                bool inputs:excludeFromWhiteMode = 0 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Material Flags"
                    displayName = "Exclude from White Mode"
                    hidden = false
                )
                bool outputs:out (
                    renderType = "bool"
                )
                uniform token ui:nodegraph:node:expansionState = "open"
                uniform float2 ui:nodegraph:node:pos = (-297.94135, 911.94666)
            }

            def Shader "multiply01" (
                apiSchemas = ["NodeGraphNodeAPI"]
            )
            {
                reorder properties = ["inputs:a", "inputs:b"]
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:mdl:sourceAsset = @nvidia/support_definitions.mdl@
                uniform token info:mdl:sourceAsset:subIdentifier = "multiply(float,float)"
                float inputs:a (
                    customData = {
                        float default = 0
                    }
                    hidden = false
                    renderType = "float"
                )
                float inputs:a.connect = </World/Looks/OmniPBR/multiply.outputs:out>
                float inputs:b (
                    customData = {
                        float default = 0
                    }
                    hidden = false
                    renderType = "float"
                )
                float inputs:b.connect = </World/Looks/OmniPBR/condition.outputs:out>
                bool inputs:excludeFromWhiteMode = 0 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Material Flags"
                    displayName = "Exclude from White Mode"
                    hidden = false
                )
                float outputs:out (
                    renderType = "float"
                )
                uniform token ui:nodegraph:node:expansionState = "open"
                uniform float2 ui:nodegraph:node:pos = (237.34415, 591.09674)
            }

            def Shader "scratched_plastic_v2" (
                apiSchemas = ["NodeGraphNodeAPI"]
            )
            {
                reorder properties = ["inputs:diffuse_color", "inputs:roughness", "inputs:anisotropy", "inputs:anisotropy_rotation", "inputs:ior", "inputs:reflectivity", "inputs:normal"]
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:mdl:sourceAsset = @nvidia/core_definitions.mdl@
                uniform token info:mdl:sourceAsset:subIdentifier = "scratched_plastic_v2"
                float inputs:anisotropy (
                    customData = {
                        float default = 0
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    displayName = "Anisotropy"
                    doc = "Higher values will stretch the highlight"
                    hidden = false
                    renderType = "float"
                )
                float inputs:anisotropy_rotation (
                    customData = {
                        float default = 0
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    displayName = "Anisotropy rotation"
                    doc = "Changes the orientation of the anisotropy. A value of 1 will rotate the orientation 360 degrees."
                    hidden = false
                    renderType = "float"
                )
                color3f inputs:diffuse_color (
                    customData = {
                        float3 default = (0.5, 0.5, 0.5)
                    }
                    displayName = "Color"
                    doc = "The color of the material"
                    hidden = false
                    renderType = "color"
                )
                color3f inputs:diffuse_color.connect = </World/Looks/OmniPBR/construct_color.outputs:out>
                bool inputs:excludeFromWhiteMode = 0 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Material Flags"
                    displayName = "Exclude from White Mode"
                    hidden = false
                )
                float inputs:ior (
                    customData = {
                        float default = 1.4
                        dictionary soft_range = {
                            float max = 4
                            float min = 1
                        }
                    }
                    displayName = "IOR"
                    doc = "Determines reflectivity"
                    hidden = false
                    renderType = "float"
                )
                float3 inputs:normal (
                    customData = {
                        float3 default = (0, 0, 0)
                    }
                    displayName = "Bumps"
                    doc = "Attach bump or normal maps here"
                    hidden = true
                    renderType = "float3"
                )
                float inputs:reflectivity (
                    customData = {
                        float default = 1
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    displayName = "Reflection weight"
                    doc = "Additional reflectivity control"
                    hidden = false
                    renderType = "float"
                )
                float inputs:roughness (
                    customData = {
                        float default = 0.2
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    displayName = "Roughness"
                    doc = "Higher roughness values lead to bigger highlights and blurry reflections"
                    hidden = false
                    renderType = "float"
                )
                token outputs:out (
                    renderType = "material"
                )
                uniform token ui:nodegraph:node:expansionState = "open"
                uniform float2 ui:nodegraph:node:pos = (472.3509, 887.17596)
            }

            def Shader "construct_color" (
                apiSchemas = ["NodeGraphNodeAPI"]
            )
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:mdl:sourceAsset = @nvidia/aux_definitions.mdl@
                uniform token info:mdl:sourceAsset:subIdentifier = "construct_color(float)"
                float inputs:a (
                    customData = {
                        float default = 0
                    }
                    hidden = false
                    renderType = "float"
                )
                float inputs:a.connect = </World/Looks/OmniPBR/x01.outputs:out>
                bool inputs:excludeFromWhiteMode = 0 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Material Flags"
                    displayName = "Exclude from White Mode"
                    hidden = false
                )
                color3f outputs:out (
                    renderType = "color"
                )
                uniform token ui:nodegraph:node:expansionState = "open"
                uniform float2 ui:nodegraph:node:pos = (126.76077, 842.6744)
            }

            def Shader "y" (
                apiSchemas = ["NodeGraphNodeAPI"]
            )
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:mdl:sourceAsset = @nvidia/aux_definitions.mdl@
                uniform token info:mdl:sourceAsset:subIdentifier = "y(float3)"
                float3 inputs:a (
                    customData = {
                        float3 default = (0, 0, 0)
                    }
                    hidden = false
                    renderType = "float3"
                )
                float3 inputs:a.connect = </World/Looks/OmniPBR/data_lookup_float3.outputs:out>
                bool inputs:excludeFromWhiteMode = 0 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Material Flags"
                    displayName = "Exclude from White Mode"
                    hidden = false
                )
                float outputs:out (
                    renderType = "float"
                )
                uniform token ui:nodegraph:node:expansionState = "open"
                uniform float2 ui:nodegraph:node:pos = (-1369.051, 687.6842)
            }

            def Shader "construct_float3" (
                apiSchemas = ["NodeGraphNodeAPI"]
            )
            {
                reorder properties = ["inputs:x", "inputs:y", "inputs:z"]
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:mdl:sourceAsset = @nvidia/aux_definitions.mdl@
                uniform token info:mdl:sourceAsset:subIdentifier = "construct_float3(float,float,float)"
                bool inputs:excludeFromWhiteMode = 0 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Material Flags"
                    displayName = "Exclude from White Mode"
                    hidden = false
                )
                float inputs:x (
                    customData = {
                        float default = 0
                    }
                    hidden = false
                    renderType = "float"
                )
                float inputs:x.connect = </World/Looks/OmniPBR/y.outputs:out>
                float inputs:y (
                    customData = {
                        float default = 0
                    }
                    hidden = false
                    renderType = "float"
                )
                float inputs:y.connect = </World/Looks/OmniPBR/y.outputs:out>
                float inputs:z (
                    customData = {
                        float default = 0
                    }
                    hidden = false
                    renderType = "float"
                )
                float inputs:z.connect = </World/Looks/OmniPBR/y.outputs:out>
                float3 outputs:out (
                    renderType = "float3"
                )
                uniform token ui:nodegraph:node:expansionState = "open"
                uniform float2 ui:nodegraph:node:pos = (-1111.6818, 685.6463)
            }

            def Shader "data_lookup_uniform_float3" (
                apiSchemas = ["NodeGraphNodeAPI"]
            )
            {
                reorder properties = ["inputs:name", "inputs:default_value"]
                uniform token info:id = ""
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:mdl:sourceAsset = @nvidia/support_definitions.mdl@
                uniform token info:mdl:sourceAsset:subIdentifier = "data_lookup_uniform_float3"
                float3 inputs:default_value (
                    customData = {
                        float3 default = (0, 0, 0)
                    }
                    hidden = false
                    renderType = "float3"
                )
                bool inputs:excludeFromWhiteMode = 0 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Material Flags"
                    displayName = "Exclude from White Mode"
                    hidden = false
                )
                string inputs:name = "random_intensity" (
                    hidden = false
                    renderType = "string"
                )
                float3 outputs:out (
                    renderType = "float3"
                )
                uniform token ui:nodegraph:node:expansionState = "open"
                uniform float2 ui:nodegraph:node:pos = (-887.7174, 1124.773)
            }

            def Backdrop "Backdrop" (
                apiSchemas = ["NodeGraphNodeAPI"]
            )
            {
                uniform token ui:description = "Preview perlin mask"
                uniform token ui:nodegraph:node:expansionState = "closed"
                uniform float2 ui:nodegraph:node:pos = (619.2451, 628.2425)
                uniform float2 ui:nodegraph:node:size = (518.46063, 420.1667)
            }

            def Shader "multiply03" (
                apiSchemas = ["NodeGraphNodeAPI"]
            )
            {
                reorder properties = ["inputs:a", "inputs:b"]
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:mdl:sourceAsset = @nvidia/support_definitions.mdl@
                uniform token info:mdl:sourceAsset:subIdentifier = "multiply(float,float)"
                float inputs:a (
                    customData = {
                        float default = 0
                    }
                    hidden = false
                    renderType = "float"
                )
                float inputs:a.connect = </World/Looks/OmniPBR/file_texture.outputs:r>
                float inputs:b (
                    customData = {
                        float default = 0
                    }
                    hidden = false
                    renderType = "float"
                )
                float inputs:b.connect = </World/Looks/OmniPBR/x01.outputs:out>
                bool inputs:excludeFromWhiteMode = 0 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Material Flags"
                    displayName = "Exclude from White Mode"
                    hidden = false
                )
                float outputs:out (
                    renderType = "float"
                )
                uniform token ui:nodegraph:node:expansionState = "open"
                uniform float2 ui:nodegraph:node:pos = (-390.1806, 491.07812)
            }

            def Shader "x01" (
                apiSchemas = ["NodeGraphNodeAPI"]
            )
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:mdl:sourceAsset = @nvidia/aux_definitions.mdl@
                uniform token info:mdl:sourceAsset:subIdentifier = "x(float3)"
                float3 inputs:a (
                    customData = {
                        float3 default = (0, 0, 0)
                    }
                    hidden = false
                    renderType = "float3"
                )
                float3 inputs:a.connect = </World/Looks/OmniPBR/data_lookup_uniform_float3.outputs:out>
                bool inputs:excludeFromWhiteMode = 0 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Material Flags"
                    displayName = "Exclude from White Mode"
                    hidden = false
                )
                float outputs:out (
                    renderType = "float"
                )
                uniform token ui:nodegraph:node:expansionState = "open"
                uniform float2 ui:nodegraph:node:pos = (-687.4775, 1120.0033)
            }
        }

        def Material "Porcelain_Tile_6_Linen"
        {
            token outputs:mdl:displacement.connect = </World/Looks/Porcelain_Tile_6_Linen/Shader.outputs:out>
            token outputs:mdl:surface.connect = </World/Looks/Porcelain_Tile_6_Linen/Shader.outputs:out>
            token outputs:mdl:volume.connect = </World/Looks/Porcelain_Tile_6_Linen/Shader.outputs:out>

            def Shader "Shader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:mdl:sourceAsset = @http://omniverse-content-production.s3-us-west-2.amazonaws.com/Materials/Base/Stone/Porcelain_Tile_6_Linen.mdl@
                uniform token info:mdl:sourceAsset:subIdentifier = "Porcelain_Tile_6_Linen"
                color3f inputs:diffuse_tint = (0.086035006, 0.08880311, 0.071316786) (
                    customData = {
                        float3 default = (1, 1, 1)
                    }
                    displayGroup = "Albedo"
                    displayName = "Color Tint"
                    doc = "When enabled, this color value is multiplied over the final albedo color"
                    hidden = false
                )
                bool inputs:excludeFromWhiteMode = 0 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Material Flags"
                    displayName = "Exclude from White Mode"
                    hidden = false
                )
                float2 inputs:texture_scale = (20, 20) (
                    customData = {
                        float2 default = (1, 1)
                    }
                    displayGroup = "UV"
                    displayName = "Texture Scale"
                    doc = "Larger number increases size of texture."
                    hidden = false
                )
                bool inputs:world_or_object = 0 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "UV"
                    displayName = "Enable World Space"
                    doc = "When set to 'true' uses world space for projection, when 'false' object space is used"
                    hidden = false
                )
                token outputs:out
            }
        }
    }

    def Mesh "Plane" (
        prepend apiSchemas = ["SemanticsAPI:Semantics_6oAx"]
    )
    {
        int[] faceVertexCounts = [4]
        int[] faceVertexIndices = [0, 2, 3, 1]
        rel material:binding = </World/Looks/Porcelain_Tile_6_Linen> (
            bindMaterialAs = "weakerThanDescendants"
        )
        normal3f[] normals = [(0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0)] (
            interpolation = "faceVarying"
        )
        point3f[] points = [(-50, 0, -50), (50, 0, -50), (-50, 0, 50), (50, 0, 50)]
        float2[] primvars:st = [(1, 0), (1, 1), (0, 1), (0, 0)] (
            interpolation = "faceVarying"
        )
        string semantic:Semantics_6oAx:params:semanticData = "floor"
        string semantic:Semantics_6oAx:params:semanticType = "class"
        uniform token subdivisionScheme = "none"
        token visibility
        double3 xformOp:rotateXYZ = (0, 0, 0)
        double3 xformOp:scale = (19.563743591308594, 1, 19.563743591308594)
        double3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def Xform "RoundedCube2" (
        instanceable = false
    )
    {
        float3 xformOp:rotateXYZ = (0, 0, 0)
        float3 xformOp:scale = (0.1, 0.1, 0.1)
        double3 xformOp:translate = (0, 10.140478753317057, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

        def Scope "Looks"
        {
            def Material "Material"
            {
                token outputs:mdl:displacement.connect = </World/RoundedCube2/Looks/Material/Material.outputs:out>
                token outputs:mdl:surface.connect = </World/RoundedCube2/Looks/Material/Material.outputs:out>
                token outputs:mdl:volume.connect = </World/RoundedCube2/Looks/Material/Material.outputs:out>

                def Shader "Material"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:mdl:sourceAsset = @OmniPBR.mdl@
                    uniform token info:mdl:sourceAsset:subIdentifier = "OmniPBR"
                    color3f inputs:diffuse_color_constant = (0.8, 0.8, 0.8) (
                        customData = {
                            float3 default = (1, 1, 1)
                            dictionary range = {
                                float3 max = (1, 1, 1)
                                float3 min = (0, 0, 0)
                            }
                        }
                        displayGroup = "Albedo"
                        displayName = "Base Color"
                    )
                    color3f inputs:emissive_color = (1, 1, 1) (
                        customData = {
                            float3 default = (1, 1, 1)
                            dictionary range = {
                                float3 max = (1, 1, 1)
                                float3 min = (0, 0, 0)
                            }
                        }
                        displayGroup = "Emissive"
                        displayName = "Emissive Color"
                    )
                    float inputs:emissive_intensity = 10000 (
                        customData = {
                            float default = 10000
                            dictionary range = {
                                float max = 100000
                                float min = 0
                            }
                        }
                        displayGroup = "Emissive"
                        displayName = "Emissive Intensity"
                    )
                    bool inputs:enable_emission = 0 (
                        customData = {
                            bool default = 0
                        }
                        displayGroup = "Emissive"
                        displayName = "Enable Emission"
                    )
                    bool inputs:enable_opacity = 1 (
                        customData = {
                            bool default = 0
                        }
                        displayGroup = "Opacity"
                        displayName = "Enable Opacity"
                    )
                    bool inputs:enable_opacity_texture = 0 (
                        customData = {
                            bool default = 0
                        }
                        displayGroup = "Opacity"
                        displayName = "Enable Opacity Texture"
                    )
                    bool inputs:excludeFromWhiteMode = 0 (
                        customData = {
                            bool default = 0
                        }
                        displayGroup = "Material Flags"
                        displayName = "Exclude from White Mode"
                        hidden = false
                    )
                    float inputs:opacity_constant = 1 (
                        customData = {
                            float default = 1
                            dictionary range = {
                                float max = 1
                                float min = 0
                            }
                        }
                        displayGroup = "Opacity"
                        displayName = "Opacity Amount"
                    )
                    int inputs:opacity_mode = 1 (
                        customData = {
                            int default = 1
                            dictionary range = {
                                int max = 3
                                int min = 0
                            }
                        }
                        displayGroup = "Opacity"
                        displayName = "Opacity Mono Source"
                        renderType = "::base::mono_mode"
                        sdrMetadata = {
                            string __SDR__enum_value = "mono_average"
                            string options = "mono_alpha:0|mono_average:1|mono_luminance:2|mono_maximum:3"
                        }
                    )
                    float inputs:opacity_threshold = 0 (
                        customData = {
                            float default = 0
                            dictionary range = {
                                float max = 1
                                float min = 0
                            }
                        }
                        displayGroup = "Opacity"
                        displayName = "Opacity Threshold"
                    )
                    float inputs:texture_rotate = 0 (
                        customData = {
                            float default = 0
                            dictionary range = {
                                float max = 360
                                float min = 0
                            }
                        }
                        displayGroup = "UV"
                        displayName = "Texture Rotate"
                    )
                    float2 inputs:texture_scale = (1, 1) (
                        customData = {
                            float2 default = (1, 1)
                        }
                        displayGroup = "UV"
                        displayName = "Texture Scale"
                    )
                    float2 inputs:texture_translate = (0, 0) (
                        customData = {
                            float2 default = (0, 0)
                        }
                        displayGroup = "UV"
                        displayName = "Texture Translate"
                    )
                    token outputs:out
                }
            }
        }

        def Xform "Cube" (
            prepend apiSchemas = ["SemanticsAPI:Semantics_hnPa"]
        )
        {
            string semantic:Semantics_hnPa:params:semanticData = "box"
            string semantic:Semantics_hnPa:params:semanticType = "class"
            float3 xformOp:rotateXYZ = (-90.00001, -0, 0)
            float3 xformOp:scale = (100, 100, 100)
            double3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

            def Mesh "Cube"
            {
                float3[] extent = [(-0.9991834, -0.9991834, -0.9991834), (0.9991834, 0.9991834, 0.9991834)]
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [137, 582, 648, 576, 582, 27, 642, 648, 648, 642, 83, 624, 576, 648, 624, 189, 191, 599, 649, 581, 599, 162, 635, 649, 649, 635, 109, 611, 581, 649, 611, 135, 82, 600, 650, 629, 600, 56, 617, 650, 650, 617, 163, 594, 629, 650, 594, 190, 1, 636, 651, 618, 636, 110, 630, 651, 651, 630, 164, 612, 618, 651, 612, 55, 29, 588, 652, 647, 588, 2, 623, 652, 652, 623, 54, 605, 647, 652, 605, 81, 0, 217, 653, 216, 217, 3, 218, 653, 653, 218, 6, 219, 216, 653, 219, 5, 3, 220, 654, 218, 220, 4, 221, 654, 654, 221, 7, 222, 218, 654, 222, 6, 4, 223, 655, 221, 223, 16, 224, 655, 655, 224, 17, 225, 221, 655, 225, 7, 5, 219, 656, 226, 219, 6, 227, 656, 656, 227, 9, 228, 226, 656, 228, 8, 6, 222, 657, 227, 222, 7, 229, 657, 657, 229, 10, 230, 227, 657, 230, 9, 7, 225, 658, 229, 225, 17, 231, 658, 658, 231, 18, 232, 229, 658, 232, 10, 1, 234, 659, 233, 234, 11, 235, 659, 659, 235, 14, 236, 233, 659, 236, 13, 11, 237, 660, 235, 237, 12, 238, 660, 660, 238, 15, 239, 235, 660, 239, 14, 12, 240, 661, 238, 240, 24, 241, 661, 661, 241, 25, 242, 238, 661, 242, 15, 13, 236, 662, 243, 236, 14, 244, 662, 662, 244, 17, 224, 243, 662, 224, 16, 14, 239, 663, 244, 239, 15, 245, 663, 663, 245, 18, 231, 244, 663, 231, 17, 15, 242, 664, 245, 242, 25, 246, 664, 664, 246, 26, 247, 245, 664, 247, 18, 2, 249, 665, 248, 249, 19, 250, 665, 665, 250, 22, 251, 248, 665, 251, 21, 19, 252, 666, 250, 252, 20, 253, 666, 666, 253, 23, 254, 250, 666, 254, 22, 20, 255, 667, 253, 255, 8, 228, 667, 667, 228, 9, 256, 253, 667, 256, 23, 21, 251, 668, 257, 251, 22, 258, 668, 668, 258, 25, 241, 257, 668, 241, 24, 22, 254, 669, 258, 254, 23, 259, 669, 669, 259, 26, 246, 258, 669, 246, 25, 23, 256, 670, 259, 256, 9, 230, 670, 670, 230, 10, 260, 259, 670, 260, 26, 10, 232, 671, 260, 18, 247, 671, 232, 26, 260, 671, 247, 27, 262, 672, 261, 262, 30, 263, 672, 672, 263, 33, 264, 261, 672, 264, 32, 30, 265, 673, 263, 265, 31, 266, 673, 673, 266, 34, 267, 263, 673, 267, 33, 31, 268, 674, 266, 268, 43, 269, 674, 674, 269, 44, 270, 266, 674, 270, 34, 32, 264, 675, 271, 264, 33, 272, 675, 675, 272, 36, 273, 271, 675, 273, 35, 33, 267, 676, 272, 267, 34, 274, 676, 676, 274, 37, 275, 272, 676, 275, 36, 34, 270, 677, 274, 270, 44, 276, 677, 677, 276, 45, 277, 274, 677, 277, 37, 28, 279, 678, 278, 279, 38, 280, 678, 678, 280, 41, 281, 278, 678, 281, 40, 38, 282, 679, 280, 282, 39, 283, 679, 679, 283, 42, 284, 280, 679, 284, 41, 39, 285, 680, 283, 285, 51, 286, 680, 680, 286, 52, 287, 283, 680, 287, 42, 40, 281, 681, 288, 281, 41, 289, 681, 681, 289, 44, 269, 288, 681, 269, 43, 41, 284, 682, 289, 284, 42, 290, 682, 682, 290, 45, 276, 289, 682, 276, 44, 42, 287, 683, 290, 287, 52, 291, 683, 683, 291, 53, 292, 290, 683, 292, 45, 29, 294, 684, 293, 294, 46, 295, 684, 684, 295, 49, 296, 293, 684, 296, 48, 46, 297, 685, 295, 297, 47, 298, 685, 685, 298, 50, 299, 295, 685, 299, 49, 47, 300, 686, 298, 300, 35, 273, 686, 686, 273, 36, 301, 298, 686, 301, 50, 48, 296, 687, 302, 296, 49, 303, 687, 687, 303, 52, 286, 302, 687, 286, 51, 49, 299, 688, 303, 299, 50, 304, 688, 688, 304, 53, 291, 303, 688, 291, 52, 50, 301, 689, 304, 301, 36, 275, 689, 689, 275, 37, 305, 304, 689, 305, 53, 37, 277, 690, 305, 45, 292, 690, 277, 53, 305, 690, 292, 54, 307, 691, 306, 307, 57, 308, 691, 691, 308, 60, 309, 306, 691, 309, 59, 57, 310, 692, 308, 310, 58, 311, 692, 692, 311, 61, 312, 308, 692, 312, 60, 58, 313, 693, 311, 313, 70, 314, 693, 693, 314, 71, 315, 311, 693, 315, 61, 59, 309, 694, 316, 309, 60, 317, 694, 694, 317, 63, 318, 316, 694, 318, 62, 60, 312, 695, 317, 312, 61, 319, 695, 695, 319, 64, 320, 317, 695, 320, 63, 61, 315, 696, 319, 315, 71, 321, 696, 696, 321, 72, 322, 319, 696, 322, 64, 55, 324, 697, 323, 324, 65, 325, 697, 697, 325, 68, 326, 323, 697, 326, 67, 65, 327, 698, 325, 327, 66, 328, 698, 698, 328, 69, 329, 325, 698, 329, 68, 66, 330, 699, 328, 330, 78, 331, 699, 699, 331, 79, 332, 328, 699, 332, 69, 67, 326, 700, 333, 326, 68, 334, 700, 700, 334, 71, 314, 333, 700, 314, 70, 68, 329, 701, 334, 329, 69, 335, 701, 701, 335, 72, 321, 334, 701, 321, 71, 69, 332, 702, 335, 332, 79, 336, 702, 702, 336, 80, 337, 335, 702, 337, 72, 56, 339, 703, 338, 339, 73, 340, 703, 703, 340, 76, 341, 338, 703, 341, 75, 73, 342, 704, 340, 342, 74, 343, 704, 704, 343, 77, 344, 340, 704, 344, 76, 74, 345, 705, 343, 345, 62, 318, 705, 705, 318, 63, 346, 343, 705, 346, 77, 75, 341, 706, 347, 341, 76, 348, 706, 706, 348, 79, 331, 347, 706, 331, 78, 76, 344, 707, 348, 344, 77, 349, 707, 707, 349, 80, 336, 348, 707, 336, 79, 77, 346, 708, 349, 346, 63, 320, 708, 708, 320, 64, 350, 349, 708, 350, 80, 64, 322, 709, 350, 72, 337, 709, 322, 80, 350, 709, 337, 81, 352, 710, 351, 352, 84, 353, 710, 710, 353, 87, 354, 351, 710, 354, 86, 84, 355, 711, 353, 355, 85, 356, 711, 711, 356, 88, 357, 353, 711, 357, 87, 85, 358, 712, 356, 358, 97, 359, 712, 712, 359, 98, 360, 356, 712, 360, 88, 86, 354, 713, 361, 354, 87, 362, 713, 713, 362, 90, 363, 361, 713, 363, 89, 87, 357, 714, 362, 357, 88, 364, 714, 714, 364, 91, 365, 362, 714, 365, 90, 88, 360, 715, 364, 360, 98, 366, 715, 715, 366, 99, 367, 364, 715, 367, 91, 82, 369, 716, 368, 369, 92, 370, 716, 716, 370, 95, 371, 368, 716, 371, 94, 92, 372, 717, 370, 372, 93, 373, 717, 717, 373, 96, 374, 370, 717, 374, 95, 93, 375, 718, 373, 375, 105, 376, 718, 718, 376, 106, 377, 373, 718, 377, 96, 94, 371, 719, 378, 371, 95, 379, 719, 719, 379, 98, 359, 378, 719, 359, 97, 95, 374, 720, 379, 374, 96, 380, 720, 720, 380, 99, 366, 379, 720, 366, 98, 96, 377, 721, 380, 377, 106, 381, 721, 721, 381, 107, 382, 380, 721, 382, 99, 83, 384, 722, 383, 384, 100, 385, 722, 722, 385, 103, 386, 383, 722, 386, 102, 100, 387, 723, 385, 387, 101, 388, 723, 723, 388, 104, 389, 385, 723, 389, 103, 101, 390, 724, 388, 390, 89, 363, 724, 724, 363, 90, 391, 388, 724, 391, 104, 102, 386, 725, 392, 386, 103, 393, 725, 725, 393, 106, 376, 392, 725, 376, 105, 103, 389, 726, 393, 389, 104, 394, 726, 726, 394, 107, 381, 393, 726, 381, 106, 104, 391, 727, 394, 391, 90, 365, 727, 727, 365, 91, 395, 394, 727, 395, 107, 91, 367, 728, 395, 99, 382, 728, 367, 107, 395, 728, 382, 108, 397, 729, 396, 397, 111, 398, 729, 729, 398, 114, 399, 396, 729, 399, 113, 111, 400, 730, 398, 400, 112, 401, 730, 730, 401, 115, 402, 398, 730, 402, 114, 112, 403, 731, 401, 403, 124, 404, 731, 731, 404, 125, 405, 401, 731, 405, 115, 113, 399, 732, 406, 399, 114, 407, 732, 732, 407, 117, 408, 406, 732, 408, 116, 114, 402, 733, 407, 402, 115, 409, 733, 733, 409, 118, 410, 407, 733, 410, 117, 115, 405, 734, 409, 405, 125, 411, 734, 734, 411, 126, 412, 409, 734, 412, 118, 109, 414, 735, 413, 414, 119, 415, 735, 735, 415, 122, 416, 413, 735, 416, 121, 119, 417, 736, 415, 417, 120, 418, 736, 736, 418, 123, 419, 415, 736, 419, 122, 120, 420, 737, 418, 420, 132, 421, 737, 737, 421, 133, 422, 418, 737, 422, 123, 121, 416, 738, 423, 416, 122, 424, 738, 738, 424, 125, 404, 423, 738, 404, 124, 122, 419, 739, 424, 419, 123, 425, 739, 739, 425, 126, 411, 424, 739, 411, 125, 123, 422, 740, 425, 422, 133, 426, 740, 740, 426, 134, 427, 425, 740, 427, 126, 110, 429, 741, 428, 429, 127, 430, 741, 741, 430, 130, 431, 428, 741, 431, 129, 127, 432, 742, 430, 432, 128, 433, 742, 742, 433, 131, 434, 430, 742, 434, 130, 128, 435, 743, 433, 435, 116, 408, 743, 743, 408, 117, 436, 433, 743, 436, 131, 129, 431, 744, 437, 431, 130, 438, 744, 744, 438, 133, 421, 437, 744, 421, 132, 130, 434, 745, 438, 434, 131, 439, 745, 745, 439, 134, 426, 438, 745, 426, 133, 131, 436, 746, 439, 436, 117, 410, 746, 746, 410, 118, 440, 439, 746, 440, 134, 118, 412, 747, 440, 126, 427, 747, 412, 134, 440, 747, 427, 135, 442, 748, 441, 442, 138, 443, 748, 748, 443, 141, 444, 441, 748, 444, 140, 138, 445, 749, 443, 445, 139, 446, 749, 749, 446, 142, 447, 443, 749, 447, 141, 139, 448, 750, 446, 448, 151, 449, 750, 750, 449, 152, 450, 446, 750, 450, 142, 140, 444, 751, 451, 444, 141, 452, 751, 751, 452, 144, 453, 451, 751, 453, 143, 141, 447, 752, 452, 447, 142, 454, 752, 752, 454, 145, 455, 452, 752, 455, 144, 142, 450, 753, 454, 450, 152, 456, 753, 753, 456, 153, 457, 454, 753, 457, 145, 136, 459, 754, 458, 459, 146, 460, 754, 754, 460, 149, 461, 458, 754, 461, 148, 146, 462, 755, 460, 462, 147, 463, 755, 755, 463, 150, 464, 460, 755, 464, 149, 147, 465, 756, 463, 465, 159, 466, 756, 756, 466, 160, 467, 463, 756, 467, 150, 148, 461, 757, 468, 461, 149, 469, 757, 757, 469, 152, 449, 468, 757, 449, 151, 149, 464, 758, 469, 464, 150, 470, 758, 758, 470, 153, 456, 469, 758, 456, 152, 150, 467, 759, 470, 467, 160, 471, 759, 759, 471, 161, 472, 470, 759, 472, 153, 137, 474, 760, 473, 474, 154, 475, 760, 760, 475, 157, 476, 473, 760, 476, 156, 154, 477, 761, 475, 477, 155, 478, 761, 761, 478, 158, 479, 475, 761, 479, 157, 155, 480, 762, 478, 480, 143, 453, 762, 762, 453, 144, 481, 478, 762, 481, 158, 156, 476, 763, 482, 476, 157, 483, 763, 763, 483, 160, 466, 482, 763, 466, 159, 157, 479, 764, 483, 479, 158, 484, 764, 764, 484, 161, 471, 483, 764, 471, 160, 158, 481, 765, 484, 481, 144, 455, 765, 765, 455, 145, 485, 484, 765, 485, 161, 145, 457, 766, 485, 153, 472, 766, 457, 161, 485, 766, 472, 162, 487, 767, 486, 487, 165, 488, 767, 767, 488, 168, 489, 486, 767, 489, 167, 165, 490, 768, 488, 490, 166, 491, 768, 768, 491, 169, 492, 488, 768, 492, 168, 166, 493, 769, 491, 493, 178, 494, 769, 769, 494, 179, 495, 491, 769, 495, 169, 167, 489, 770, 496, 489, 168, 497, 770, 770, 497, 171, 498, 496, 770, 498, 170, 168, 492, 771, 497, 492, 169, 499, 771, 771, 499, 172, 500, 497, 771, 500, 171, 169, 495, 772, 499, 495, 179, 501, 772, 772, 501, 180, 502, 499, 772, 502, 172, 163, 504, 773, 503, 504, 173, 505, 773, 773, 505, 176, 506, 503, 773, 506, 175, 173, 507, 774, 505, 507, 174, 508, 774, 774, 508, 177, 509, 505, 774, 509, 176, 174, 510, 775, 508, 510, 186, 511, 775, 775, 511, 187, 512, 508, 775, 512, 177, 175, 506, 776, 513, 506, 176, 514, 776, 776, 514, 179, 494, 513, 776, 494, 178, 176, 509, 777, 514, 509, 177, 515, 777, 777, 515, 180, 501, 514, 777, 501, 179, 177, 512, 778, 515, 512, 187, 516, 778, 778, 516, 188, 517, 515, 778, 517, 180, 164, 519, 779, 518, 519, 181, 520, 779, 779, 520, 184, 521, 518, 779, 521, 183, 181, 522, 780, 520, 522, 182, 523, 780, 780, 523, 185, 524, 520, 780, 524, 184, 182, 525, 781, 523, 525, 170, 498, 781, 781, 498, 171, 526, 523, 781, 526, 185, 183, 521, 782, 527, 521, 184, 528, 782, 782, 528, 187, 511, 527, 782, 511, 186, 184, 524, 783, 528, 524, 185, 529, 783, 783, 529, 188, 516, 528, 783, 516, 187, 185, 526, 784, 529, 526, 171, 500, 784, 784, 500, 172, 530, 529, 784, 530, 188, 172, 502, 785, 530, 180, 517, 785, 502, 188, 530, 785, 517, 189, 532, 786, 531, 532, 192, 533, 786, 786, 533, 195, 534, 531, 786, 534, 194, 192, 535, 787, 533, 535, 193, 536, 787, 787, 536, 196, 537, 533, 787, 537, 195, 193, 538, 788, 536, 538, 205, 539, 788, 788, 539, 206, 540, 536, 788, 540, 196, 194, 534, 789, 541, 534, 195, 542, 789, 789, 542, 198, 543, 541, 789, 543, 197, 195, 537, 790, 542, 537, 196, 544, 790, 790, 544, 199, 545, 542, 790, 545, 198, 196, 540, 791, 544, 540, 206, 546, 791, 791, 546, 207, 547, 544, 791, 547, 199, 190, 549, 792, 548, 549, 200, 550, 792, 792, 550, 203, 551, 548, 792, 551, 202, 200, 552, 793, 550, 552, 201, 553, 793, 793, 553, 204, 554, 550, 793, 554, 203, 201, 555, 794, 553, 555, 213, 556, 794, 794, 556, 214, 557, 553, 794, 557, 204, 202, 551, 795, 558, 551, 203, 559, 795, 795, 559, 206, 539, 558, 795, 539, 205, 203, 554, 796, 559, 554, 204, 560, 796, 796, 560, 207, 546, 559, 796, 546, 206, 204, 557, 797, 560, 557, 214, 561, 797, 797, 561, 215, 562, 560, 797, 562, 207, 191, 564, 798, 563, 564, 208, 565, 798, 798, 565, 211, 566, 563, 798, 566, 210, 208, 567, 799, 565, 567, 209, 568, 799, 799, 568, 212, 569, 565, 799, 569, 211, 209, 570, 800, 568, 570, 197, 543, 800, 800, 543, 198, 571, 568, 800, 571, 212, 210, 566, 801, 572, 566, 211, 573, 801, 801, 573, 214, 556, 572, 801, 556, 213, 211, 569, 802, 573, 569, 212, 574, 802, 802, 574, 215, 561, 573, 802, 561, 214, 212, 571, 803, 574, 571, 198, 545, 803, 803, 545, 199, 575, 574, 803, 575, 215, 199, 547, 804, 575, 207, 562, 804, 547, 215, 575, 804, 562, 137, 576, 805, 474, 576, 189, 531, 805, 805, 531, 194, 577, 474, 805, 577, 154, 154, 577, 806, 477, 577, 194, 541, 806, 806, 541, 197, 578, 477, 806, 578, 155, 155, 578, 807, 480, 578, 197, 570, 807, 807, 570, 209, 579, 480, 807, 579, 143, 143, 579, 808, 451, 579, 209, 567, 808, 808, 567, 208, 580, 451, 808, 580, 140, 140, 580, 809, 441, 580, 208, 564, 809, 809, 564, 191, 581, 441, 809, 581, 135, 27, 582, 810, 262, 582, 137, 473, 810, 810, 473, 156, 583, 262, 810, 583, 30, 30, 583, 811, 265, 583, 156, 482, 811, 811, 482, 159, 584, 265, 811, 584, 31, 31, 584, 812, 268, 584, 159, 465, 812, 812, 465, 147, 585, 268, 812, 585, 43, 43, 585, 813, 288, 585, 147, 462, 813, 813, 462, 146, 586, 288, 813, 586, 40, 40, 586, 814, 278, 586, 146, 459, 814, 814, 459, 136, 587, 278, 814, 587, 28, 2, 588, 815, 249, 588, 29, 293, 815, 815, 293, 48, 589, 249, 815, 589, 19, 19, 589, 816, 252, 589, 48, 302, 816, 816, 302, 51, 590, 252, 816, 590, 20, 20, 590, 817, 255, 590, 51, 285, 817, 817, 285, 39, 591, 255, 817, 591, 8, 8, 591, 818, 226, 591, 39, 282, 818, 818, 282, 38, 592, 226, 818, 592, 5, 5, 592, 819, 216, 592, 38, 279, 819, 819, 279, 28, 593, 216, 819, 593, 0, 190, 594, 820, 549, 594, 163, 503, 820, 820, 503, 175, 595, 549, 820, 595, 200, 200, 595, 821, 552, 595, 175, 513, 821, 821, 513, 178, 596, 552, 821, 596, 201, 201, 596, 822, 555, 596, 178, 493, 822, 822, 493, 166, 597, 555, 822, 597, 213, 213, 597, 823, 572, 597, 166, 490, 823, 823, 490, 165, 598, 572, 823, 598, 210, 210, 598, 824, 563, 598, 165, 487, 824, 824, 487, 162, 599, 563, 824, 599, 191, 56, 600, 825, 339, 600, 82, 368, 825, 825, 368, 94, 601, 339, 825, 601, 73, 73, 601, 826, 342, 601, 94, 378, 826, 826, 378, 97, 602, 342, 826, 602, 74, 74, 602, 827, 345, 602, 97, 358, 827, 827, 358, 85, 603, 345, 827, 603, 62, 62, 603, 828, 316, 603, 85, 355, 828, 828, 355, 84, 604, 316, 828, 604, 59, 59, 604, 829, 306, 604, 84, 352, 829, 829, 352, 81, 605, 306, 829, 605, 54, 108, 606, 830, 397, 606, 136, 458, 830, 830, 458, 148, 607, 397, 830, 607, 111, 111, 607, 831, 400, 607, 148, 468, 831, 831, 468, 151, 608, 400, 831, 608, 112, 112, 608, 832, 403, 608, 151, 448, 832, 832, 448, 139, 609, 403, 832, 609, 124, 124, 609, 833, 423, 609, 139, 445, 833, 833, 445, 138, 610, 423, 833, 610, 121, 121, 610, 834, 413, 610, 138, 442, 834, 834, 442, 135, 611, 413, 834, 611, 109, 55, 612, 835, 324, 612, 164, 518, 835, 835, 518, 183, 613, 324, 835, 613, 65, 65, 613, 836, 327, 613, 183, 527, 836, 836, 527, 186, 614, 327, 836, 614, 66, 66, 614, 837, 330, 614, 186, 510, 837, 837, 510, 174, 615, 330, 837, 615, 78, 78, 615, 838, 347, 615, 174, 507, 838, 838, 507, 173, 616, 347, 838, 616, 75, 75, 616, 839, 338, 616, 173, 504, 839, 839, 504, 163, 617, 338, 839, 617, 56, 1, 618, 840, 234, 618, 55, 323, 840, 840, 323, 67, 619, 234, 840, 619, 11, 11, 619, 841, 237, 619, 67, 333, 841, 841, 333, 70, 620, 237, 841, 620, 12, 12, 620, 842, 240, 620, 70, 313, 842, 842, 313, 58, 621, 240, 842, 621, 24, 24, 621, 843, 257, 621, 58, 310, 843, 843, 310, 57, 622, 257, 843, 622, 21, 21, 622, 844, 248, 622, 57, 307, 844, 844, 307, 54, 623, 248, 844, 623, 2, 189, 624, 845, 532, 624, 83, 383, 845, 845, 383, 102, 625, 532, 845, 625, 192, 192, 625, 846, 535, 625, 102, 392, 846, 846, 392, 105, 626, 535, 846, 626, 193, 193, 626, 847, 538, 626, 105, 375, 847, 847, 375, 93, 627, 538, 847, 627, 205, 205, 627, 848, 558, 627, 93, 372, 848, 848, 372, 92, 628, 558, 848, 628, 202, 202, 628, 849, 548, 628, 92, 369, 849, 849, 369, 82, 629, 548, 849, 629, 190, 164, 630, 850, 519, 630, 110, 428, 850, 850, 428, 129, 631, 519, 850, 631, 181, 181, 631, 851, 522, 631, 129, 437, 851, 851, 437, 132, 632, 522, 851, 632, 182, 182, 632, 852, 525, 632, 132, 420, 852, 852, 420, 120, 633, 525, 852, 633, 170, 170, 633, 853, 496, 633, 120, 417, 853, 853, 417, 119, 634, 496, 853, 634, 167, 167, 634, 854, 486, 634, 119, 414, 854, 854, 414, 109, 635, 486, 854, 635, 162, 110, 636, 855, 429, 636, 1, 233, 855, 855, 233, 13, 637, 429, 855, 637, 127, 127, 637, 856, 432, 637, 13, 243, 856, 856, 243, 16, 638, 432, 856, 638, 128, 128, 638, 857, 435, 638, 16, 223, 857, 857, 223, 4, 639, 435, 857, 639, 116, 116, 639, 858, 406, 639, 4, 220, 858, 858, 220, 3, 640, 406, 858, 640, 113, 113, 640, 859, 396, 640, 3, 217, 859, 859, 217, 0, 641, 396, 859, 641, 108, 83, 642, 860, 384, 642, 27, 261, 860, 860, 261, 32, 643, 384, 860, 643, 100, 100, 643, 861, 387, 643, 32, 271, 861, 861, 271, 35, 644, 387, 861, 644, 101, 101, 644, 862, 390, 644, 35, 300, 862, 862, 300, 47, 645, 390, 862, 645, 89, 89, 645, 863, 361, 645, 47, 297, 863, 863, 297, 46, 646, 361, 863, 646, 86, 86, 646, 864, 351, 646, 46, 294, 864, 864, 294, 29, 647, 351, 864, 647, 81, 136, 606, 865, 587, 606, 108, 641, 865, 865, 641, 0, 593, 587, 865, 593, 28]
                rel material:binding = </World/Looks/OmniPBR> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                normal3f[] normals = [(-0.008729805, 0.008729596, -0.9999238), (-7.1150135e-9, 0.008707444, -0.9999621), (-6.7072192e-9, 1.3525607e-8, -1), (-0.00870758, -1.0376061e-9, -0.9999621), (-7.1150135e-9, 0.008707444, -0.9999621), (0.00872978, 0.008729593, -0.9999238), (0.008707573, 2.8274766e-8, -0.9999621), (-6.7072192e-9, 1.3525607e-8, -1), (-6.7072192e-9, 1.3525607e-8, -1), (0.008707573, 2.8274766e-8, -0.9999621), (0.008729802, -0.008729626, -0.9999238), (4.8174564e-10, -0.008707456, -0.9999621), (-0.00870758, -1.0376061e-9, -0.9999621), (-6.7072192e-9, 1.3525607e-8, -1), (4.8174564e-10, -0.008707456, -0.9999621), (-0.008729784, -0.008729593, -0.9999238), (-0.9999237, -0.00872982, -0.00872964), (-0.9999621, -0.008707771, 3.705736e-11), (-1, 1.4822583e-10, -1.35997205e-8), (-0.9999621, -1.4822944e-10, -0.008707618), (-0.9999621, -0.008707771, 3.705736e-11), (-0.9999237, -0.008729834, 0.008729639), (-0.9999621, 5.9291777e-10, 0.008707634), (-1, 1.4822583e-10, -1.35997205e-8), (-1, 1.4822583e-10, -1.35997205e-8), (-0.9999621, 5.9291777e-10, 0.008707634), (-0.9999237, 0.008729818, 0.008729671), (-0.9999621, 0.008707768, -2.7311271e-8), (-0.9999621, -1.4822944e-10, -0.008707618), (-1, 1.4822583e-10, -1.35997205e-8), (-0.9999621, 0.008707768, -2.7311271e-8), (-0.9999237, 0.008729834, -0.0087296385), (0.008729553, -0.9999237, -0.008729913), (0.008707444, -0.9999621, -7.1150135e-9), (1.3525607e-8, -1, -6.7072192e-9), (-1.3711223e-9, -0.9999621, -0.008707794), (0.008707444, -0.9999621, -7.1150135e-9), (0.008729552, -0.99992377, 0.008729888), (2.849711e-8, -0.9999621, 0.008707787), (1.3525607e-8, -1, -6.7072192e-9), (1.3525607e-8, -1, -6.7072192e-9), (2.849711e-8, -0.9999621, 0.008707787), (-0.008729584, -0.9999237, 0.008729909), (-0.008707456, -0.9999621, 4.8174564e-10), (-1.3711223e-9, -0.9999621, -0.008707794), (1.3525607e-8, -1, -6.7072192e-9), (-0.008707456, -0.9999621, 4.8174564e-10), (-0.008729551, -0.99992377, -0.008729891), (0.008729805, 0.008729596, 0.9999238), (7.1150135e-9, 0.008707444, 0.9999621), (6.7072192e-9, 1.3525607e-8, 1), (0.00870758, -1.0376061e-9, 0.9999621), (7.1150135e-9, 0.008707444, 0.9999621), (-0.008729781, 0.008729593, 0.9999238), (-0.008707573, 2.8274766e-8, 0.9999621), (6.7072192e-9, 1.3525607e-8, 1), (6.7072192e-9, 1.3525607e-8, 1), (-0.008707573, 2.8274766e-8, 0.9999621), (-0.008729802, -0.008729626, 0.9999238), (-4.8174564e-10, -0.008707456, 0.9999621), (0.00870758, -1.0376061e-9, 0.9999621), (6.7072192e-9, 1.3525607e-8, 1), (-4.8174564e-10, -0.008707456, 0.9999621), (0.008729784, -0.008729593, 0.9999238), (0.99992377, 0.008729713, -0.008729682), (0.9999621, 0.008707556, -3.3351624e-10), (1, -1.4822583e-10, -1.35997205e-8), (0.9999621, 1.4822944e-10, -0.008707618), (0.9999621, 0.008707556, -3.3351624e-10), (0.9999237, 0.008729726, 0.0087296795), (0.9999621, -5.9291777e-10, 0.008707634), (1, -1.4822583e-10, -1.35997205e-8), (1, -1.4822583e-10, -1.35997205e-8), (0.9999621, -5.9291777e-10, 0.008707634), (0.9999237, -0.008729818, 0.008729671), (0.9999621, -0.008707768, -2.7311271e-8), (0.9999621, 1.4822944e-10, -0.008707618), (1, -1.4822583e-10, -1.35997205e-8), (0.9999621, -0.008707768, -2.7311271e-8), (0.9999237, -0.008729834, -0.008729639), (0.008729672, 0.9999237, 0.008729846), (0.008746007, 0.9977234, 0.06686915), (0.06644025, 0.99557585, 0.06644032), (0.06686938, 0.99772346, 0.0087461565), (0.008746007, 0.9977234, 0.06686915), (0.008556292, 0.9674983, 0.25273272), (0.06435965, 0.96589714, 0.2507995), (0.06644025, 0.99557585, 0.06644032), (0.06644025, 0.99557585, 0.06644032), (0.06435965, 0.96589714, 0.2507995), (0.24323283, 0.938976, 0.24323209), (0.2508007, 0.9658969, 0.06436012), (0.06686938, 0.99772346, 0.0087461565), (0.06644025, 0.99557585, 0.06644032), (0.2508007, 0.9658969, 0.06436012), (0.25273377, 0.967498, 0.008556321), (0.008556292, 0.9674983, 0.25273272), (0.008026635, 0.891298, 0.45334697), (0.05982674, 0.8907366, 0.45056525), (0.06435965, 0.96589714, 0.2507995), (0.008026635, 0.891298, 0.45334697), (0.0076084374, 0.8095282, 0.5870317), (0.056214884, 0.80958354, 0.58430666), (0.05982674, 0.8907366, 0.45056525), (0.05982674, 0.8907366, 0.45056525), (0.056214884, 0.80958354, 0.58430666), (0.21497607, 0.79324776, 0.5696871), (0.22809164, 0.86932886, 0.43845367), (0.06435965, 0.96589714, 0.2507995), (0.05982674, 0.8907366, 0.45056525), (0.22809164, 0.86932886, 0.43845367), (0.24323283, 0.938976, 0.24323209), (0.0076084374, 0.8095282, 0.5870317), (0.007422134, 0.70708597, 0.70708865), (0.054678343, 0.70604795, 0.70605), (0.056214884, 0.80958354, 0.58430666), (0.007422134, 0.70708597, 0.70708865), (0.00760861, 0.5870307, 0.8095288), (0.056214325, 0.58430594, 0.80958414), (0.054678343, 0.70604795, 0.70605), (0.054678343, 0.70604795, 0.70605), (0.056214325, 0.58430594, 0.80958414), (0.21497561, 0.5696873, 0.79324764), (0.20921785, 0.69145775, 0.691458), (0.056214884, 0.80958354, 0.58430666), (0.054678343, 0.70604795, 0.70605), (0.20921785, 0.69145775, 0.691458), (0.21497607, 0.79324776, 0.5696871), (0.25273377, 0.967498, 0.008556321), (0.2508007, 0.9658969, 0.06436012), (0.4505659, 0.8907363, 0.059826467), (0.45334852, 0.8912973, 0.008026781), (0.2508007, 0.9658969, 0.06436012), (0.24323283, 0.938976, 0.24323209), (0.4384547, 0.86932856, 0.22809105), (0.4505659, 0.8907363, 0.059826467), (0.4505659, 0.8907363, 0.059826467), (0.4384547, 0.86932856, 0.22809105), (0.5696871, 0.7932478, 0.21497588), (0.5843059, 0.8095842, 0.05621441), (0.45334852, 0.8912973, 0.008026781), (0.4505659, 0.8907363, 0.059826467), (0.5843059, 0.8095842, 0.05621441), (0.58703077, 0.8095288, 0.007608584), (0.24323283, 0.938976, 0.24323209), (0.22809164, 0.86932886, 0.43845367), (0.41160718, 0.81311715, 0.41160667), (0.4384547, 0.86932856, 0.22809105), (0.22809164, 0.86932886, 0.43845367), (0.21497607, 0.79324776, 0.5696871), (0.386221, 0.7511227, 0.5353954), (0.41160718, 0.81311715, 0.41160667), (0.41160718, 0.81311715, 0.41160667), (0.386221, 0.7511227, 0.5353954), (0.4980662, 0.7098304, 0.49806717), (0.5353948, 0.75112224, 0.38622245), (0.4384547, 0.86932856, 0.22809105), (0.41160718, 0.81311715, 0.41160667), (0.5353948, 0.75112224, 0.38622245), (0.5696871, 0.7932478, 0.21497588), (0.21497607, 0.79324776, 0.5696871), (0.20921785, 0.69145775, 0.691458), (0.37367082, 0.6558851, 0.65588486), (0.386221, 0.7511227, 0.5353954), (0.20921785, 0.69145775, 0.691458), (0.21497561, 0.5696873, 0.79324764), (0.38622043, 0.5353951, 0.75112313), (0.37367082, 0.6558851, 0.65588486), (0.37367082, 0.6558851, 0.65588486), (0.38622043, 0.5353951, 0.75112313), (0.49806598, 0.4980668, 0.70983076), (0.47519925, 0.6221682, 0.6221675), (0.386221, 0.7511227, 0.5353954), (0.37367082, 0.6558851, 0.65588486), (0.47519925, 0.6221682, 0.6221675), (0.4980662, 0.7098304, 0.49806717), (0.008729805, 0.008729596, 0.9999238), (0.06686945, 0.008746073, 0.99772334), (0.06644033, 0.066440225, 0.99557585), (0.008746261, 0.066869594, 0.99772346), (0.06686945, 0.008746073, 0.99772334), (0.25273225, 0.008556347, 0.9674984), (0.25079927, 0.06435971, 0.96589726), (0.06644033, 0.066440225, 0.99557585), (0.06644033, 0.066440225, 0.99557585), (0.25079927, 0.06435971, 0.96589726), (0.24323183, 0.24323292, 0.93897605), (0.06435989, 0.25080052, 0.9658969), (0.008746261, 0.066869594, 0.99772346), (0.06644033, 0.066440225, 0.99557585), (0.06435989, 0.25080052, 0.9658969), (0.008556378, 0.25273407, 0.96749794), (0.25273225, 0.008556347, 0.9674984), (0.45334685, 0.008026693, 0.891298), (0.4505654, 0.05982667, 0.8907366), (0.25079927, 0.06435971, 0.96589726), (0.45334685, 0.008026693, 0.891298), (0.5870318, 0.007608464, 0.8095281), (0.5843068, 0.056215048, 0.80958354), (0.4505654, 0.05982667, 0.8907366), (0.4505654, 0.05982667, 0.8907366), (0.5843068, 0.056215048, 0.80958354), (0.5696875, 0.21497631, 0.7932474), (0.43845388, 0.22809187, 0.8693286), (0.25079927, 0.06435971, 0.96589726), (0.4505654, 0.05982667, 0.8907366), (0.43845388, 0.22809187, 0.8693286), (0.24323183, 0.24323292, 0.93897605), (0.5870318, 0.007608464, 0.8095281), (0.7070877, 0.007422019, 0.7070869), (0.7060488, 0.054678682, 0.7060492), (0.5843068, 0.056215048, 0.80958354), (0.7070877, 0.007422019, 0.7070869), (0.8095288, 0.0076086037, 0.5870308), (0.8095842, 0.056214456, 0.5843058), (0.7060488, 0.054678682, 0.7060492), (0.7060488, 0.054678682, 0.7060492), (0.8095842, 0.056214456, 0.5843058), (0.79324794, 0.21497555, 0.56968695), (0.6914578, 0.20921807, 0.6914577), (0.5843068, 0.056215048, 0.80958354), (0.7060488, 0.054678682, 0.7060492), (0.6914578, 0.20921807, 0.6914577), (0.5696875, 0.21497631, 0.7932474), (0.008556378, 0.25273407, 0.96749794), (0.06435989, 0.25080052, 0.9658969), (0.05982642, 0.45056665, 0.890736), (0.008026672, 0.45334822, 0.8912974), (0.06435989, 0.25080052, 0.9658969), (0.24323183, 0.24323292, 0.93897605), (0.22809134, 0.43845534, 0.869328), (0.05982642, 0.45056665, 0.890736), (0.05982642, 0.45056665, 0.890736), (0.22809134, 0.43845534, 0.869328), (0.21497561, 0.5696873, 0.79324764), (0.056214325, 0.58430594, 0.80958414), (0.008026672, 0.45334822, 0.8912974), (0.05982642, 0.45056665, 0.890736), (0.056214325, 0.58430594, 0.80958414), (0.00760861, 0.5870307, 0.8095288), (0.24323183, 0.24323292, 0.93897605), (0.43845388, 0.22809187, 0.8693286), (0.41160542, 0.41160703, 0.8131178), (0.22809134, 0.43845534, 0.869328), (0.43845388, 0.22809187, 0.8693286), (0.5696875, 0.21497631, 0.7932474), (0.5353947, 0.38622102, 0.751123), (0.41160542, 0.41160703, 0.8131178), (0.41160542, 0.41160703, 0.8131178), (0.5353947, 0.38622102, 0.751123), (0.49806598, 0.4980668, 0.70983076), (0.38622043, 0.5353951, 0.75112313), (0.22809134, 0.43845534, 0.869328), (0.41160542, 0.41160703, 0.8131178), (0.38622043, 0.5353951, 0.75112313), (0.21497561, 0.5696873, 0.79324764), (0.5696875, 0.21497631, 0.7932474), (0.6914578, 0.20921807, 0.6914577), (0.6558859, 0.37367058, 0.6558842), (0.5353947, 0.38622102, 0.751123), (0.6914578, 0.20921807, 0.6914577), (0.79324794, 0.21497555, 0.56968695), (0.75112295, 0.3862212, 0.5353948), (0.6558859, 0.37367058, 0.6558842), (0.6558859, 0.37367058, 0.6558842), (0.75112295, 0.3862212, 0.5353948), (0.70983034, 0.49806684, 0.4980664), (0.6221683, 0.47519925, 0.6221674), (0.5353947, 0.38622102, 0.751123), (0.6558859, 0.37367058, 0.6558842), (0.6221683, 0.47519925, 0.6221674), (0.49806598, 0.4980668, 0.70983076), (0.9999237, 0.008729726, 0.0087296795), (0.99772334, 0.066869475, 0.008746074), (0.99557585, 0.06644032, 0.06644022), (0.9977234, 0.0087461565, 0.06686932), (0.99772334, 0.066869475, 0.008746074), (0.9674984, 0.25273225, 0.008556349), (0.96589714, 0.2507995, 0.06435965), (0.99557585, 0.06644032, 0.06644022), (0.99557585, 0.06644032, 0.06644022), (0.96589714, 0.2507995, 0.06435965), (0.938976, 0.24323209, 0.24323283), (0.9658969, 0.06436012, 0.2508007), (0.9977234, 0.0087461565, 0.06686932), (0.99557585, 0.06644032, 0.06644022), (0.9658969, 0.06436012, 0.2508007), (0.967498, 0.008556321, 0.25273377), (0.9674984, 0.25273225, 0.008556349), (0.891298, 0.45334682, 0.008026693), (0.8907366, 0.45056525, 0.05982674), (0.96589714, 0.2507995, 0.06435965), (0.891298, 0.45334682, 0.008026693), (0.8095281, 0.5870318, 0.007608464), (0.8095838, 0.5843065, 0.056215074), (0.8907366, 0.45056525, 0.05982674), (0.8907366, 0.45056525, 0.05982674), (0.8095838, 0.5843065, 0.056215074), (0.7932478, 0.56968695, 0.2149763), (0.86932886, 0.43845367, 0.22809164), (0.96589714, 0.2507995, 0.06435965), (0.8907366, 0.45056525, 0.05982674), (0.86932886, 0.43845367, 0.22809164), (0.938976, 0.24323209, 0.24323283), (0.8095281, 0.5870318, 0.007608464), (0.70708627, 0.7070885, 0.007422013), (0.7060487, 0.7060492, 0.054678716), (0.8095838, 0.5843065, 0.056215074), (0.70708627, 0.7070885, 0.007422013), (0.58703077, 0.8095288, 0.007608584), (0.5843059, 0.8095842, 0.05621441), (0.7060487, 0.7060492, 0.054678716), (0.7060487, 0.7060492, 0.054678716), (0.5843059, 0.8095842, 0.05621441), (0.5696871, 0.7932478, 0.21497588), (0.69145805, 0.6914575, 0.20921834), (0.8095838, 0.5843065, 0.056215074), (0.7060487, 0.7060492, 0.054678716), (0.69145805, 0.6914575, 0.20921834), (0.7932478, 0.56968695, 0.2149763), (0.967498, 0.008556321, 0.25273377), (0.9658969, 0.06436012, 0.2508007), (0.8907365, 0.05982666, 0.4505655), (0.89129764, 0.008026778, 0.4533477), (0.9658969, 0.06436012, 0.2508007), (0.938976, 0.24323209, 0.24323283), (0.8693287, 0.22809075, 0.43845445), (0.8907365, 0.05982666, 0.4505655), (0.8907365, 0.05982666, 0.4505655), (0.8693287, 0.22809075, 0.43845445), (0.79324794, 0.21497555, 0.56968695), (0.8095842, 0.056214456, 0.5843058), (0.89129764, 0.008026778, 0.4533477), (0.8907365, 0.05982666, 0.4505655), (0.8095842, 0.056214456, 0.5843058), (0.8095288, 0.0076086037, 0.5870308), (0.938976, 0.24323209, 0.24323283), (0.86932886, 0.43845367, 0.22809164), (0.8131177, 0.41160607, 0.4116068), (0.8693287, 0.22809075, 0.43845445), (0.86932886, 0.43845367, 0.22809164), (0.7932478, 0.56968695, 0.2149763), (0.75112265, 0.5353955, 0.3862208), (0.8131177, 0.41160607, 0.4116068), (0.8131177, 0.41160607, 0.4116068), (0.75112265, 0.5353955, 0.3862208), (0.70983034, 0.49806684, 0.4980664), (0.75112295, 0.3862212, 0.5353948), (0.8693287, 0.22809075, 0.43845445), (0.8131177, 0.41160607, 0.4116068), (0.75112295, 0.3862212, 0.5353948), (0.79324794, 0.21497555, 0.56968695), (0.7932478, 0.56968695, 0.2149763), (0.69145805, 0.6914575, 0.20921834), (0.6558842, 0.65588546, 0.37367123), (0.75112265, 0.5353955, 0.3862208), (0.69145805, 0.6914575, 0.20921834), (0.5696871, 0.7932478, 0.21497588), (0.5353948, 0.75112224, 0.38622245), (0.6558842, 0.65588546, 0.37367123), (0.6558842, 0.65588546, 0.37367123), (0.5353948, 0.75112224, 0.38622245), (0.4980662, 0.7098304, 0.49806717), (0.6221673, 0.622168, 0.4751998), (0.75112265, 0.5353955, 0.3862208), (0.6558842, 0.65588546, 0.37367123), (0.6221673, 0.622168, 0.4751998), (0.70983034, 0.49806684, 0.4980664), (0.4980662, 0.7098304, 0.49806717), (0.47519925, 0.6221682, 0.6221675), (0.57735044, 0.57735056, 0.5773498), (0.6221673, 0.622168, 0.4751998), (0.49806598, 0.4980668, 0.70983076), (0.6221683, 0.47519925, 0.6221674), (0.57735044, 0.57735056, 0.5773498), (0.47519925, 0.6221682, 0.6221675), (0.70983034, 0.49806684, 0.4980664), (0.6221673, 0.622168, 0.4751998), (0.57735044, 0.57735056, 0.5773498), (0.6221683, 0.47519925, 0.6221674), (0.00872978, 0.008729593, -0.9999238), (0.008746224, 0.06686989, -0.9977234), (0.06643997, 0.06644048, -0.99557585), (0.06686886, 0.008746096, -0.99772346), (0.008746224, 0.06686989, -0.9977234), (0.008556368, 0.25273243, -0.9674984), (0.06435968, 0.25079912, -0.9658973), (0.06643997, 0.06644048, -0.99557585), (0.06643997, 0.06644048, -0.99557585), (0.06435968, 0.25079912, -0.9658973), (0.24323265, 0.24323265, -0.93897593), (0.2508003, 0.064359635, -0.96589696), (0.06686886, 0.008746096, -0.99772346), (0.06643997, 0.06644048, -0.99557585), (0.2508003, 0.064359635, -0.96589696), (0.25273392, 0.008556396, -0.96749806), (0.008556368, 0.25273243, -0.9674984), (0.008026665, 0.4533469, -0.89129806), (0.05982708, 0.45056504, -0.89073676), (0.06435968, 0.25079912, -0.9658973), (0.008026665, 0.4533469, -0.89129806), (0.0076084705, 0.58703285, -0.8095272), (0.056215104, 0.58430773, -0.8095829), (0.05982708, 0.45056504, -0.89073676), (0.05982708, 0.45056504, -0.89073676), (0.056215104, 0.58430773, -0.8095829), (0.21497582, 0.56968796, -0.79324704), (0.22809114, 0.43845555, -0.8693281), (0.06435968, 0.25079912, -0.9658973), (0.05982708, 0.45056504, -0.89073676), (0.22809114, 0.43845555, -0.8693281), (0.24323265, 0.24323265, -0.93897593), (0.0076084705, 0.58703285, -0.8095272), (0.007422083, 0.70708853, -0.7070861), (0.05467826, 0.70605, -0.706048), (0.056215104, 0.58430773, -0.8095829), (0.007422083, 0.70708853, -0.7070861), (0.0076085613, 0.8095282, -0.5870316), (0.056213748, 0.80958354, -0.5843069), (0.05467826, 0.70605, -0.706048), (0.05467826, 0.70605, -0.706048), (0.056213748, 0.80958354, -0.5843069), (0.21497463, 0.7932476, -0.5696878), (0.20921832, 0.6914581, -0.69145745), (0.056215104, 0.58430773, -0.8095829), (0.05467826, 0.70605, -0.706048), (0.20921832, 0.6914581, -0.69145745), (0.21497582, 0.56968796, -0.79324704), (0.25273392, 0.008556396, -0.96749806), (0.2508003, 0.064359635, -0.96589696), (0.4505652, 0.05982603, -0.89073664), (0.45334783, 0.008026794, -0.8912975), (0.2508003, 0.064359635, -0.96589696), (0.24323265, 0.24323265, -0.93897593), (0.4384543, 0.22809155, -0.86932844), (0.4505652, 0.05982603, -0.89073664), (0.4505652, 0.05982603, -0.89073664), (0.4384543, 0.22809155, -0.86932844), (0.5696871, 0.21497552, -0.7932477), (0.58430564, 0.056214407, -0.8095843), (0.45334783, 0.008026794, -0.8912975), (0.4505652, 0.05982603, -0.89073664), (0.58430564, 0.056214407, -0.8095843), (0.58703065, 0.007608601, -0.80952895), (0.24323265, 0.24323265, -0.93897593), (0.22809114, 0.43845555, -0.8693281), (0.41160557, 0.41160762, -0.8131175), (0.4384543, 0.22809155, -0.86932844), (0.22809114, 0.43845555, -0.8693281), (0.21497582, 0.56968796, -0.79324704), (0.38622054, 0.5353945, -0.7511235), (0.41160557, 0.41160762, -0.8131175), (0.41160557, 0.41160762, -0.8131175), (0.38622054, 0.5353945, -0.7511235), (0.49806586, 0.49806702, -0.70983064), (0.53539425, 0.38622203, -0.75112283), (0.4384543, 0.22809155, -0.86932844), (0.41160557, 0.41160762, -0.8131175), (0.53539425, 0.38622203, -0.75112283), (0.5696871, 0.21497552, -0.7932477), (0.21497582, 0.56968796, -0.79324704), (0.20921832, 0.6914581, -0.69145745), (0.37367278, 0.6558841, -0.6558846), (0.38622054, 0.5353945, -0.7511235), (0.20921832, 0.6914581, -0.69145745), (0.21497463, 0.7932476, -0.5696878), (0.3862214, 0.75112295, -0.5353946), (0.37367278, 0.6558841, -0.6558846), (0.37367278, 0.6558841, -0.6558846), (0.3862214, 0.75112295, -0.5353946), (0.49806672, 0.70983076, -0.4980662), (0.475201, 0.6221674, -0.622167), (0.38622054, 0.5353945, -0.7511235), (0.37367278, 0.6558841, -0.6558846), (0.475201, 0.6221674, -0.622167), (0.49806586, 0.49806702, -0.70983064), (0.008729672, 0.9999237, -0.008729829), (0.06686967, 0.99772346, -0.008746129), (0.06644043, 0.99557585, -0.066439934), (0.008746045, 0.9977235, -0.066868536), (0.06686967, 0.99772346, -0.008746129), (0.25273252, 0.96749836, -0.008556316), (0.25079945, 0.96589714, -0.06435975), (0.06644043, 0.99557585, -0.066439934), (0.06644043, 0.99557585, -0.066439934), (0.25079945, 0.96589714, -0.06435975), (0.24323276, 0.9389761, -0.24323206), (0.06435967, 0.9658969, -0.25080058), (0.008746045, 0.9977235, -0.066868536), (0.06644043, 0.99557585, -0.066439934), (0.06435967, 0.9658969, -0.25080058), (0.008556341, 0.967498, -0.25273386), (0.25273252, 0.96749836, -0.008556316), (0.4533473, 0.8912978, -0.008026624), (0.45056516, 0.89073664, -0.059827052), (0.25079945, 0.96589714, -0.06435975), (0.4533473, 0.8912978, -0.008026624), (0.5870316, 0.8095283, -0.007608454), (0.584307, 0.8095833, -0.056215018), (0.45056516, 0.89073664, -0.059827052), (0.45056516, 0.89073664, -0.059827052), (0.584307, 0.8095833, -0.056215018), (0.56968814, 0.793247, -0.21497603), (0.43845552, 0.8693282, -0.2280905), (0.25079945, 0.96589714, -0.06435975), (0.45056516, 0.89073664, -0.059827052), (0.43845552, 0.8693282, -0.2280905), (0.24323276, 0.9389761, -0.24323206), (0.5870316, 0.8095283, -0.007608454), (0.7070866, 0.70708793, -0.00742207), (0.7060494, 0.70604855, -0.054678433), (0.584307, 0.8095833, -0.056215018), (0.7070866, 0.70708793, -0.00742207), (0.80952907, 0.5870304, -0.007608632), (0.8095845, 0.58430535, -0.05621441), (0.7060494, 0.70604855, -0.054678433), (0.7060494, 0.70604855, -0.054678433), (0.8095845, 0.58430535, -0.05621441), (0.79324794, 0.56968695, -0.21497533), (0.69145775, 0.6914578, -0.20921838), (0.584307, 0.8095833, -0.056215018), (0.7060494, 0.70604855, -0.054678433), (0.69145775, 0.6914578, -0.20921838), (0.56968814, 0.793247, -0.21497603), (0.008556341, 0.967498, -0.25273386), (0.06435967, 0.9658969, -0.25080058), (0.059825808, 0.89073557, -0.4505674), (0.008026697, 0.89129657, -0.45334983), (0.06435967, 0.9658969, -0.25080058), (0.24323276, 0.9389761, -0.24323206), (0.22809105, 0.8693285, -0.4384548), (0.059825808, 0.89073557, -0.4505674), (0.059825808, 0.89073557, -0.4505674), (0.22809105, 0.8693285, -0.4384548), (0.21497463, 0.7932476, -0.5696878), (0.056213748, 0.80958354, -0.5843069), (0.008026697, 0.89129657, -0.45334983), (0.059825808, 0.89073557, -0.4505674), (0.056213748, 0.80958354, -0.5843069), (0.0076085613, 0.8095282, -0.5870316), (0.24323276, 0.9389761, -0.24323206), (0.43845552, 0.8693282, -0.2280905), (0.4116074, 0.8131178, -0.41160518), (0.22809105, 0.8693285, -0.4384548), (0.43845552, 0.8693282, -0.2280905), (0.56968814, 0.793247, -0.21497603), (0.535395, 0.7511227, -0.3862212), (0.4116074, 0.8131178, -0.41160518), (0.4116074, 0.8131178, -0.41160518), (0.535395, 0.7511227, -0.3862212), (0.49806672, 0.70983076, -0.4980662), (0.3862214, 0.75112295, -0.5353946), (0.22809105, 0.8693285, -0.4384548), (0.4116074, 0.8131178, -0.41160518), (0.3862214, 0.75112295, -0.5353946), (0.21497463, 0.7932476, -0.5696878), (0.56968814, 0.793247, -0.21497603), (0.69145775, 0.6914578, -0.20921838), (0.65588415, 0.6558849, -0.37367216), (0.535395, 0.7511227, -0.3862212), (0.69145775, 0.6914578, -0.20921838), (0.79324794, 0.56968695, -0.21497533), (0.7511231, 0.5353943, -0.3862215), (0.65588415, 0.6558849, -0.37367216), (0.65588415, 0.6558849, -0.37367216), (0.7511231, 0.5353943, -0.3862215), (0.7098308, 0.49806613, -0.4980667), (0.62216717, 0.6221677, -0.47520036), (0.535395, 0.7511227, -0.3862212), (0.65588415, 0.6558849, -0.37367216), (0.62216717, 0.6221677, -0.47520036), (0.49806672, 0.70983076, -0.4980662), (0.99992377, 0.008729713, -0.008729682), (0.99772346, 0.008746131, -0.06686963), (0.99557585, 0.06643997, -0.06644048), (0.9977234, 0.06686885, -0.008746096), (0.99772346, 0.008746131, -0.06686963), (0.96749836, 0.008556314, -0.25273246), (0.9658973, 0.06435968, -0.25079912), (0.99557585, 0.06643997, -0.06644048), (0.99557585, 0.06643997, -0.06644048), (0.9658973, 0.06435968, -0.25079912), (0.93897593, 0.24323265, -0.24323265), (0.96589696, 0.2508003, -0.064359635), (0.9977234, 0.06686885, -0.008746096), (0.99557585, 0.06643997, -0.06644048), (0.96589696, 0.2508003, -0.064359635), (0.967498, 0.2527339, -0.008556395), (0.96749836, 0.008556314, -0.25273246), (0.8912978, 0.00802662, -0.45334724), (0.89073676, 0.05982708, -0.45056504), (0.9658973, 0.06435968, -0.25079912), (0.8912978, 0.00802662, -0.45334724), (0.8095283, 0.007608454, -0.58703154), (0.80958325, 0.05621505, -0.58430713), (0.89073676, 0.05982708, -0.45056504), (0.89073676, 0.05982708, -0.45056504), (0.80958325, 0.05621505, -0.58430713), (0.7932473, 0.21497577, -0.56968766), (0.8693281, 0.22809114, -0.43845555), (0.9658973, 0.06435968, -0.25079912), (0.89073676, 0.05982708, -0.45056504), (0.8693281, 0.22809114, -0.43845555), (0.93897593, 0.24323265, -0.24323265), (0.8095283, 0.007608454, -0.58703154), (0.70708776, 0.0074220975, -0.70708686), (0.7060489, 0.05467845, -0.7060491), (0.80958325, 0.05621505, -0.58430713), (0.70708776, 0.0074220975, -0.70708686), (0.58703065, 0.007608601, -0.80952895), (0.58430564, 0.056214407, -0.8095843), (0.7060489, 0.05467845, -0.7060491), (0.7060489, 0.05467845, -0.7060491), (0.58430564, 0.056214407, -0.8095843), (0.5696871, 0.21497552, -0.7932477), (0.69145805, 0.20921846, -0.6914575), (0.80958325, 0.05621505, -0.58430713), (0.7060489, 0.05467845, -0.7060491), (0.69145805, 0.20921846, -0.6914575), (0.7932473, 0.21497577, -0.56968766), (0.967498, 0.2527339, -0.008556395), (0.96589696, 0.2508003, -0.064359635), (0.89073664, 0.45056522, -0.059826184), (0.8912978, 0.45334727, -0.008026838), (0.96589696, 0.2508003, -0.064359635), (0.93897593, 0.24323265, -0.24323265), (0.8693288, 0.4384539, -0.22809136), (0.89073664, 0.45056522, -0.059826184), (0.89073664, 0.45056522, -0.059826184), (0.8693288, 0.4384539, -0.22809136), (0.79324794, 0.56968695, -0.21497533), (0.8095845, 0.58430535, -0.05621441), (0.8912978, 0.45334727, -0.008026838), (0.89073664, 0.45056522, -0.059826184), (0.8095845, 0.58430535, -0.05621441), (0.80952907, 0.5870304, -0.007608632), (0.93897593, 0.24323265, -0.24323265), (0.8693281, 0.22809114, -0.43845555), (0.81311786, 0.41160494, -0.41160747), (0.8693288, 0.4384539, -0.22809136), (0.8693281, 0.22809114, -0.43845555), (0.7932473, 0.21497577, -0.56968766), (0.7511234, 0.38622054, -0.53539443), (0.81311786, 0.41160494, -0.41160747), (0.81311786, 0.41160494, -0.41160747), (0.7511234, 0.38622054, -0.53539443), (0.7098308, 0.49806613, -0.4980667), (0.7511231, 0.5353943, -0.3862215), (0.8693288, 0.4384539, -0.22809136), (0.81311786, 0.41160494, -0.41160747), (0.7511231, 0.5353943, -0.3862215), (0.79324794, 0.56968695, -0.21497533), (0.7932473, 0.21497577, -0.56968766), (0.69145805, 0.20921846, -0.6914575), (0.6558849, 0.37367246, -0.6558841), (0.7511234, 0.38622054, -0.53539443), (0.69145805, 0.20921846, -0.6914575), (0.5696871, 0.21497552, -0.7932477), (0.53539425, 0.38622203, -0.75112283), (0.6558849, 0.37367246, -0.6558841), (0.6558849, 0.37367246, -0.6558841), (0.53539425, 0.38622203, -0.75112283), (0.49806586, 0.49806702, -0.70983064), (0.6221674, 0.47520122, -0.6221669), (0.7511234, 0.38622054, -0.53539443), (0.6558849, 0.37367246, -0.6558841), (0.6221674, 0.47520122, -0.6221669), (0.7098308, 0.49806613, -0.4980667), (0.49806586, 0.49806702, -0.70983064), (0.475201, 0.6221674, -0.622167), (0.57734996, 0.5773506, -0.5773503), (0.6221674, 0.47520122, -0.6221669), (0.49806672, 0.70983076, -0.4980662), (0.62216717, 0.6221677, -0.47520036), (0.57734996, 0.5773506, -0.5773503), (0.475201, 0.6221674, -0.622167), (0.7098308, 0.49806613, -0.4980667), (0.6221674, 0.47520122, -0.6221669), (0.57734996, 0.5773506, -0.5773503), (0.62216717, 0.6221677, -0.47520036), (0.9999237, -0.008729818, 0.008729671), (0.99772346, -0.008746131, 0.06686969), (0.99557585, -0.06643997, 0.06644051), (0.9977235, -0.066868536, 0.008746031), (0.99772346, -0.008746131, 0.06686969), (0.96749836, -0.008556314, 0.25273246), (0.9658973, -0.06435968, 0.25079912), (0.99557585, -0.06643997, 0.06644051), (0.99557585, -0.06643997, 0.06644051), (0.9658973, -0.06435968, 0.25079912), (0.93897593, -0.24323265, 0.24323265), (0.96589696, -0.2508003, 0.064359635), (0.9977235, -0.066868536, 0.008746031), (0.99557585, -0.06643997, 0.06644051), (0.96589696, -0.2508003, 0.064359635), (0.96749806, -0.25273356, 0.008556345), (0.96749836, -0.008556314, 0.25273246), (0.8912978, -0.00802662, 0.45334724), (0.89073676, -0.05982708, 0.45056504), (0.9658973, -0.06435968, 0.25079912), (0.8912978, -0.00802662, 0.45334724), (0.8095283, -0.007608454, 0.58703154), (0.80958325, -0.05621505, 0.58430713), (0.89073676, -0.05982708, 0.45056504), (0.89073676, -0.05982708, 0.45056504), (0.80958325, -0.05621505, 0.58430713), (0.7932473, -0.21497577, 0.56968766), (0.8693281, -0.22809114, 0.43845555), (0.9658973, -0.06435968, 0.25079912), (0.89073676, -0.05982708, 0.45056504), (0.8693281, -0.22809114, 0.43845555), (0.93897593, -0.24323265, 0.24323265), (0.8095283, -0.007608454, 0.58703154), (0.70708805, -0.007422071, 0.7070866), (0.7060486, -0.054678425, 0.70604926), (0.80958325, -0.05621505, 0.58430713), (0.70708805, -0.007422071, 0.7070866), (0.5870305, -0.0076086326, 0.8095291), (0.58430535, -0.05621441, 0.8095845), (0.7060486, -0.054678425, 0.70604926), (0.7060486, -0.054678425, 0.70604926), (0.58430535, -0.05621441, 0.8095845), (0.56968695, -0.21497536, 0.79324794), (0.69145787, -0.20921859, 0.6914576), (0.80958325, -0.05621505, 0.58430713), (0.7060486, -0.054678425, 0.70604926), (0.69145787, -0.20921859, 0.6914576), (0.7932473, -0.21497577, 0.56968766), (0.96749806, -0.25273356, 0.008556345), (0.96589696, -0.2508003, 0.064359635), (0.89073664, -0.4505652, 0.05982603), (0.89129746, -0.45334807, 0.008026736), (0.96589696, -0.2508003, 0.064359635), (0.93897593, -0.24323265, 0.24323265), (0.86932844, -0.4384543, 0.22809155), (0.89073664, -0.4505652, 0.05982603), (0.89073664, -0.4505652, 0.05982603), (0.86932844, -0.4384543, 0.22809155), (0.7932478, -0.5696872, 0.21497554), (0.8095843, -0.58430564, 0.056214407), (0.89129746, -0.45334807, 0.008026736), (0.89073664, -0.4505652, 0.05982603), (0.8095843, -0.58430564, 0.056214407), (0.809529, -0.5870306, 0.007608515), (0.93897593, -0.24323265, 0.24323265), (0.8693281, -0.22809114, 0.43845555), (0.8131175, -0.41160557, 0.41160762), (0.86932844, -0.4384543, 0.22809155), (0.8693281, -0.22809114, 0.43845555), (0.7932473, -0.21497577, 0.56968766), (0.7511235, -0.38622054, 0.5353945), (0.8131175, -0.41160557, 0.41160762), (0.8131175, -0.41160557, 0.41160762), (0.7511235, -0.38622054, 0.5353945), (0.70983064, -0.49806586, 0.49806702), (0.75112283, -0.53539425, 0.38622203), (0.86932844, -0.4384543, 0.22809155), (0.8131175, -0.41160557, 0.41160762), (0.75112283, -0.53539425, 0.38622203), (0.7932478, -0.5696872, 0.21497554), (0.7932473, -0.21497577, 0.56968766), (0.69145787, -0.20921859, 0.6914576), (0.6558846, -0.37367278, 0.6558841), (0.7511235, -0.38622054, 0.5353945), (0.69145787, -0.20921859, 0.6914576), (0.56968695, -0.21497536, 0.79324794), (0.5353946, -0.3862214, 0.75112295), (0.6558846, -0.37367278, 0.6558841), (0.6558846, -0.37367278, 0.6558841), (0.5353946, -0.3862214, 0.75112295), (0.4980662, -0.49806672, 0.70983076), (0.622167, -0.475201, 0.6221674), (0.7511235, -0.38622054, 0.5353945), (0.6558846, -0.37367278, 0.6558841), (0.622167, -0.475201, 0.6221674), (0.70983064, -0.49806586, 0.49806702), (0.008729784, -0.008729593, 0.9999238), (0.008746221, -0.06686988, 0.9977234), (0.06643993, -0.0664404, 0.99557585), (0.06686886, -0.008746096, 0.99772346), (0.008746221, -0.06686988, 0.9977234), (0.008556371, -0.25273424, 0.96749794), (0.06435943, -0.25080094, 0.9658968), (0.06643993, -0.0664404, 0.99557585), (0.06643993, -0.0664404, 0.99557585), (0.06435943, -0.25080094, 0.9658968), (0.24323201, -0.24323334, 0.9389759), (0.25080028, -0.06435958, 0.96589696), (0.06686886, -0.008746096, 0.99772346), (0.06643993, -0.0664404, 0.99557585), (0.25080028, -0.06435958, 0.96589696), (0.25273392, -0.008556396, 0.96749806), (0.008556371, -0.25273424, 0.96749794), (0.008026745, -0.4533475, 0.89129776), (0.059826083, -0.45056587, 0.89073634), (0.06435943, -0.25080094, 0.9658968), (0.008026745, -0.4533475, 0.89129776), (0.0076085827, -0.58703005, 0.80952936), (0.056214176, -0.58430505, 0.80958486), (0.059826083, -0.45056587, 0.89073634), (0.059826083, -0.45056587, 0.89073634), (0.056214176, -0.58430505, 0.80958486), (0.21497633, -0.56968653, 0.79324806), (0.22809182, -0.4384556, 0.8693278), (0.06435943, -0.25080094, 0.9658968), (0.059826083, -0.45056587, 0.89073634), (0.22809182, -0.4384556, 0.8693278), (0.24323201, -0.24323334, 0.9389759), (0.0076085827, -0.58703005, 0.80952936), (0.0074220886, -0.7070874, 0.7070872), (0.05467834, -0.7060488, 0.7060492), (0.056214176, -0.58430505, 0.80958486), (0.0074220886, -0.7070874, 0.7070872), (0.0076085543, -0.8095295, 0.58703), (0.0562143, -0.809585, 0.58430487), (0.05467834, -0.7060488, 0.7060492), (0.05467834, -0.7060488, 0.7060492), (0.0562143, -0.809585, 0.58430487), (0.21497522, -0.79324853, 0.5696863), (0.20921761, -0.6914573, 0.6914585), (0.056214176, -0.58430505, 0.80958486), (0.05467834, -0.7060488, 0.7060492), (0.20921761, -0.6914573, 0.6914585), (0.21497633, -0.56968653, 0.79324806), (0.25273392, -0.008556396, 0.96749806), (0.25080028, -0.06435958, 0.96589696), (0.45056522, -0.059826184, 0.89073664), (0.4533472, -0.008026838, 0.89129776), (0.25080028, -0.06435958, 0.96589696), (0.24323201, -0.24323334, 0.9389759), (0.4384543, -0.22809094, 0.8693287), (0.45056522, -0.059826184, 0.89073664), (0.45056522, -0.059826184, 0.89073664), (0.4384543, -0.22809094, 0.8693287), (0.56968695, -0.21497536, 0.79324794), (0.58430535, -0.05621441, 0.8095845), (0.4533472, -0.008026838, 0.89129776), (0.45056522, -0.059826184, 0.89073664), (0.58430535, -0.05621441, 0.8095845), (0.5870305, -0.0076086326, 0.8095291), (0.24323201, -0.24323334, 0.9389759), (0.22809182, -0.4384556, 0.8693278), (0.41160718, -0.41160694, 0.813117), (0.4384543, -0.22809094, 0.8693287), (0.22809182, -0.4384556, 0.8693278), (0.21497633, -0.56968653, 0.79324806), (0.3862224, -0.5353943, 0.7511226), (0.41160718, -0.41160694, 0.813117), (0.41160718, -0.41160694, 0.813117), (0.3862224, -0.5353943, 0.7511226), (0.4980662, -0.49806672, 0.70983076), (0.5353946, -0.3862214, 0.75112295), (0.4384543, -0.22809094, 0.8693287), (0.41160718, -0.41160694, 0.813117), (0.5353946, -0.3862214, 0.75112295), (0.56968695, -0.21497536, 0.79324794), (0.21497633, -0.56968653, 0.79324806), (0.20921761, -0.6914573, 0.6914585), (0.37367195, -0.65588415, 0.65588516), (0.3862224, -0.5353943, 0.7511226), (0.20921761, -0.6914573, 0.6914585), (0.21497522, -0.79324853, 0.5696863), (0.38622135, -0.7511234, 0.535394), (0.37367195, -0.65588415, 0.65588516), (0.37367195, -0.65588415, 0.65588516), (0.38622135, -0.7511234, 0.535394), (0.4980667, -0.7098308, 0.49806613), (0.47520036, -0.62216717, 0.6221677), (0.3862224, -0.5353943, 0.7511226), (0.37367195, -0.65588415, 0.65588516), (0.47520036, -0.62216717, 0.6221677), (0.4980662, -0.49806672, 0.70983076), (0.008729552, -0.99992377, 0.008729888), (0.06686989, -0.99772346, 0.008746224), (0.06644048, -0.99557585, 0.06643997), (0.008746013, -0.99772346, 0.06686853), (0.06686989, -0.99772346, 0.008746224), (0.2527324, -0.96749836, 0.008556367), (0.25079912, -0.9658973, 0.06435968), (0.06644048, -0.99557585, 0.06643997), (0.06644048, -0.99557585, 0.06643997), (0.25079912, -0.9658973, 0.06435968), (0.24323265, -0.93897593, 0.24323265), (0.064359635, -0.96589696, 0.2508003), (0.008746013, -0.99772346, 0.06686853), (0.06644048, -0.99557585, 0.06643997), (0.064359635, -0.96589696, 0.2508003), (0.008556345, -0.96749806, 0.25273356), (0.2527324, -0.96749836, 0.008556367), (0.4533469, -0.89129806, 0.008026665), (0.45056504, -0.89073676, 0.05982708), (0.25079912, -0.9658973, 0.06435968), (0.4533469, -0.89129806, 0.008026665), (0.587032, -0.80952793, 0.0076084905), (0.58430713, -0.80958325, 0.05621505), (0.45056504, -0.89073676, 0.05982708), (0.45056504, -0.89073676, 0.05982708), (0.58430713, -0.80958325, 0.05621505), (0.56968766, -0.7932473, 0.21497579), (0.43845552, -0.8693281, 0.22809114), (0.25079912, -0.9658973, 0.06435968), (0.45056504, -0.89073676, 0.05982708), (0.43845552, -0.8693281, 0.22809114), (0.24323265, -0.93897593, 0.24323265), (0.587032, -0.80952793, 0.0076084905), (0.70708746, -0.70708716, 0.007422076), (0.7060491, -0.7060489, 0.05467845), (0.58430713, -0.80958325, 0.05621505), (0.70708746, -0.70708716, 0.007422076), (0.809529, -0.5870306, 0.007608515), (0.8095843, -0.58430564, 0.056214407), (0.7060491, -0.7060489, 0.05467845), (0.7060491, -0.7060489, 0.05467845), (0.8095843, -0.58430564, 0.056214407), (0.7932478, -0.5696872, 0.21497554), (0.6914575, -0.69145805, 0.20921846), (0.58430713, -0.80958325, 0.05621505), (0.7060491, -0.7060489, 0.05467845), (0.6914575, -0.69145805, 0.20921846), (0.56968766, -0.7932473, 0.21497579), (0.008556345, -0.96749806, 0.25273356), (0.064359635, -0.96589696, 0.2508003), (0.059826057, -0.8907366, 0.45056525), (0.008026751, -0.89129734, 0.45334828), (0.064359635, -0.96589696, 0.2508003), (0.24323265, -0.93897593, 0.24323265), (0.22809127, -0.86932886, 0.43845376), (0.059826057, -0.8907366, 0.45056525), (0.059826057, -0.8907366, 0.45056525), (0.22809127, -0.86932886, 0.43845376), (0.21497522, -0.79324853, 0.5696863), (0.0562143, -0.809585, 0.58430487), (0.008026751, -0.89129734, 0.45334828), (0.059826057, -0.8907366, 0.45056525), (0.0562143, -0.809585, 0.58430487), (0.0076085543, -0.8095295, 0.58703), (0.24323265, -0.93897593, 0.24323265), (0.43845552, -0.8693281, 0.22809114), (0.41160747, -0.81311786, 0.41160494), (0.22809127, -0.86932886, 0.43845376), (0.43845552, -0.8693281, 0.22809114), (0.56968766, -0.7932473, 0.21497579), (0.53539443, -0.7511234, 0.38622054), (0.41160747, -0.81311786, 0.41160494), (0.41160747, -0.81311786, 0.41160494), (0.53539443, -0.7511234, 0.38622054), (0.4980667, -0.7098308, 0.49806613), (0.38622135, -0.7511234, 0.535394), (0.22809127, -0.86932886, 0.43845376), (0.41160747, -0.81311786, 0.41160494), (0.38622135, -0.7511234, 0.535394), (0.21497522, -0.79324853, 0.5696863), (0.56968766, -0.7932473, 0.21497579), (0.6914575, -0.69145805, 0.20921846), (0.6558841, -0.6558849, 0.37367246), (0.53539443, -0.7511234, 0.38622054), (0.6914575, -0.69145805, 0.20921846), (0.7932478, -0.5696872, 0.21497554), (0.75112283, -0.53539425, 0.38622203), (0.6558841, -0.6558849, 0.37367246), (0.6558841, -0.6558849, 0.37367246), (0.75112283, -0.53539425, 0.38622203), (0.70983064, -0.49806586, 0.49806702), (0.6221669, -0.6221674, 0.47520122), (0.53539443, -0.7511234, 0.38622054), (0.6558841, -0.6558849, 0.37367246), (0.6221669, -0.6221674, 0.47520122), (0.4980667, -0.7098308, 0.49806613), (0.70983064, -0.49806586, 0.49806702), (0.622167, -0.475201, 0.6221674), (0.5773503, -0.57734996, 0.5773506), (0.6221669, -0.6221674, 0.47520122), (0.4980662, -0.49806672, 0.70983076), (0.47520036, -0.62216717, 0.6221677), (0.5773503, -0.57734996, 0.5773506), (0.622167, -0.475201, 0.6221674), (0.4980667, -0.7098308, 0.49806613), (0.6221669, -0.6221674, 0.47520122), (0.5773503, -0.57734996, 0.5773506), (0.47520036, -0.62216717, 0.6221677), (0.9999237, -0.008729834, -0.008729639), (0.99772346, -0.066869155, -0.008745991), (0.99557585, -0.06644032, -0.06644022), (0.9977234, -0.0087461565, -0.06686932), (0.99772346, -0.066869155, -0.008745991), (0.9674983, -0.25273272, -0.008556292), (0.96589714, -0.2507995, -0.06435965), (0.99557585, -0.06644032, -0.06644022), (0.99557585, -0.06644032, -0.06644022), (0.96589714, -0.2507995, -0.06435965), (0.938976, -0.24323209, -0.24323283), (0.9658969, -0.06436012, -0.2508007), (0.9977234, -0.0087461565, -0.06686932), (0.99557585, -0.06644032, -0.06644022), (0.9658969, -0.06436012, -0.2508007), (0.967498, -0.008556321, -0.25273377), (0.9674983, -0.25273272, -0.008556292), (0.89129794, -0.4533471, -0.008026635), (0.8907366, -0.45056525, -0.05982674), (0.96589714, -0.2507995, -0.06435965), (0.89129794, -0.4533471, -0.008026635), (0.8095287, -0.58703107, -0.0076083946), (0.8095838, -0.5843065, -0.056215074), (0.8907366, -0.45056525, -0.05982674), (0.8907366, -0.45056525, -0.05982674), (0.8095838, -0.5843065, -0.056215074), (0.7932478, -0.56968695, -0.2149763), (0.86932886, -0.43845367, -0.22809164), (0.96589714, -0.2507995, -0.06435965), (0.8907366, -0.45056525, -0.05982674), (0.86932886, -0.43845367, -0.22809164), (0.938976, -0.24323209, -0.24323283), (0.8095287, -0.58703107, -0.0076083946), (0.70708734, -0.7070873, -0.0074219937), (0.70604914, -0.70604885, -0.05467868), (0.8095838, -0.5843065, -0.056215074), (0.70708734, -0.7070873, -0.0074219937), (0.58703107, -0.8095287, -0.007608625), (0.5843058, -0.8095842, -0.056214456), (0.70604914, -0.70604885, -0.05467868), (0.70604914, -0.70604885, -0.05467868), (0.5843058, -0.8095842, -0.056214456), (0.5696871, -0.7932478, -0.21497586), (0.6914582, -0.6914573, -0.20921837), (0.8095838, -0.5843065, -0.056215074), (0.70604914, -0.70604885, -0.05467868), (0.6914582, -0.6914573, -0.20921837), (0.7932478, -0.56968695, -0.2149763), (0.967498, -0.008556321, -0.25273377), (0.9658969, -0.06436012, -0.2508007), (0.8907363, -0.059826467, -0.4505659), (0.89129716, -0.00802678, -0.4533485), (0.9658969, -0.06436012, -0.2508007), (0.938976, -0.24323209, -0.24323283), (0.86932856, -0.22809105, -0.4384547), (0.8907363, -0.059826467, -0.4505659), (0.8907363, -0.059826467, -0.4505659), (0.86932856, -0.22809105, -0.4384547), (0.79324776, -0.21497586, -0.56968707), (0.8095842, -0.05621441, -0.5843059), (0.89129716, -0.00802678, -0.4533485), (0.8907363, -0.059826467, -0.4505659), (0.8095842, -0.05621441, -0.5843059), (0.8095288, -0.007608584, -0.58703077), (0.938976, -0.24323209, -0.24323283), (0.86932886, -0.43845367, -0.22809164), (0.81311715, -0.41160667, -0.41160718), (0.86932856, -0.22809105, -0.4384547), (0.86932886, -0.43845367, -0.22809164), (0.7932478, -0.56968695, -0.2149763), (0.75112265, -0.5353953, -0.38622096), (0.81311715, -0.41160667, -0.41160718), (0.81311715, -0.41160667, -0.41160718), (0.75112265, -0.5353953, -0.38622096), (0.7098304, -0.49806717, -0.4980662), (0.75112224, -0.38622245, -0.5353948), (0.86932856, -0.22809105, -0.4384547), (0.81311715, -0.41160667, -0.41160718), (0.75112224, -0.38622245, -0.5353948), (0.79324776, -0.21497586, -0.56968707), (0.7932478, -0.56968695, -0.2149763), (0.6914582, -0.6914573, -0.20921837), (0.65588504, -0.6558848, -0.3736708), (0.75112265, -0.5353953, -0.38622096), (0.6914582, -0.6914573, -0.20921837), (0.5696871, -0.7932478, -0.21497586), (0.5353951, -0.75112313, -0.3862204), (0.65588504, -0.6558848, -0.3736708), (0.65588504, -0.6558848, -0.3736708), (0.5353951, -0.75112313, -0.3862204), (0.4980668, -0.70983076, -0.49806598), (0.6221682, -0.6221675, -0.4751993), (0.75112265, -0.5353953, -0.38622096), (0.65588504, -0.6558848, -0.3736708), (0.6221682, -0.6221675, -0.4751993), (0.7098304, -0.49806717, -0.4980662), (0.008729553, -0.9999237, -0.008729913), (0.008746003, -0.99772346, -0.06686869), (0.066440225, -0.99557585, -0.06644032), (0.066869594, -0.99772346, -0.008746261), (0.008746003, -0.99772346, -0.06686869), (0.00855638, -0.9674979, -0.2527341), (0.06435942, -0.9658968, -0.25080088), (0.066440225, -0.99557585, -0.06644032), (0.066440225, -0.99557585, -0.06644032), (0.06435942, -0.9658968, -0.25080088), (0.24323243, -0.9389761, -0.2432325), (0.25080067, -0.96589684, -0.06436014), (0.066869594, -0.99772346, -0.008746261), (0.066440225, -0.99557585, -0.06644032), (0.25080067, -0.96589684, -0.06436014), (0.2527339, -0.967498, -0.008556373), (0.00855638, -0.9674979, -0.2527341), (0.008026815, -0.89129686, -0.45334926), (0.059825737, -0.890736, -0.45056677), (0.06435942, -0.9658968, -0.25080088), (0.008026815, -0.89129686, -0.45334926), (0.0076085823, -0.8095291, -0.5870304), (0.056214016, -0.80958444, -0.58430564), (0.059825737, -0.890736, -0.45056677), (0.059825737, -0.890736, -0.45056677), (0.056214016, -0.80958444, -0.58430564), (0.21497574, -0.7932482, -0.5696866), (0.22809102, -0.86932856, -0.43845454), (0.06435942, -0.9658968, -0.25080088), (0.059825737, -0.890736, -0.45056677), (0.22809102, -0.86932856, -0.43845454), (0.24323243, -0.9389761, -0.2432325), (0.0076085823, -0.8095291, -0.5870304), (0.007422037, -0.70708776, -0.7070869), (0.05467809, -0.7060497, -0.70604825), (0.056214016, -0.80958444, -0.58430564), (0.007422037, -0.70708776, -0.7070869), (0.007608584, -0.5870311, -0.8095286), (0.056214087, -0.5843061, -0.8095841), (0.05467809, -0.7060497, -0.70604825), (0.05467809, -0.7060497, -0.70604825), (0.056214087, -0.5843061, -0.8095841), (0.21497601, -0.569687, -0.7932478), (0.20921862, -0.69145876, -0.69145674), (0.056214016, -0.80958444, -0.58430564), (0.05467809, -0.7060497, -0.70604825), (0.20921862, -0.69145876, -0.69145674), (0.21497574, -0.7932482, -0.5696866), (0.2527339, -0.967498, -0.008556373), (0.25080067, -0.96589684, -0.06436014), (0.4505655, -0.8907365, -0.05982666), (0.45334753, -0.8912977, -0.008026807), (0.25080067, -0.96589684, -0.06436014), (0.24323243, -0.9389761, -0.2432325), (0.43845463, -0.8693286, -0.22809082), (0.4505655, -0.8907365, -0.05982666), (0.4505655, -0.8907365, -0.05982666), (0.43845463, -0.8693286, -0.22809082), (0.5696871, -0.7932478, -0.21497586), (0.5843058, -0.8095842, -0.056214456), (0.45334753, -0.8912977, -0.008026807), (0.4505655, -0.8907365, -0.05982666), (0.5843058, -0.8095842, -0.056214456), (0.58703107, -0.8095287, -0.007608625), (0.24323243, -0.9389761, -0.2432325), (0.22809102, -0.86932856, -0.43845454), (0.41160694, -0.81311774, -0.41160566), (0.43845463, -0.8693286, -0.22809082), (0.22809102, -0.86932856, -0.43845454), (0.21497574, -0.7932482, -0.5696866), (0.38622174, -0.75112295, -0.5353945), (0.41160694, -0.81311774, -0.41160566), (0.41160694, -0.81311774, -0.41160566), (0.38622174, -0.75112295, -0.5353945), (0.4980668, -0.70983076, -0.49806598), (0.5353951, -0.75112313, -0.3862204), (0.43845463, -0.8693286, -0.22809082), (0.41160694, -0.81311774, -0.41160566), (0.5353951, -0.75112313, -0.3862204), (0.5696871, -0.7932478, -0.21497586), (0.21497574, -0.7932482, -0.5696866), (0.20921862, -0.69145876, -0.69145674), (0.37367216, -0.6558844, -0.65588474), (0.38622174, -0.75112295, -0.5353945), (0.20921862, -0.69145876, -0.69145674), (0.21497601, -0.569687, -0.7932478), (0.38622177, -0.53539467, -0.7511227), (0.37367216, -0.6558844, -0.65588474), (0.37367216, -0.6558844, -0.65588474), (0.38622177, -0.53539467, -0.7511227), (0.49806684, -0.49806643, -0.70983046), (0.47519925, -0.6221674, -0.6221683), (0.38622174, -0.75112295, -0.5353945), (0.37367216, -0.6558844, -0.65588474), (0.47519925, -0.6221674, -0.6221683), (0.4980668, -0.70983076, -0.49806598), (0.008729802, -0.008729626, -0.9999238), (0.066869475, -0.0087460885, -0.99772334), (0.06644033, -0.066440254, -0.99557585), (0.008746261, -0.066869654, -0.99772346), (0.066869475, -0.0087460885, -0.99772334), (0.25273225, -0.008556349, -0.9674984), (0.25079957, -0.06435966, -0.96589726), (0.06644033, -0.066440254, -0.99557585), (0.06644033, -0.066440254, -0.99557585), (0.25079957, -0.06435966, -0.96589726), (0.24323209, -0.24323283, -0.938976), (0.06436011, -0.25080064, -0.9658968), (0.008746261, -0.066869654, -0.99772346), (0.06644033, -0.066440254, -0.99557585), (0.06436011, -0.25080064, -0.9658968), (0.008556373, -0.2527339, -0.96749794), (0.25273225, -0.008556349, -0.9674984), (0.45334682, -0.008026693, -0.891298), (0.45056525, -0.05982674, -0.8907366), (0.25079957, -0.06435966, -0.96589726), (0.45334682, -0.008026693, -0.891298), (0.5870318, -0.007608464, -0.8095281), (0.5843064, -0.056215066, -0.8095838), (0.45056525, -0.05982674, -0.8907366), (0.45056525, -0.05982674, -0.8907366), (0.5843064, -0.056215066, -0.8095838), (0.5696869, -0.21497633, -0.7932478), (0.4384537, -0.22809166, -0.8693288), (0.25079957, -0.06435966, -0.96589726), (0.45056525, -0.05982674, -0.8907366), (0.4384537, -0.22809166, -0.8693288), (0.24323209, -0.24323283, -0.938976), (0.5870318, -0.007608464, -0.8095281), (0.7070885, -0.007422013, -0.70708627), (0.7060492, -0.054678716, -0.7060488), (0.5843064, -0.056215066, -0.8095838), (0.7070885, -0.007422013, -0.70708627), (0.8095288, -0.007608584, -0.58703077), (0.8095842, -0.05621441, -0.5843059), (0.7060492, -0.054678716, -0.7060488), (0.7060492, -0.054678716, -0.7060488), (0.8095842, -0.05621441, -0.5843059), (0.79324776, -0.21497586, -0.56968707), (0.69145757, -0.20921837, -0.69145805), (0.5843064, -0.056215066, -0.8095838), (0.7060492, -0.054678716, -0.7060488), (0.69145757, -0.20921837, -0.69145805), (0.5696869, -0.21497633, -0.7932478), (0.008556373, -0.2527339, -0.96749794), (0.06436011, -0.25080064, -0.9658968), (0.059826583, -0.45056605, -0.8907361), (0.008026792, -0.45334834, -0.89129734), (0.06436011, -0.25080064, -0.9658968), (0.24323209, -0.24323283, -0.938976), (0.22809066, -0.4384545, -0.8693287), (0.059826583, -0.45056605, -0.8907361), (0.059826583, -0.45056605, -0.8907361), (0.22809066, -0.4384545, -0.8693287), (0.21497601, -0.569687, -0.7932478), (0.056214087, -0.5843061, -0.8095841), (0.008026792, -0.45334834, -0.89129734), (0.059826583, -0.45056605, -0.8907361), (0.056214087, -0.5843061, -0.8095841), (0.007608584, -0.5870311, -0.8095286), (0.24323209, -0.24323283, -0.938976), (0.4384537, -0.22809166, -0.8693288), (0.41160607, -0.4116068, -0.8131177), (0.22809066, -0.4384545, -0.8693287), (0.4384537, -0.22809166, -0.8693288), (0.5696869, -0.21497633, -0.7932478), (0.5353955, -0.3862208, -0.7511227), (0.41160607, -0.4116068, -0.8131177), (0.41160607, -0.4116068, -0.8131177), (0.5353955, -0.3862208, -0.7511227), (0.49806684, -0.49806643, -0.70983046), (0.38622177, -0.53539467, -0.7511227), (0.22809066, -0.4384545, -0.8693287), (0.41160607, -0.4116068, -0.8131177), (0.38622177, -0.53539467, -0.7511227), (0.21497601, -0.569687, -0.7932478), (0.5696869, -0.21497633, -0.7932478), (0.69145757, -0.20921837, -0.69145805), (0.65588546, -0.37367123, -0.65588415), (0.5353955, -0.3862208, -0.7511227), (0.69145757, -0.20921837, -0.69145805), (0.79324776, -0.21497586, -0.56968707), (0.75112224, -0.38622245, -0.5353948), (0.65588546, -0.37367123, -0.65588415), (0.65588546, -0.37367123, -0.65588415), (0.75112224, -0.38622245, -0.5353948), (0.7098304, -0.49806717, -0.4980662), (0.62216806, -0.4751998, -0.6221673), (0.5353955, -0.3862208, -0.7511227), (0.65588546, -0.37367123, -0.65588415), (0.62216806, -0.4751998, -0.6221673), (0.49806684, -0.49806643, -0.70983046), (0.7098304, -0.49806717, -0.4980662), (0.6221682, -0.6221675, -0.4751993), (0.57735056, -0.5773498, -0.57735044), (0.62216806, -0.4751998, -0.6221673), (0.4980668, -0.70983076, -0.49806598), (0.47519925, -0.6221674, -0.6221683), (0.57735056, -0.5773498, -0.57735044), (0.6221682, -0.6221675, -0.4751993), (0.49806684, -0.49806643, -0.70983046), (0.62216806, -0.4751998, -0.6221673), (0.57735056, -0.5773498, -0.57735044), (0.47519925, -0.6221674, -0.6221683), (-0.0087295845, 0.9999237, 0.008729875), (-0.06686996, 0.99772346, 0.008746224), (-0.06644051, 0.99557585, 0.06643997), (-0.008746031, 0.9977235, 0.066868536), (-0.06686996, 0.99772346, 0.008746224), (-0.2527324, 0.96749836, 0.008556367), (-0.25079912, 0.9658973, 0.06435968), (-0.06644051, 0.99557585, 0.06643997), (-0.06644051, 0.99557585, 0.06643997), (-0.25079912, 0.9658973, 0.06435968), (-0.24323265, 0.93897593, 0.24323265), (-0.064359635, 0.96589696, 0.2508003), (-0.008746031, 0.9977235, 0.066868536), (-0.06644051, 0.99557585, 0.06643997), (-0.064359635, 0.96589696, 0.2508003), (-0.008556345, 0.96749806, 0.25273356), (-0.2527324, 0.96749836, 0.008556367), (-0.4533469, 0.89129806, 0.008026665), (-0.45056504, 0.89073676, 0.05982708), (-0.25079912, 0.9658973, 0.06435968), (-0.4533469, 0.89129806, 0.008026665), (-0.587032, 0.80952793, 0.0076084905), (-0.58430713, 0.80958325, 0.05621505), (-0.45056504, 0.89073676, 0.05982708), (-0.45056504, 0.89073676, 0.05982708), (-0.58430713, 0.80958325, 0.05621505), (-0.56968766, 0.7932473, 0.21497579), (-0.43845552, 0.8693281, 0.22809114), (-0.25079912, 0.9658973, 0.06435968), (-0.45056504, 0.89073676, 0.05982708), (-0.43845552, 0.8693281, 0.22809114), (-0.24323265, 0.93897593, 0.24323265), (-0.587032, 0.80952793, 0.0076084905), (-0.7070873, 0.7070874, 0.0074220556), (-0.70604926, 0.7060486, 0.054678425), (-0.58430713, 0.80958325, 0.05621505), (-0.7070873, 0.7070874, 0.0074220556), (-0.80952924, 0.5870303, 0.007608562), (-0.8095845, 0.58430535, 0.05621441), (-0.70604926, 0.7060486, 0.054678425), (-0.70604926, 0.7060486, 0.054678425), (-0.8095845, 0.58430535, 0.05621441), (-0.79324794, 0.56968695, 0.21497534), (-0.6914576, 0.69145787, 0.20921859), (-0.58430713, 0.80958325, 0.05621505), (-0.70604926, 0.7060486, 0.054678425), (-0.6914576, 0.69145787, 0.20921859), (-0.56968766, 0.7932473, 0.21497579), (-0.008556345, 0.96749806, 0.25273356), (-0.064359635, 0.96589696, 0.2508003), (-0.05982603, 0.89073664, 0.4505652), (-0.00802675, 0.89129716, 0.45334864), (-0.064359635, 0.96589696, 0.2508003), (-0.24323265, 0.93897593, 0.24323265), (-0.22809155, 0.86932844, 0.4384543), (-0.05982603, 0.89073664, 0.4505652), (-0.05982603, 0.89073664, 0.4505652), (-0.22809155, 0.86932844, 0.4384543), (-0.21497521, 0.79324794, 0.569687), (-0.05621419, 0.8095844, 0.5843055), (-0.00802675, 0.89129716, 0.45334864), (-0.05982603, 0.89073664, 0.4505652), (-0.05621419, 0.8095844, 0.5843055), (-0.0076085376, 0.8095291, 0.5870303), (-0.24323265, 0.93897593, 0.24323265), (-0.43845552, 0.8693281, 0.22809114), (-0.4116076, 0.8131175, 0.41160548), (-0.22809155, 0.86932844, 0.4384543), (-0.43845552, 0.8693281, 0.22809114), (-0.56968766, 0.7932473, 0.21497579), (-0.5353945, 0.7511235, 0.38622054), (-0.4116076, 0.8131175, 0.41160548), (-0.4116076, 0.8131175, 0.41160548), (-0.5353945, 0.7511235, 0.38622054), (-0.49806696, 0.70983064, 0.49806586), (-0.3862219, 0.75112313, 0.53539395), (-0.22809155, 0.86932844, 0.4384543), (-0.4116076, 0.8131175, 0.41160548), (-0.3862219, 0.75112313, 0.53539395), (-0.21497521, 0.79324794, 0.569687), (-0.56968766, 0.7932473, 0.21497579), (-0.6914576, 0.69145787, 0.20921859), (-0.6558841, 0.6558846, 0.37367278), (-0.5353945, 0.7511235, 0.38622054), (-0.6914576, 0.69145787, 0.20921859), (-0.79324794, 0.56968695, 0.21497534), (-0.75112295, 0.5353946, 0.3862214), (-0.6558841, 0.6558846, 0.37367278), (-0.6558841, 0.6558846, 0.37367278), (-0.75112295, 0.5353946, 0.3862214), (-0.70983076, 0.4980662, 0.49806672), (-0.6221674, 0.622167, 0.475201), (-0.5353945, 0.7511235, 0.38622054), (-0.6558841, 0.6558846, 0.37367278), (-0.6221674, 0.622167, 0.475201), (-0.49806696, 0.70983064, 0.49806586), (-0.9999237, 0.008729818, 0.008729671), (-0.99772346, 0.008746129, 0.06686967), (-0.99557585, 0.066439934, 0.06644043), (-0.9977235, 0.066868536, 0.008746031), (-0.99772346, 0.008746129, 0.06686967), (-0.96749836, 0.008556316, 0.25273252), (-0.96589714, 0.06435975, 0.25079945), (-0.99557585, 0.066439934, 0.06644043), (-0.99557585, 0.066439934, 0.06644043), (-0.96589714, 0.06435975, 0.25079945), (-0.9389759, 0.24323283, 0.24323262), (-0.96589696, 0.25080028, 0.06435958), (-0.9977235, 0.066868536, 0.008746031), (-0.99557585, 0.066439934, 0.06644043), (-0.96589696, 0.25080028, 0.06435958), (-0.96749806, 0.25273356, 0.008556345), (-0.96749836, 0.008556316, 0.25273252), (-0.8912978, 0.008026594, 0.4533473), (-0.89073664, 0.059827052, 0.45056516), (-0.96589714, 0.06435975, 0.25079945), (-0.8912978, 0.008026594, 0.4533473), (-0.80952793, 0.00760842, 0.58703196), (-0.80958307, 0.056215055, 0.58430725), (-0.89073664, 0.059827052, 0.45056516), (-0.89073664, 0.059827052, 0.45056516), (-0.80958307, 0.056215055, 0.58430725), (-0.79324687, 0.21497609, 0.56968826), (-0.869328, 0.22809157, 0.43845546), (-0.96589714, 0.06435975, 0.25079945), (-0.89073664, 0.059827052, 0.45056516), (-0.869328, 0.22809157, 0.43845546), (-0.9389759, 0.24323283, 0.24323262), (-0.80952793, 0.00760842, 0.58703196), (-0.70708734, 0.0074221203, 0.7070873), (-0.7060478, 0.05467838, 0.70605016), (-0.80958307, 0.056215055, 0.58430725), (-0.70708734, 0.0074221203, 0.7070873), (-0.58703077, 0.007608622, 0.8095288), (-0.58430654, 0.05621375, 0.8095838), (-0.7060478, 0.05467838, 0.70605016), (-0.7060478, 0.05467838, 0.70605016), (-0.58430654, 0.05621375, 0.8095838), (-0.5696875, 0.21497461, 0.7932478), (-0.69145733, 0.20921819, 0.69145834), (-0.80958307, 0.056215055, 0.58430725), (-0.7060478, 0.05467838, 0.70605016), (-0.69145733, 0.20921819, 0.69145834), (-0.79324687, 0.21497609, 0.56968826), (-0.96749806, 0.25273356, 0.008556345), (-0.96589696, 0.25080028, 0.06435958), (-0.89073664, 0.45056522, 0.059826184), (-0.89129776, 0.45334753, 0.008026788), (-0.96589696, 0.25080028, 0.06435958), (-0.9389759, 0.24323283, 0.24323262), (-0.86932856, 0.43845457, 0.22809091), (-0.89073664, 0.45056522, 0.059826184), (-0.89073664, 0.45056522, 0.059826184), (-0.86932856, 0.43845457, 0.22809091), (-0.79324794, 0.56968695, 0.21497534), (-0.8095845, 0.58430535, 0.05621441), (-0.89129776, 0.45334753, 0.008026788), (-0.89073664, 0.45056522, 0.059826184), (-0.8095845, 0.58430535, 0.05621441), (-0.80952924, 0.5870303, 0.007608562), (-0.9389759, 0.24323283, 0.24323262), (-0.869328, 0.22809157, 0.43845546), (-0.8131173, 0.41160613, 0.41160724), (-0.86932856, 0.43845457, 0.22809091), (-0.869328, 0.22809157, 0.43845546), (-0.79324687, 0.21497609, 0.56968826), (-0.7511228, 0.38622123, 0.5353951), (-0.8131173, 0.41160613, 0.41160724), (-0.8131173, 0.41160613, 0.41160724), (-0.7511228, 0.38622123, 0.5353951), (-0.70983076, 0.4980662, 0.49806672), (-0.75112295, 0.5353946, 0.3862214), (-0.86932856, 0.43845457, 0.22809091), (-0.8131173, 0.41160613, 0.41160724), (-0.75112295, 0.5353946, 0.3862214), (-0.79324794, 0.56968695, 0.21497534), (-0.79324687, 0.21497609, 0.56968826), (-0.69145733, 0.20921819, 0.69145834), (-0.6558849, 0.37367216, 0.65588415), (-0.7511228, 0.38622123, 0.5353951), (-0.69145733, 0.20921819, 0.69145834), (-0.5696875, 0.21497461, 0.7932478), (-0.5353943, 0.38622153, 0.75112313), (-0.6558849, 0.37367216, 0.65588415), (-0.6558849, 0.37367216, 0.65588415), (-0.5353943, 0.38622153, 0.75112313), (-0.49806613, 0.4980667, 0.7098308), (-0.6221677, 0.47520036, 0.62216717), (-0.7511228, 0.38622123, 0.5353951), (-0.6558849, 0.37367216, 0.65588415), (-0.6221677, 0.47520036, 0.62216717), (-0.70983076, 0.4980662, 0.49806672), (-0.008729781, 0.008729593, 0.9999238), (-0.008746224, 0.06686989, 0.9977234), (-0.06643997, 0.06644048, 0.99557585), (-0.06686886, 0.008746096, 0.99772346), (-0.008746224, 0.06686989, 0.9977234), (-0.008556372, 0.25273418, 0.967498), (-0.06435941, 0.25080088, 0.9658968), (-0.06643997, 0.06644048, 0.99557585), (-0.06643997, 0.06644048, 0.99557585), (-0.06435941, 0.25080088, 0.9658968), (-0.24323171, 0.24323429, 0.9389758), (-0.2508006, 0.06435973, 0.9658969), (-0.06686886, 0.008746096, 0.99772346), (-0.06643997, 0.06644048, 0.99557585), (-0.2508006, 0.06435973, 0.9658969), (-0.25273433, 0.008556326, 0.9674979), (-0.008556372, 0.25273418, 0.967498), (-0.008026742, 0.45334738, 0.89129776), (-0.05982613, 0.45056546, 0.8907366), (-0.06435941, 0.25080088, 0.9658968), (-0.008026742, 0.45334738, 0.89129776), (-0.0076085827, 0.58703005, 0.80952936), (-0.056214213, 0.58430487, 0.8095849), (-0.05982613, 0.45056546, 0.8907366), (-0.05982613, 0.45056546, 0.8907366), (-0.056214213, 0.58430487, 0.8095849), (-0.21497618, 0.5696853, 0.7932489), (-0.22809018, 0.43845594, 0.8693281), (-0.06435941, 0.25080088, 0.9658968), (-0.05982613, 0.45056546, 0.8907366), (-0.22809018, 0.43845594, 0.8693281), (-0.24323171, 0.24323429, 0.9389758), (-0.0076085827, 0.58703005, 0.80952936), (-0.007422089, 0.7070873, 0.7070873), (-0.054678056, 0.7060483, 0.70604974), (-0.056214213, 0.58430487, 0.8095849), (-0.007422089, 0.7070873, 0.7070873), (-0.0076085376, 0.8095291, 0.5870303), (-0.05621419, 0.8095844, 0.5843055), (-0.054678056, 0.7060483, 0.70604974), (-0.054678056, 0.7060483, 0.70604974), (-0.05621419, 0.8095844, 0.5843055), (-0.21497521, 0.79324794, 0.569687), (-0.20921753, 0.6914566, 0.6914591), (-0.056214213, 0.58430487, 0.8095849), (-0.054678056, 0.7060483, 0.70604974), (-0.20921753, 0.6914566, 0.6914591), (-0.21497618, 0.5696853, 0.7932489), (-0.25273433, 0.008556326, 0.9674979), (-0.2508006, 0.06435973, 0.9658969), (-0.4505674, 0.059825808, 0.89073557), (-0.4533484, 0.008026673, 0.8912972), (-0.2508006, 0.06435973, 0.9658969), (-0.24323171, 0.24323429, 0.9389758), (-0.4384542, 0.22809191, 0.8693284), (-0.4505674, 0.059825808, 0.89073557), (-0.4505674, 0.059825808, 0.89073557), (-0.4384542, 0.22809191, 0.8693284), (-0.5696875, 0.21497461, 0.7932478), (-0.58430654, 0.05621375, 0.8095838), (-0.4533484, 0.008026673, 0.8912972), (-0.4505674, 0.059825808, 0.89073557), (-0.58430654, 0.05621375, 0.8095838), (-0.58703077, 0.007608622, 0.8095288), (-0.24323171, 0.24323429, 0.9389758), (-0.22809018, 0.43845594, 0.8693281), (-0.41160512, 0.41160768, 0.8131177), (-0.4384542, 0.22809191, 0.8693284), (-0.22809018, 0.43845594, 0.8693281), (-0.21497618, 0.5696853, 0.7932489), (-0.38622174, 0.5353933, 0.7511237), (-0.41160512, 0.41160768, 0.8131177), (-0.41160512, 0.41160768, 0.8131177), (-0.38622174, 0.5353933, 0.7511237), (-0.49806613, 0.4980667, 0.7098308), (-0.5353943, 0.38622153, 0.75112313), (-0.4384542, 0.22809191, 0.8693284), (-0.41160512, 0.41160768, 0.8131177), (-0.5353943, 0.38622153, 0.75112313), (-0.5696875, 0.21497461, 0.7932478), (-0.21497618, 0.5696853, 0.7932489), (-0.20921753, 0.6914566, 0.6914591), (-0.3736724, 0.6558836, 0.6558854), (-0.38622174, 0.5353933, 0.7511237), (-0.20921753, 0.6914566, 0.6914591), (-0.21497521, 0.79324794, 0.569687), (-0.3862219, 0.75112313, 0.53539395), (-0.3736724, 0.6558836, 0.6558854), (-0.3736724, 0.6558836, 0.6558854), (-0.3862219, 0.75112313, 0.53539395), (-0.49806696, 0.70983064, 0.49806586), (-0.47520116, 0.6221668, 0.62216735), (-0.38622174, 0.5353933, 0.7511237), (-0.3736724, 0.6558836, 0.6558854), (-0.47520116, 0.6221668, 0.62216735), (-0.49806613, 0.4980667, 0.7098308), (-0.49806696, 0.70983064, 0.49806586), (-0.6221674, 0.622167, 0.475201), (-0.5773506, 0.5773503, 0.57734996), (-0.47520116, 0.6221668, 0.62216735), (-0.70983076, 0.4980662, 0.49806672), (-0.6221677, 0.47520036, 0.62216717), (-0.5773506, 0.5773503, 0.57734996), (-0.6221674, 0.622167, 0.475201), (-0.49806613, 0.4980667, 0.7098308), (-0.47520116, 0.6221668, 0.62216735), (-0.5773506, 0.5773503, 0.57734996), (-0.6221677, 0.47520036, 0.62216717), (-0.9999237, 0.008729834, -0.0087296385), (-0.99772346, 0.066869155, -0.008745991), (-0.99557585, 0.06644032, -0.06644022), (-0.9977234, 0.0087461565, -0.0668692), (-0.99772346, 0.066869155, -0.008745991), (-0.9674983, 0.25273272, -0.008556292), (-0.96589714, 0.2507995, -0.06435965), (-0.99557585, 0.06644032, -0.06644022), (-0.99557585, 0.06644032, -0.06644022), (-0.96589714, 0.2507995, -0.06435965), (-0.93897605, 0.24323195, -0.24323285), (-0.9658969, 0.06435986, -0.25080052), (-0.9977234, 0.0087461565, -0.0668692), (-0.99557585, 0.06644032, -0.06644022), (-0.9658969, 0.06435986, -0.25080052), (-0.967498, 0.008556325, -0.25273356), (-0.9674983, 0.25273272, -0.008556292), (-0.89129794, 0.4533471, -0.008026635), (-0.8907366, 0.45056525, -0.05982674), (-0.96589714, 0.2507995, -0.06435965), (-0.89129794, 0.4533471, -0.008026635), (-0.8095287, 0.58703107, -0.0076083946), (-0.8095838, 0.5843065, -0.056215074), (-0.8907366, 0.45056525, -0.05982674), (-0.8907366, 0.45056525, -0.05982674), (-0.8095838, 0.5843065, -0.056215074), (-0.7932478, 0.56968695, -0.2149763), (-0.8693287, 0.4384539, -0.22809157), (-0.96589714, 0.2507995, -0.06435965), (-0.8907366, 0.45056525, -0.05982674), (-0.8693287, 0.4384539, -0.22809157), (-0.93897605, 0.24323195, -0.24323285), (-0.8095287, 0.58703107, -0.0076083946), (-0.70708734, 0.7070873, -0.0074219937), (-0.70604914, 0.70604885, -0.05467868), (-0.8095838, 0.5843065, -0.056215074), (-0.70708734, 0.7070873, -0.0074219937), (-0.58703107, 0.8095287, -0.007608625), (-0.5843058, 0.8095842, -0.056214456), (-0.70604914, 0.70604885, -0.05467868), (-0.70604914, 0.70604885, -0.05467868), (-0.5843058, 0.8095842, -0.056214456), (-0.5696871, 0.7932478, -0.21497586), (-0.6914582, 0.6914573, -0.20921837), (-0.8095838, 0.5843065, -0.056215074), (-0.70604914, 0.70604885, -0.05467868), (-0.6914582, 0.6914573, -0.20921837), (-0.7932478, 0.56968695, -0.2149763), (-0.967498, 0.008556325, -0.25273356), (-0.9658969, 0.06435986, -0.25080052), (-0.8907362, 0.05982603, -0.45056623), (-0.89129704, 0.008026684, -0.45334873), (-0.9658969, 0.06435986, -0.25080052), (-0.93897605, 0.24323195, -0.24323285), (-0.8693284, 0.22809115, -0.43845493), (-0.8907362, 0.05982603, -0.45056623), (-0.8907362, 0.05982603, -0.45056623), (-0.8693284, 0.22809115, -0.43845493), (-0.7932483, 0.21497609, -0.56968623), (-0.8095842, 0.05621355, -0.58430594), (-0.89129704, 0.008026684, -0.45334873), (-0.8907362, 0.05982603, -0.45056623), (-0.8095842, 0.05621355, -0.58430594), (-0.8095284, 0.007608595, -0.5870314), (-0.93897605, 0.24323195, -0.24323285), (-0.8693287, 0.4384539, -0.22809157), (-0.813117, 0.4116072, -0.4116068), (-0.8693284, 0.22809115, -0.43845493), (-0.8693287, 0.4384539, -0.22809157), (-0.7932478, 0.56968695, -0.2149763), (-0.75112265, 0.5353953, -0.38622096), (-0.813117, 0.4116072, -0.4116068), (-0.813117, 0.4116072, -0.4116068), (-0.75112265, 0.5353953, -0.38622096), (-0.7098304, 0.49806717, -0.4980662), (-0.7511224, 0.38622326, -0.53539413), (-0.8693284, 0.22809115, -0.43845493), (-0.813117, 0.4116072, -0.4116068), (-0.7511224, 0.38622326, -0.53539413), (-0.7932483, 0.21497609, -0.56968623), (-0.7932478, 0.56968695, -0.2149763), (-0.6914582, 0.6914573, -0.20921837), (-0.65588504, 0.6558848, -0.3736708), (-0.75112265, 0.5353953, -0.38622096), (-0.6914582, 0.6914573, -0.20921837), (-0.5696871, 0.7932478, -0.21497586), (-0.5353951, 0.75112313, -0.3862204), (-0.65588504, 0.6558848, -0.3736708), (-0.65588504, 0.6558848, -0.3736708), (-0.5353951, 0.75112313, -0.3862204), (-0.49806765, 0.709831, -0.49806485), (-0.6221682, 0.6221675, -0.4751993), (-0.75112265, 0.5353953, -0.38622096), (-0.65588504, 0.6558848, -0.3736708), (-0.6221682, 0.6221675, -0.4751993), (-0.7098304, 0.49806717, -0.4980662), (-0.008729585, 0.9999237, -0.008729895), (-0.0087460205, 0.99772346, -0.06686869), (-0.066440254, 0.99557585, -0.06644032), (-0.066869654, 0.99772346, -0.008746261), (-0.0087460205, 0.99772346, -0.06686869), (-0.00855638, 0.9674979, -0.2527341), (-0.06435942, 0.9658968, -0.25080088), (-0.066440254, 0.99557585, -0.06644032), (-0.066440254, 0.99557585, -0.06644032), (-0.06435942, 0.9658968, -0.25080088), (-0.24323243, 0.9389761, -0.2432325), (-0.25080067, 0.96589684, -0.06436014), (-0.066869654, 0.99772346, -0.008746261), (-0.066440254, 0.99557585, -0.06644032), (-0.25080067, 0.96589684, -0.06436014), (-0.2527339, 0.967498, -0.008556373), (-0.00855638, 0.9674979, -0.2527341), (-0.008026815, 0.89129686, -0.45334926), (-0.059825737, 0.890736, -0.45056677), (-0.06435942, 0.9658968, -0.25080088), (-0.008026815, 0.89129686, -0.45334926), (-0.0076085823, 0.8095291, -0.5870304), (-0.056214016, 0.80958444, -0.58430564), (-0.059825737, 0.890736, -0.45056677), (-0.059825737, 0.890736, -0.45056677), (-0.056214016, 0.80958444, -0.58430564), (-0.21497537, 0.79324883, -0.5696858), (-0.22809102, 0.86932856, -0.43845454), (-0.06435942, 0.9658968, -0.25080088), (-0.059825737, 0.890736, -0.45056677), (-0.22809102, 0.86932856, -0.43845454), (-0.24323243, 0.9389761, -0.2432325), (-0.0076085823, 0.8095291, -0.5870304), (-0.007422037, 0.70708776, -0.7070869), (-0.05467809, 0.7060497, -0.70604825), (-0.056214016, 0.80958444, -0.58430564), (-0.007422037, 0.70708776, -0.7070869), (-0.007608584, 0.5870311, -0.8095286), (-0.056214087, 0.5843061, -0.8095841), (-0.05467809, 0.7060497, -0.70604825), (-0.05467809, 0.7060497, -0.70604825), (-0.056214087, 0.5843061, -0.8095841), (-0.21497366, 0.56968653, -0.7932488), (-0.20921701, 0.69145924, -0.69145674), (-0.056214016, 0.80958444, -0.58430564), (-0.05467809, 0.7060497, -0.70604825), (-0.20921701, 0.69145924, -0.69145674), (-0.21497537, 0.79324883, -0.5696858), (-0.2527339, 0.967498, -0.008556373), (-0.25080067, 0.96589684, -0.06436014), (-0.4505655, 0.8907365, -0.05982666), (-0.45334753, 0.8912977, -0.008026807), (-0.25080067, 0.96589684, -0.06436014), (-0.24323243, 0.9389761, -0.2432325), (-0.43845463, 0.8693286, -0.22809082), (-0.4505655, 0.8907365, -0.05982666), (-0.4505655, 0.8907365, -0.05982666), (-0.43845463, 0.8693286, -0.22809082), (-0.5696871, 0.7932478, -0.21497586), (-0.5843058, 0.8095842, -0.056214456), (-0.45334753, 0.8912977, -0.008026807), (-0.4505655, 0.8907365, -0.05982666), (-0.5843058, 0.8095842, -0.056214456), (-0.58703107, 0.8095287, -0.007608625), (-0.24323243, 0.9389761, -0.2432325), (-0.22809102, 0.86932856, -0.43845454), (-0.41160694, 0.81311774, -0.41160566), (-0.43845463, 0.8693286, -0.22809082), (-0.22809102, 0.86932856, -0.43845454), (-0.21497537, 0.79324883, -0.5696858), (-0.38622215, 0.75112385, -0.53539276), (-0.41160694, 0.81311774, -0.41160566), (-0.41160694, 0.81311774, -0.41160566), (-0.38622215, 0.75112385, -0.53539276), (-0.49806765, 0.709831, -0.49806485), (-0.5353951, 0.75112313, -0.3862204), (-0.43845463, 0.8693286, -0.22809082), (-0.41160694, 0.81311774, -0.41160566), (-0.5353951, 0.75112313, -0.3862204), (-0.5696871, 0.7932478, -0.21497586), (-0.21497537, 0.79324883, -0.5696858), (-0.20921701, 0.69145924, -0.69145674), (-0.3736717, 0.6558854, -0.65588397), (-0.38622215, 0.75112385, -0.53539276), (-0.20921701, 0.69145924, -0.69145674), (-0.21497366, 0.56968653, -0.7932488), (-0.38621938, 0.53539497, -0.7511236), (-0.3736717, 0.6558854, -0.65588397), (-0.3736717, 0.6558854, -0.65588397), (-0.38621938, 0.53539497, -0.7511236), (-0.49806824, 0.4980669, -0.70982903), (-0.47520164, 0.6221671, -0.6221668), (-0.38622215, 0.75112385, -0.53539276), (-0.3736717, 0.6558854, -0.65588397), (-0.47520164, 0.6221671, -0.6221668), (-0.49806765, 0.709831, -0.49806485), (-0.008729805, 0.008729596, -0.9999238), (-0.066869475, 0.008746074, -0.99772334), (-0.06644033, 0.06644022, -0.99557585), (-0.008746261, 0.066869594, -0.99772346), (-0.066869475, 0.008746074, -0.99772334), (-0.25273225, 0.008556349, -0.9674984), (-0.25079957, 0.06435966, -0.96589726), (-0.06644033, 0.06644022, -0.99557585), (-0.06644033, 0.06644022, -0.99557585), (-0.25079957, 0.06435966, -0.96589726), (-0.24323224, 0.24323304, -0.93897593), (-0.06436011, 0.25080064, -0.9658968), (-0.008746261, 0.066869594, -0.99772346), (-0.06644033, 0.06644022, -0.99557585), (-0.06436011, 0.25080064, -0.9658968), (-0.008556373, 0.2527339, -0.96749794), (-0.25273225, 0.008556349, -0.9674984), (-0.45334682, 0.008026693, -0.891298), (-0.45056525, 0.05982674, -0.8907366), (-0.25079957, 0.06435966, -0.96589726), (-0.45334682, 0.008026693, -0.891298), (-0.58703256, 0.0076084984, -0.8095276), (-0.58430666, 0.056214884, -0.80958354), (-0.45056525, 0.05982674, -0.8907366), (-0.45056525, 0.05982674, -0.8907366), (-0.58430666, 0.056214884, -0.80958354), (-0.56968755, 0.21497445, -0.7932478), (-0.43845403, 0.22809082, -0.8693289), (-0.25079957, 0.06435966, -0.96589726), (-0.45056525, 0.05982674, -0.8907366), (-0.43845403, 0.22809082, -0.8693289), (-0.24323224, 0.24323304, -0.93897593), (-0.58703256, 0.0076084984, -0.8095276), (-0.7070887, 0.0074221115, -0.70708597), (-0.7060497, 0.054678068, -0.7060483), (-0.58430666, 0.056214884, -0.80958354), (-0.7070887, 0.0074221115, -0.70708597), (-0.8095284, 0.007608595, -0.5870314), (-0.8095842, 0.05621355, -0.58430594), (-0.7060497, 0.054678068, -0.7060483), (-0.7060497, 0.054678068, -0.7060483), (-0.8095842, 0.05621355, -0.58430594), (-0.7932483, 0.21497609, -0.56968623), (-0.6914589, 0.20921727, -0.6914571), (-0.58430666, 0.056214884, -0.80958354), (-0.7060497, 0.054678068, -0.7060483), (-0.6914589, 0.20921727, -0.6914571), (-0.56968755, 0.21497445, -0.7932478), (-0.008556373, 0.2527339, -0.96749794), (-0.06436011, 0.25080064, -0.9658968), (-0.059826583, 0.45056605, -0.8907361), (-0.008026792, 0.45334834, -0.89129734), (-0.06436011, 0.25080064, -0.9658968), (-0.24323224, 0.24323304, -0.93897593), (-0.2280898, 0.43845448, -0.86932886), (-0.059826583, 0.45056605, -0.8907361), (-0.059826583, 0.45056605, -0.8907361), (-0.2280898, 0.43845448, -0.86932886), (-0.21497366, 0.56968653, -0.7932488), (-0.056214087, 0.5843061, -0.8095841), (-0.008026792, 0.45334834, -0.89129734), (-0.059826583, 0.45056605, -0.8907361), (-0.056214087, 0.5843061, -0.8095841), (-0.007608584, 0.5870311, -0.8095286), (-0.24323224, 0.24323304, -0.93897593), (-0.43845403, 0.22809082, -0.8693289), (-0.41160545, 0.41160646, -0.8131181), (-0.2280898, 0.43845448, -0.86932886), (-0.43845403, 0.22809082, -0.8693289), (-0.56968755, 0.21497445, -0.7932478), (-0.5353966, 0.3862201, -0.75112224), (-0.41160545, 0.41160646, -0.8131181), (-0.41160545, 0.41160646, -0.8131181), (-0.5353966, 0.3862201, -0.75112224), (-0.49806824, 0.4980669, -0.70982903), (-0.38621938, 0.53539497, -0.7511236), (-0.2280898, 0.43845448, -0.86932886), (-0.41160545, 0.41160646, -0.8131181), (-0.38621938, 0.53539497, -0.7511236), (-0.21497366, 0.56968653, -0.7932488), (-0.56968755, 0.21497445, -0.7932478), (-0.6914589, 0.20921727, -0.6914571), (-0.65588623, 0.373672, -0.655883), (-0.5353966, 0.3862201, -0.75112224), (-0.6914589, 0.20921727, -0.6914571), (-0.7932483, 0.21497609, -0.56968623), (-0.7511224, 0.38622326, -0.53539413), (-0.65588623, 0.373672, -0.655883), (-0.65588623, 0.373672, -0.655883), (-0.7511224, 0.38622326, -0.53539413), (-0.7098304, 0.49806717, -0.4980662), (-0.62216914, 0.4752, -0.6221659), (-0.5353966, 0.3862201, -0.75112224), (-0.65588623, 0.373672, -0.655883), (-0.62216914, 0.4752, -0.6221659), (-0.49806824, 0.4980669, -0.70982903), (-0.7098304, 0.49806717, -0.4980662), (-0.6221682, 0.6221675, -0.4751993), (-0.57735217, 0.5773492, -0.57734954), (-0.62216914, 0.4752, -0.6221659), (-0.49806765, 0.709831, -0.49806485), (-0.47520164, 0.6221671, -0.6221668), (-0.57735217, 0.5773492, -0.57734954), (-0.6221682, 0.6221675, -0.4751993), (-0.49806824, 0.4980669, -0.70982903), (-0.62216914, 0.4752, -0.6221659), (-0.57735217, 0.5773492, -0.57734954), (-0.47520164, 0.6221671, -0.6221668), (-0.9999237, -0.008729834, 0.008729639), (-0.99772346, -0.066869155, 0.008745992), (-0.99557585, -0.06644032, 0.06644022), (-0.9977234, -0.0087461565, 0.06686932), (-0.99772346, -0.066869155, 0.008745992), (-0.9674983, -0.25273272, 0.008556292), (-0.96589714, -0.2507995, 0.06435965), (-0.99557585, -0.06644032, 0.06644022), (-0.99557585, -0.06644032, 0.06644022), (-0.96589714, -0.2507995, 0.06435965), (-0.93897593, -0.24323224, 0.24323304), (-0.9658969, -0.06436012, 0.2508007), (-0.9977234, -0.0087461565, 0.06686932), (-0.99557585, -0.06644032, 0.06644022), (-0.9658969, -0.06436012, 0.2508007), (-0.967498, -0.008556321, 0.25273377), (-0.9674983, -0.25273272, 0.008556292), (-0.891298, -0.45334697, 0.008026635), (-0.8907366, -0.45056525, 0.05982674), (-0.96589714, -0.2507995, 0.06435965), (-0.891298, -0.45334697, 0.008026635), (-0.8095282, -0.5870317, 0.0076084374), (-0.8095836, -0.5843067, 0.056214888), (-0.8907366, -0.45056525, 0.05982674), (-0.8907366, -0.45056525, 0.05982674), (-0.8095836, -0.5843067, 0.056214888), (-0.7932478, -0.56968755, 0.21497445), (-0.86932886, -0.43845397, 0.22809078), (-0.96589714, -0.2507995, 0.06435965), (-0.8907366, -0.45056525, 0.05982674), (-0.86932886, -0.43845397, 0.22809078), (-0.93897593, -0.24323224, 0.24323304), (-0.8095282, -0.5870317, 0.0076084374), (-0.70708597, -0.70708865, 0.007422134), (-0.70604795, -0.70605, 0.054678343), (-0.8095836, -0.5843067, 0.056214888), (-0.70708597, -0.70708865, 0.007422134), (-0.5870307, -0.80952895, 0.0076086107), (-0.584306, -0.80958414, 0.056214325), (-0.70604795, -0.70605, 0.054678343), (-0.70604795, -0.70605, 0.054678343), (-0.584306, -0.80958414, 0.056214325), (-0.5696873, -0.79324764, 0.21497561), (-0.6914575, -0.6914583, 0.20921735), (-0.8095836, -0.5843067, 0.056214888), (-0.70604795, -0.70605, 0.054678343), (-0.6914575, -0.6914583, 0.20921735), (-0.7932478, -0.56968755, 0.21497445), (-0.967498, -0.008556321, 0.25273377), (-0.9658969, -0.06436012, 0.2508007), (-0.8907363, -0.059826467, 0.4505659), (-0.8912973, -0.008026751, 0.4533485), (-0.9658969, -0.06436012, 0.2508007), (-0.93897593, -0.24323224, 0.24323304), (-0.86932886, -0.22809054, 0.4384541), (-0.8907363, -0.059826467, 0.4505659), (-0.8907363, -0.059826467, 0.4505659), (-0.86932886, -0.22809054, 0.4384541), (-0.79324865, -0.21497463, 0.56968635), (-0.8095843, -0.056214135, 0.5843057), (-0.8912973, -0.008026751, 0.4533485), (-0.8907363, -0.059826467, 0.4505659), (-0.8095843, -0.056214135, 0.5843057), (-0.8095288, -0.0076085436, 0.5870307), (-0.93897593, -0.24323224, 0.24323304), (-0.86932886, -0.43845397, 0.22809078), (-0.813118, -0.41160613, 0.41160595), (-0.86932886, -0.22809054, 0.4384541), (-0.86932886, -0.43845397, 0.22809078), (-0.7932478, -0.56968755, 0.21497445), (-0.75112236, -0.5353965, 0.38621992), (-0.813118, -0.41160613, 0.41160595), (-0.813118, -0.41160613, 0.41160595), (-0.75112236, -0.5353965, 0.38621992), (-0.70982856, -0.49806854, 0.4980674), (-0.75112337, -0.38622034, 0.5353948), (-0.86932886, -0.22809054, 0.4384541), (-0.813118, -0.41160613, 0.41160595), (-0.75112337, -0.38622034, 0.5353948), (-0.79324865, -0.21497463, 0.56968635), (-0.7932478, -0.56968755, 0.21497445), (-0.6914575, -0.6914583, 0.20921735), (-0.65588397, -0.65588593, 0.37367088), (-0.75112236, -0.5353965, 0.38621992), (-0.6914575, -0.6914583, 0.20921735), (-0.5696873, -0.79324764, 0.21497561), (-0.5353951, -0.75112313, 0.3862204), (-0.65588397, -0.65588593, 0.37367088), (-0.65588397, -0.65588593, 0.37367088), (-0.5353951, -0.75112313, 0.3862204), (-0.4980668, -0.70983076, 0.49806598), (-0.6221658, -0.62216944, 0.47519988), (-0.75112236, -0.5353965, 0.38621992), (-0.65588397, -0.65588593, 0.37367088), (-0.6221658, -0.62216944, 0.47519988), (-0.70982856, -0.49806854, 0.4980674), (-0.008729584, -0.9999237, 0.008729909), (-0.008746006, -0.9977234, 0.06686912), (-0.066440254, -0.99557585, 0.06644032), (-0.066869654, -0.99772346, 0.008746261), (-0.008746006, -0.9977234, 0.06686912), (-0.008556291, -0.9674983, 0.25273275), (-0.06435971, -0.96589726, 0.25079927), (-0.066440254, -0.99557585, 0.06644032), (-0.066440254, -0.99557585, 0.06644032), (-0.06435971, -0.96589726, 0.25079927), (-0.24323292, -0.93897605, 0.24323183), (-0.25080052, -0.9658969, 0.06435989), (-0.066869654, -0.99772346, 0.008746261), (-0.066440254, -0.99557585, 0.06644032), (-0.25080052, -0.9658969, 0.06435989), (-0.25273407, -0.96749794, 0.008556378), (-0.008556291, -0.9674983, 0.25273275), (-0.008026634, -0.89129794, 0.453347), (-0.05982667, -0.8907366, 0.4505654), (-0.06435971, -0.96589726, 0.25079927), (-0.008026634, -0.89129794, 0.453347), (-0.007608438, -0.80952823, 0.58703166), (-0.056214847, -0.8095833, 0.584307), (-0.05982667, -0.8907366, 0.4505654), (-0.05982667, -0.8907366, 0.4505654), (-0.056214847, -0.8095833, 0.584307), (-0.21497607, -0.7932473, 0.5696878), (-0.22809187, -0.8693286, 0.4384539), (-0.06435971, -0.96589726, 0.25079927), (-0.05982667, -0.8907366, 0.4505654), (-0.22809187, -0.8693286, 0.4384539), (-0.24323292, -0.93897605, 0.24323183), (-0.007608438, -0.80952823, 0.58703166), (-0.007422134, -0.707086, 0.7070886), (-0.054678462, -0.7060481, 0.70604986), (-0.056214847, -0.8095833, 0.584307), (-0.007422134, -0.707086, 0.7070886), (-0.0076086093, -0.58703065, 0.80952895), (-0.056214333, -0.5843061, 0.80958396), (-0.054678462, -0.7060481, 0.70604986), (-0.054678462, -0.7060481, 0.70604986), (-0.056214333, -0.5843061, 0.80958396), (-0.21497537, -0.5696875, 0.79324764), (-0.20921761, -0.6914574, 0.6914584), (-0.056214847, -0.8095833, 0.584307), (-0.054678462, -0.7060481, 0.70604986), (-0.20921761, -0.6914574, 0.6914584), (-0.21497607, -0.7932473, 0.5696878), (-0.25273407, -0.96749794, 0.008556378), (-0.25080052, -0.9658969, 0.06435989), (-0.45056665, -0.890736, 0.05982642), (-0.45334822, -0.8912974, 0.008026672), (-0.25080052, -0.9658969, 0.06435989), (-0.24323292, -0.93897605, 0.24323183), (-0.43845534, -0.869328, 0.22809134), (-0.45056665, -0.890736, 0.05982642), (-0.45056665, -0.890736, 0.05982642), (-0.43845534, -0.869328, 0.22809134), (-0.5696873, -0.79324764, 0.21497561), (-0.584306, -0.80958414, 0.056214325), (-0.45334822, -0.8912974, 0.008026672), (-0.45056665, -0.890736, 0.05982642), (-0.584306, -0.80958414, 0.056214325), (-0.5870307, -0.80952895, 0.0076086107), (-0.24323292, -0.93897605, 0.24323183), (-0.22809187, -0.8693286, 0.4384539), (-0.41160703, -0.8131178, 0.41160542), (-0.43845534, -0.869328, 0.22809134), (-0.22809187, -0.8693286, 0.4384539), (-0.21497607, -0.7932473, 0.5696878), (-0.38622105, -0.751123, 0.53539467), (-0.41160703, -0.8131178, 0.41160542), (-0.41160703, -0.8131178, 0.41160542), (-0.38622105, -0.751123, 0.53539467), (-0.4980668, -0.70983076, 0.49806598), (-0.5353951, -0.75112313, 0.3862204), (-0.43845534, -0.869328, 0.22809134), (-0.41160703, -0.8131178, 0.41160542), (-0.5353951, -0.75112313, 0.3862204), (-0.5696873, -0.79324764, 0.21497561), (-0.21497607, -0.7932473, 0.5696878), (-0.20921761, -0.6914574, 0.6914584), (-0.37367058, -0.6558842, 0.6558859), (-0.38622105, -0.751123, 0.53539467), (-0.20921761, -0.6914574, 0.6914584), (-0.21497537, -0.5696875, 0.79324764), (-0.3862212, -0.5353948, 0.75112295), (-0.37367058, -0.6558842, 0.6558859), (-0.37367058, -0.6558842, 0.6558859), (-0.3862212, -0.5353948, 0.75112295), (-0.49806514, -0.49806726, 0.70983106), (-0.47519916, -0.62216765, 0.6221682), (-0.38622105, -0.751123, 0.53539467), (-0.37367058, -0.6558842, 0.6558859), (-0.47519916, -0.62216765, 0.6221682), (-0.4980668, -0.70983076, 0.49806598), (-0.008729802, -0.008729626, 0.9999238), (-0.066869475, -0.0087460885, 0.99772334), (-0.06644033, -0.066440254, 0.99557585), (-0.008746261, -0.066869654, 0.99772346), (-0.066869475, -0.0087460885, 0.99772334), (-0.25273424, -0.008556368, 0.9674979), (-0.25080118, -0.06435937, 0.9658967), (-0.06644033, -0.066440254, 0.99557585), (-0.06644033, -0.066440254, 0.99557585), (-0.25080118, -0.06435937, 0.9658967), (-0.24323289, -0.24323238, 0.9389759), (-0.06435986, -0.25080052, 0.9658969), (-0.008746261, -0.066869654, 0.99772346), (-0.06644033, -0.066440254, 0.99557585), (-0.06435986, -0.25080052, 0.9658969), (-0.008556378, -0.25273407, 0.96749794), (-0.25273424, -0.008556368, 0.9674979), (-0.45334777, -0.008026793, 0.89129764), (-0.45056698, -0.05982581, 0.8907358), (-0.25080118, -0.06435937, 0.9658967), (-0.45334777, -0.008026793, 0.89129764), (-0.5870302, -0.007608621, 0.80952924), (-0.58430564, -0.056214053, 0.8095845), (-0.45056698, -0.05982581, 0.8907358), (-0.45056698, -0.05982581, 0.8907358), (-0.58430564, -0.056214053, 0.8095845), (-0.5696862, -0.21497543, 0.7932486), (-0.43845537, -0.22809005, 0.8693284), (-0.25080118, -0.06435937, 0.9658967), (-0.45056698, -0.05982581, 0.8907358), (-0.43845537, -0.22809005, 0.8693284), (-0.24323289, -0.24323238, 0.9389759), (-0.5870302, -0.007608621, 0.80952924), (-0.70708776, -0.007422061, 0.70708686), (-0.7060485, -0.05467805, 0.7060495), (-0.58430564, -0.056214053, 0.8095845), (-0.70708776, -0.007422061, 0.70708686), (-0.8095288, -0.0076085436, 0.5870307), (-0.8095843, -0.056214135, 0.5843057), (-0.7060485, -0.05467805, 0.7060495), (-0.7060485, -0.05467805, 0.7060495), (-0.8095843, -0.056214135, 0.5843057), (-0.79324865, -0.21497463, 0.56968635), (-0.69145685, -0.20921746, 0.69145906), (-0.58430564, -0.056214053, 0.8095845), (-0.7060485, -0.05467805, 0.7060495), (-0.69145685, -0.20921746, 0.69145906), (-0.5696862, -0.21497543, 0.7932486), (-0.008556378, -0.25273407, 0.96749794), (-0.06435986, -0.25080052, 0.9658969), (-0.05982642, -0.45056665, 0.890736), (-0.008026672, -0.45334822, 0.8912974), (-0.06435986, -0.25080052, 0.9658969), (-0.24323289, -0.24323238, 0.9389759), (-0.2280912, -0.43845508, 0.86932814), (-0.05982642, -0.45056665, 0.890736), (-0.05982642, -0.45056665, 0.890736), (-0.2280912, -0.43845508, 0.86932814), (-0.21497537, -0.5696875, 0.79324764), (-0.056214333, -0.5843061, 0.80958396), (-0.008026672, -0.45334822, 0.8912974), (-0.05982642, -0.45056665, 0.890736), (-0.056214333, -0.5843061, 0.80958396), (-0.0076086093, -0.58703065, 0.80952895), (-0.24323289, -0.24323238, 0.9389759), (-0.43845537, -0.22809005, 0.8693284), (-0.4116069, -0.41160628, 0.81311756), (-0.2280912, -0.43845508, 0.86932814), (-0.43845537, -0.22809005, 0.8693284), (-0.5696862, -0.21497543, 0.7932486), (-0.5353936, -0.3862215, 0.7511236), (-0.4116069, -0.41160628, 0.81311756), (-0.4116069, -0.41160628, 0.81311756), (-0.5353936, -0.3862215, 0.7511236), (-0.49806514, -0.49806726, 0.70983106), (-0.3862212, -0.5353948, 0.75112295), (-0.2280912, -0.43845508, 0.86932814), (-0.4116069, -0.41160628, 0.81311756), (-0.3862212, -0.5353948, 0.75112295), (-0.21497537, -0.5696875, 0.79324764), (-0.5696862, -0.21497543, 0.7932486), (-0.69145685, -0.20921746, 0.69145906), (-0.6558835, -0.3736719, 0.6558859), (-0.5353936, -0.3862215, 0.7511236), (-0.69145685, -0.20921746, 0.69145906), (-0.79324865, -0.21497463, 0.56968635), (-0.75112337, -0.38622034, 0.5353948), (-0.6558835, -0.3736719, 0.6558859), (-0.6558835, -0.3736719, 0.6558859), (-0.75112337, -0.38622034, 0.5353948), (-0.70982856, -0.49806854, 0.4980674), (-0.6221653, -0.47520176, 0.62216854), (-0.5353936, -0.3862215, 0.7511236), (-0.6558835, -0.3736719, 0.6558859), (-0.6221653, -0.47520176, 0.62216854), (-0.49806514, -0.49806726, 0.70983106), (-0.70982856, -0.49806854, 0.4980674), (-0.6221658, -0.62216944, 0.47519988), (-0.5773484, -0.5773519, 0.5773504), (-0.6221653, -0.47520176, 0.62216854), (-0.4980668, -0.70983076, 0.49806598), (-0.47519916, -0.62216765, 0.6221682), (-0.5773484, -0.5773519, 0.5773504), (-0.6221658, -0.62216944, 0.47519988), (-0.49806514, -0.49806726, 0.70983106), (-0.6221653, -0.47520176, 0.62216854), (-0.5773484, -0.5773519, 0.5773504), (-0.47519916, -0.62216765, 0.6221682), (-0.008729784, -0.008729593, -0.9999238), (-0.0087462235, -0.06686989, -0.9977234), (-0.06643997, -0.06644048, -0.99557585), (-0.06686886, -0.008746096, -0.99772346), (-0.0087462235, -0.06686989, -0.9977234), (-0.008556368, -0.25273243, -0.9674984), (-0.06435968, -0.25079912, -0.9658973), (-0.06643997, -0.06644048, -0.99557585), (-0.06643997, -0.06644048, -0.99557585), (-0.06435968, -0.25079912, -0.9658973), (-0.24323194, -0.24323222, -0.9389762), (-0.2508003, -0.064359635, -0.96589696), (-0.06686886, -0.008746096, -0.99772346), (-0.06643997, -0.06644048, -0.99557585), (-0.2508003, -0.064359635, -0.96589696), (-0.25273392, -0.008556396, -0.96749806), (-0.008556368, -0.25273243, -0.9674984), (-0.008026665, -0.4533469, -0.89129806), (-0.05982708, -0.45056504, -0.89073676), (-0.06435968, -0.25079912, -0.9658973), (-0.008026665, -0.4533469, -0.89129806), (-0.0076084705, -0.58703285, -0.8095272), (-0.056215104, -0.58430773, -0.8095829), (-0.05982708, -0.45056504, -0.89073676), (-0.05982708, -0.45056504, -0.89073676), (-0.056215104, -0.58430773, -0.8095829), (-0.21497534, -0.56968796, -0.79324734), (-0.22809021, -0.43845445, -0.86932874), (-0.06435968, -0.25079912, -0.9658973), (-0.05982708, -0.45056504, -0.89073676), (-0.22809021, -0.43845445, -0.86932874), (-0.24323194, -0.24323222, -0.9389762), (-0.0076084705, -0.58703285, -0.8095272), (-0.007422083, -0.70708853, -0.7070861), (-0.05467826, -0.70605, -0.706048), (-0.056215104, -0.58430773, -0.8095829), (-0.007422083, -0.70708853, -0.7070861), (-0.0076085613, -0.8095282, -0.5870316), (-0.056213748, -0.80958354, -0.5843069), (-0.05467826, -0.70605, -0.706048), (-0.05467826, -0.70605, -0.706048), (-0.056213748, -0.80958354, -0.5843069), (-0.21497463, -0.7932476, -0.5696878), (-0.2092179, -0.6914586, -0.69145715), (-0.056215104, -0.58430773, -0.8095829), (-0.05467826, -0.70605, -0.706048), (-0.2092179, -0.6914586, -0.69145715), (-0.21497534, -0.56968796, -0.79324734), (-0.25273392, -0.008556396, -0.96749806), (-0.2508003, -0.064359635, -0.96589696), (-0.4505652, -0.05982603, -0.89073664), (-0.45334783, -0.008026794, -0.8912975), (-0.2508003, -0.064359635, -0.96589696), (-0.24323194, -0.24323222, -0.9389762), (-0.43845353, -0.22809044, -0.86932915), (-0.4505652, -0.05982603, -0.89073664), (-0.4505652, -0.05982603, -0.89073664), (-0.43845353, -0.22809044, -0.86932915), (-0.56968725, -0.21497367, -0.7932481), (-0.5843055, -0.05621419, -0.8095844), (-0.45334783, -0.008026794, -0.8912975), (-0.4505652, -0.05982603, -0.89073664), (-0.5843055, -0.05621419, -0.8095844), (-0.5870305, -0.0076086014, -0.809529), (-0.24323194, -0.24323222, -0.9389762), (-0.22809021, -0.43845445, -0.86932874), (-0.41160566, -0.41160646, -0.81311804), (-0.43845353, -0.22809044, -0.86932915), (-0.22809021, -0.43845445, -0.86932874), (-0.21497534, -0.56968796, -0.79324734), (-0.38621926, -0.53539646, -0.7511228), (-0.41160566, -0.41160646, -0.81311804), (-0.41160566, -0.41160646, -0.81311804), (-0.38621926, -0.53539646, -0.7511228), (-0.4980668, -0.49806878, -0.7098289), (-0.53539497, -0.38622025, -0.75112325), (-0.43845353, -0.22809044, -0.86932915), (-0.41160566, -0.41160646, -0.81311804), (-0.53539497, -0.38622025, -0.75112325), (-0.56968725, -0.21497367, -0.7932481), (-0.21497534, -0.56968796, -0.79324734), (-0.2092179, -0.6914586, -0.69145715), (-0.3736711, -0.65588593, -0.6558839), (-0.38621926, -0.53539646, -0.7511228), (-0.2092179, -0.6914586, -0.69145715), (-0.21497463, -0.7932476, -0.5696878), (-0.3862214, -0.75112295, -0.5353946), (-0.3736711, -0.65588593, -0.6558839), (-0.3736711, -0.65588593, -0.6558839), (-0.3862214, -0.75112295, -0.5353946), (-0.49806672, -0.70983076, -0.4980662), (-0.47520116, -0.6221689, -0.6221653), (-0.38621926, -0.53539646, -0.7511228), (-0.3736711, -0.65588593, -0.6558839), (-0.47520116, -0.6221689, -0.6221653), (-0.4980668, -0.49806878, -0.7098289), (-0.008729551, -0.99992377, -0.008729891), (-0.06686988, -0.99772346, -0.008746221), (-0.0664404, -0.99557585, -0.06643993), (-0.008746027, -0.99772346, -0.06686853), (-0.06686988, -0.99772346, -0.008746221), (-0.25273424, -0.96749794, -0.008556371), (-0.25080094, -0.9658968, -0.06435943), (-0.0664404, -0.99557585, -0.06643993), (-0.0664404, -0.99557585, -0.06643993), (-0.25080094, -0.9658968, -0.06435943), (-0.24323362, -0.9389759, -0.24323192), (-0.06435967, -0.9658969, -0.25080058), (-0.008746027, -0.99772346, -0.06686853), (-0.0664404, -0.99557585, -0.06643993), (-0.06435967, -0.9658969, -0.25080058), (-0.008556341, -0.967498, -0.25273386), (-0.25273424, -0.96749794, -0.008556371), (-0.4533475, -0.89129776, -0.008026745), (-0.45056587, -0.89073634, -0.059826083), (-0.25080094, -0.9658968, -0.06435943), (-0.4533475, -0.89129776, -0.008026745), (-0.58703005, -0.80952936, -0.0076085827), (-0.58430505, -0.80958486, -0.056214176), (-0.45056587, -0.89073634, -0.059826083), (-0.45056587, -0.89073634, -0.059826083), (-0.58430505, -0.80958486, -0.056214176), (-0.56968653, -0.79324806, -0.21497633), (-0.43845588, -0.86932784, -0.22809148), (-0.25080094, -0.9658968, -0.06435943), (-0.45056587, -0.89073634, -0.059826083), (-0.43845588, -0.86932784, -0.22809148), (-0.24323362, -0.9389759, -0.24323192), (-0.58703005, -0.80952936, -0.0076085827), (-0.7070874, -0.7070872, -0.0074220886), (-0.7060488, -0.7060492, -0.05467834), (-0.58430505, -0.80958486, -0.056214176), (-0.7070874, -0.7070872, -0.0074220886), (-0.8095295, -0.58703, -0.0076085543), (-0.8095849, -0.5843048, -0.05621429), (-0.7060488, -0.7060492, -0.05467834), (-0.7060488, -0.7060492, -0.05467834), (-0.8095849, -0.5843048, -0.05621429), (-0.7932484, -0.5696863, -0.21497521), (-0.6914573, -0.6914585, -0.20921761), (-0.58430505, -0.80958486, -0.056214176), (-0.7060488, -0.7060492, -0.05467834), (-0.6914573, -0.6914585, -0.20921761), (-0.56968653, -0.79324806, -0.21497633), (-0.008556341, -0.967498, -0.25273386), (-0.06435967, -0.9658969, -0.25080058), (-0.059825808, -0.89073557, -0.4505674), (-0.008026697, -0.89129657, -0.45334983), (-0.06435967, -0.9658969, -0.25080058), (-0.24323362, -0.9389759, -0.24323192), (-0.22809114, -0.86932826, -0.4384552), (-0.059825808, -0.89073557, -0.4505674), (-0.059825808, -0.89073557, -0.4505674), (-0.22809114, -0.86932826, -0.4384552), (-0.21497463, -0.7932476, -0.5696878), (-0.056213748, -0.80958354, -0.5843069), (-0.008026697, -0.89129657, -0.45334983), (-0.059825808, -0.89073557, -0.4505674), (-0.056213748, -0.80958354, -0.5843069), (-0.0076085613, -0.8095282, -0.5870316), (-0.24323362, -0.9389759, -0.24323192), (-0.43845588, -0.86932784, -0.22809148), (-0.41160715, -0.813117, -0.4116068), (-0.22809114, -0.86932826, -0.4384552), (-0.43845588, -0.86932784, -0.22809148), (-0.56968653, -0.79324806, -0.21497633), (-0.5353943, -0.7511226, -0.3862224), (-0.41160715, -0.813117, -0.4116068), (-0.41160715, -0.813117, -0.4116068), (-0.5353943, -0.7511226, -0.3862224), (-0.49806672, -0.70983076, -0.4980662), (-0.3862214, -0.75112295, -0.5353946), (-0.22809114, -0.86932826, -0.4384552), (-0.41160715, -0.813117, -0.4116068), (-0.3862214, -0.75112295, -0.5353946), (-0.21497463, -0.7932476, -0.5696878), (-0.56968653, -0.79324806, -0.21497633), (-0.6914573, -0.6914585, -0.20921761), (-0.6558841, -0.6558851, -0.37367192), (-0.5353943, -0.7511226, -0.3862224), (-0.6914573, -0.6914585, -0.20921761), (-0.7932484, -0.5696863, -0.21497521), (-0.7511234, -0.535394, -0.38622135), (-0.6558841, -0.6558851, -0.37367192), (-0.6558841, -0.6558851, -0.37367192), (-0.7511234, -0.535394, -0.38622135), (-0.7098312, -0.49806613, -0.49806607), (-0.62216747, -0.6221672, -0.4752006), (-0.5353943, -0.7511226, -0.3862224), (-0.6558841, -0.6558851, -0.37367192), (-0.62216747, -0.6221672, -0.4752006), (-0.49806672, -0.70983076, -0.4980662), (-0.9999237, -0.00872982, -0.00872964), (-0.99772346, -0.008746131, -0.06686951), (-0.99557585, -0.06643997, -0.06644048), (-0.9977235, -0.066868536, -0.008746015), (-0.99772346, -0.008746131, -0.06686951), (-0.967498, -0.008556312, -0.2527337), (-0.9658968, -0.06435941, -0.25080088), (-0.99557585, -0.06643997, -0.06644048), (-0.99557585, -0.06643997, -0.06644048), (-0.9658968, -0.06435941, -0.25080088), (-0.9389758, -0.24323185, -0.24323405), (-0.96589696, -0.2508003, -0.064359635), (-0.9977235, -0.066868536, -0.008746015), (-0.99557585, -0.06643997, -0.06644048), (-0.96589696, -0.2508003, -0.064359635), (-0.96749806, -0.25273356, -0.008556345), (-0.967498, -0.008556312, -0.2527337), (-0.89129746, -0.0080267135, -0.45334792), (-0.8907366, -0.05982613, -0.45056546), (-0.9658968, -0.06435941, -0.25080088), (-0.89129746, -0.0080267135, -0.45334792), (-0.80952924, -0.007608539, -0.5870303), (-0.8095849, -0.056214213, -0.58430487), (-0.8907366, -0.05982613, -0.45056546), (-0.8907366, -0.05982613, -0.45056546), (-0.8095849, -0.056214213, -0.58430487), (-0.7932492, -0.21497563, -0.5696853), (-0.8693281, -0.22809054, -0.4384557), (-0.9658968, -0.06435941, -0.25080088), (-0.8907366, -0.05982613, -0.45056546), (-0.8693281, -0.22809054, -0.4384557), (-0.9389758, -0.24323185, -0.24323405), (-0.80952924, -0.007608539, -0.5870303), (-0.7070883, -0.0074220733, -0.7070864), (-0.70604974, -0.054678056, -0.7060483), (-0.8095849, -0.056214213, -0.58430487), (-0.7070883, -0.0074220733, -0.7070864), (-0.5870305, -0.0076086014, -0.809529), (-0.5843055, -0.05621419, -0.8095844), (-0.70604974, -0.054678056, -0.7060483), (-0.70604974, -0.054678056, -0.7060483), (-0.5843055, -0.05621419, -0.8095844), (-0.56968725, -0.21497367, -0.7932481), (-0.69145966, -0.20921627, -0.6914565), (-0.8095849, -0.056214213, -0.58430487), (-0.70604974, -0.054678056, -0.7060483), (-0.69145966, -0.20921627, -0.6914565), (-0.7932492, -0.21497563, -0.5696853), (-0.96749806, -0.25273356, -0.008556345), (-0.96589696, -0.2508003, -0.064359635), (-0.89073664, -0.4505653, -0.059826065), (-0.89129734, -0.45334828, -0.008026751), (-0.96589696, -0.2508003, -0.064359635), (-0.9389758, -0.24323185, -0.24323405), (-0.86932904, -0.43845326, -0.22809163), (-0.89073664, -0.4505653, -0.059826065), (-0.89073664, -0.4505653, -0.059826065), (-0.86932904, -0.43845326, -0.22809163), (-0.7932484, -0.5696863, -0.21497521), (-0.8095849, -0.5843048, -0.05621429), (-0.89129734, -0.45334828, -0.008026751), (-0.89073664, -0.4505653, -0.059826065), (-0.8095849, -0.5843048, -0.05621429), (-0.8095295, -0.58703, -0.0076085543), (-0.9389758, -0.24323185, -0.24323405), (-0.8693281, -0.22809054, -0.4384557), (-0.8131177, -0.41160545, -0.41160744), (-0.86932904, -0.43845326, -0.22809163), (-0.8693281, -0.22809054, -0.4384557), (-0.7932492, -0.21497563, -0.5696853), (-0.75112426, -0.38622174, -0.53539246), (-0.8131177, -0.41160545, -0.41160744), (-0.8131177, -0.41160545, -0.41160744), (-0.75112426, -0.38622174, -0.53539246), (-0.7098312, -0.49806613, -0.49806607), (-0.7511234, -0.535394, -0.38622135), (-0.86932904, -0.43845326, -0.22809163), (-0.8131177, -0.41160545, -0.41160744), (-0.7511234, -0.535394, -0.38622135), (-0.7932484, -0.5696863, -0.21497521), (-0.7932492, -0.21497563, -0.5696853), (-0.69145966, -0.20921627, -0.6914565), (-0.65588623, -0.37367153, -0.6558832), (-0.75112426, -0.38622174, -0.53539246), (-0.69145966, -0.20921627, -0.6914565), (-0.56968725, -0.21497367, -0.7932481), (-0.53539497, -0.38622025, -0.75112325), (-0.65588623, -0.37367153, -0.6558832), (-0.65588623, -0.37367153, -0.6558832), (-0.53539497, -0.38622025, -0.75112325), (-0.4980668, -0.49806878, -0.7098289), (-0.62216914, -0.47520077, -0.6221654), (-0.75112426, -0.38622174, -0.53539246), (-0.65588623, -0.37367153, -0.6558832), (-0.62216914, -0.47520077, -0.6221654), (-0.7098312, -0.49806613, -0.49806607), (-0.4980668, -0.49806878, -0.7098289), (-0.47520116, -0.6221689, -0.6221653), (-0.57735264, -0.5773494, -0.5773486), (-0.62216914, -0.47520077, -0.6221654), (-0.49806672, -0.70983076, -0.4980662), (-0.62216747, -0.6221672, -0.4752006), (-0.57735264, -0.5773494, -0.5773486), (-0.47520116, -0.6221689, -0.6221653), (-0.7098312, -0.49806613, -0.49806607), (-0.62216914, -0.47520077, -0.6221654), (-0.57735264, -0.5773494, -0.5773486), (-0.62216747, -0.6221672, -0.4752006), (-0.008729805, 0.008729596, -0.9999238), (-0.00870758, -1.0376061e-9, -0.9999621), (-0.06689927, 1.1021317e-8, -0.99775976), (-0.066869475, 0.008746074, -0.99772334), (-0.00870758, -1.0376061e-9, -0.9999621), (-0.008729784, -0.008729593, -0.9999238), (-0.06686886, -0.008746096, -0.99772346), (-0.06689927, 1.1021317e-8, -0.99775976), (-0.06689927, 1.1021317e-8, -0.99775976), (-0.06686886, -0.008746096, -0.99772346), (-0.25273392, -0.008556396, -0.96749806), (-0.25295946, 2.469334e-9, -0.96747684), (-0.066869475, 0.008746074, -0.99772334), (-0.06689927, 1.1021317e-8, -0.99775976), (-0.25295946, 2.469334e-9, -0.96747684), (-0.25273225, 0.008556349, -0.9674984), (-0.25273225, 0.008556349, -0.9674984), (-0.25295946, 2.469334e-9, -0.96747684), (-0.45379362, -3.323346e-8, -0.8911067), (-0.45334682, 0.008026693, -0.891298), (-0.25295946, 2.469334e-9, -0.96747684), (-0.25273392, -0.008556396, -0.96749806), (-0.45334783, -0.008026794, -0.8912975), (-0.45379362, -3.323346e-8, -0.8911067), (-0.45379362, -3.323346e-8, -0.8911067), (-0.45334783, -0.008026794, -0.8912975), (-0.5870305, -0.0076086014, -0.809529), (-0.58752596, -2.3680528e-8, -0.80920523), (-0.45334682, 0.008026693, -0.891298), (-0.45379362, -3.323346e-8, -0.8911067), (-0.58752596, -2.3680528e-8, -0.80920523), (-0.58703256, 0.0076084984, -0.8095276), (-0.58703256, 0.0076084984, -0.8095276), (-0.58752596, -2.3680528e-8, -0.80920523), (-0.70710903, 2.8252837e-8, -0.70710456), (-0.7070887, 0.0074221115, -0.70708597), (-0.58752596, -2.3680528e-8, -0.80920523), (-0.5870305, -0.0076086014, -0.809529), (-0.7070883, -0.0074220733, -0.7070864), (-0.70710903, 2.8252837e-8, -0.70710456), (-0.70710903, 2.8252837e-8, -0.70710456), (-0.7070883, -0.0074220733, -0.7070864), (-0.80952924, -0.007608539, -0.5870303), (-0.8092059, 2.8401752e-8, -0.58752525), (-0.7070887, 0.0074221115, -0.70708597), (-0.70710903, 2.8252837e-8, -0.70710456), (-0.8092059, 2.8401752e-8, -0.58752525), (-0.8095284, 0.007608595, -0.5870314), (-0.8095284, 0.007608595, -0.5870314), (-0.8092059, 2.8401752e-8, -0.58752525), (-0.8911053, -1.3642821e-8, -0.4537966), (-0.89129704, 0.008026684, -0.45334873), (-0.8092059, 2.8401752e-8, -0.58752525), (-0.80952924, -0.007608539, -0.5870303), (-0.89129746, -0.0080267135, -0.45334792), (-0.8911053, -1.3642821e-8, -0.4537966), (-0.8911053, -1.3642821e-8, -0.4537966), (-0.89129746, -0.0080267135, -0.45334792), (-0.967498, -0.008556312, -0.2527337), (-0.96747667, -1.601326e-8, -0.25296038), (-0.89129704, 0.008026684, -0.45334873), (-0.8911053, -1.3642821e-8, -0.4537966), (-0.96747667, -1.601326e-8, -0.25296038), (-0.967498, 0.008556325, -0.25273356), (-0.967498, 0.008556325, -0.25273356), (-0.96747667, -1.601326e-8, -0.25296038), (-0.99775976, -2.708943e-9, -0.06689923), (-0.9977234, 0.0087461565, -0.0668692), (-0.96747667, -1.601326e-8, -0.25296038), (-0.967498, -0.008556312, -0.2527337), (-0.99772346, -0.008746131, -0.06686951), (-0.99775976, -2.708943e-9, -0.06689923), (-0.99775976, -2.708943e-9, -0.06689923), (-0.99772346, -0.008746131, -0.06686951), (-0.9999237, -0.00872982, -0.00872964), (-0.9999621, -1.4822944e-10, -0.008707618), (-0.9977234, 0.0087461565, -0.0668692), (-0.99775976, -2.708943e-9, -0.06689923), (-0.9999621, -1.4822944e-10, -0.008707618), (-0.9999237, 0.008729834, -0.0087296385), (0.00872978, 0.008729593, -0.9999238), (-7.1150135e-9, 0.008707444, -0.9999621), (-7.4217623e-9, 0.0669, -0.9977597), (0.008746224, 0.06686989, -0.9977234), (-7.1150135e-9, 0.008707444, -0.9999621), (-0.008729805, 0.008729596, -0.9999238), (-0.008746261, 0.066869594, -0.99772346), (-7.4217623e-9, 0.0669, -0.9977597), (-7.4217623e-9, 0.0669, -0.9977597), (-0.008746261, 0.066869594, -0.99772346), (-0.008556373, 0.2527339, -0.96749794), (-1.1186829e-8, 0.25295994, -0.9674767), (0.008746224, 0.06686989, -0.9977234), (-7.4217623e-9, 0.0669, -0.9977597), (-1.1186829e-8, 0.25295994, -0.9674767), (0.008556368, 0.25273243, -0.9674984), (0.008556368, 0.25273243, -0.9674984), (-1.1186829e-8, 0.25295994, -0.9674767), (-4.4236943e-9, 0.45379484, -0.89110625), (0.008026665, 0.4533469, -0.89129806), (-1.1186829e-8, 0.25295994, -0.9674767), (-0.008556373, 0.2527339, -0.96749794), (-0.008026792, 0.45334834, -0.89129734), (-4.4236943e-9, 0.45379484, -0.89110625), (-4.4236943e-9, 0.45379484, -0.89110625), (-0.008026792, 0.45334834, -0.89129734), (-0.007608584, 0.5870311, -0.8095286), (1.5241781e-9, 0.58752626, -0.8092051), (0.008026665, 0.4533469, -0.89129806), (-4.4236943e-9, 0.45379484, -0.89110625), (1.5241781e-9, 0.58752626, -0.8092051), (0.0076084705, 0.58703285, -0.8095272), (0.0076084705, 0.58703285, -0.8095272), (1.5241781e-9, 0.58752626, -0.8092051), (4.148706e-8, 0.7071078, -0.70710576), (0.007422083, 0.70708853, -0.7070861), (1.5241781e-9, 0.58752626, -0.8092051), (-0.007608584, 0.5870311, -0.8095286), (-0.007422037, 0.70708776, -0.7070869), (4.148706e-8, 0.7071078, -0.70710576), (4.148706e-8, 0.7071078, -0.70710576), (-0.007422037, 0.70708776, -0.7070869), (-0.0076085823, 0.8095291, -0.5870304), (6.7472754e-8, 0.80920607, -0.58752495), (0.007422083, 0.70708853, -0.7070861), (4.148706e-8, 0.7071078, -0.70710576), (6.7472754e-8, 0.80920607, -0.58752495), (0.0076085613, 0.8095282, -0.5870316), (0.0076085613, 0.8095282, -0.5870316), (6.7472754e-8, 0.80920607, -0.58752495), (1.4646513e-8, 0.89110523, -0.4537968), (0.008026697, 0.89129657, -0.45334983), (6.7472754e-8, 0.80920607, -0.58752495), (-0.0076085823, 0.8095291, -0.5870304), (-0.008026815, 0.89129686, -0.45334926), (1.4646513e-8, 0.89110523, -0.4537968), (1.4646513e-8, 0.89110523, -0.4537968), (-0.008026815, 0.89129686, -0.45334926), (-0.00855638, 0.9674979, -0.2527341), (-2.3159373e-8, 0.9674767, -0.25296023), (0.008026697, 0.89129657, -0.45334983), (1.4646513e-8, 0.89110523, -0.4537968), (-2.3159373e-8, 0.9674767, -0.25296023), (0.008556341, 0.967498, -0.25273386), (0.008556341, 0.967498, -0.25273386), (-2.3159373e-8, 0.9674767, -0.25296023), (-1.0093596e-8, 0.9977599, -0.06689818), (0.008746045, 0.9977235, -0.066868536), (-2.3159373e-8, 0.9674767, -0.25296023), (-0.00855638, 0.9674979, -0.2527341), (-0.0087460205, 0.99772346, -0.06686869), (-1.0093596e-8, 0.9977599, -0.06689818), (-1.0093596e-8, 0.9977599, -0.06689818), (-0.0087460205, 0.99772346, -0.06686869), (-0.008729585, 0.9999237, -0.008729895), (2.2234414e-10, 0.9999621, -0.008707777), (0.008746045, 0.9977235, -0.066868536), (-1.0093596e-8, 0.9977599, -0.06689818), (2.2234414e-10, 0.9999621, -0.008707777), (0.008729672, 0.9999237, -0.008729829), (0.9999237, 0.008729726, 0.0087296795), (0.9999621, 0.008707556, -3.3351624e-10), (0.99775976, 0.06689927, 1.1503732e-8), (0.99772334, 0.066869475, 0.008746074), (0.9999621, 0.008707556, -3.3351624e-10), (0.99992377, 0.008729713, -0.008729682), (0.9977234, 0.06686885, -0.008746096), (0.99775976, 0.06689927, 1.1503732e-8), (0.99775976, 0.06689927, 1.1503732e-8), (0.9977234, 0.06686885, -0.008746096), (0.967498, 0.2527339, -0.008556395), (0.96747684, 0.25295946, 2.469334e-9), (0.99772334, 0.066869475, 0.008746074), (0.99775976, 0.06689927, 1.1503732e-8), (0.96747684, 0.25295946, 2.469334e-9), (0.9674984, 0.25273225, 0.008556349), (0.9674984, 0.25273225, 0.008556349), (0.96747684, 0.25295946, 2.469334e-9), (0.8911068, 0.4537935, -1.0817603e-8), (0.891298, 0.45334682, 0.008026693), (0.96747684, 0.25295946, 2.469334e-9), (0.967498, 0.2527339, -0.008556395), (0.8912978, 0.45334727, -0.008026838), (0.8911068, 0.4537935, -1.0817603e-8), (0.8911068, 0.4537935, -1.0817603e-8), (0.8912978, 0.45334727, -0.008026838), (0.80952907, 0.5870304, -0.007608632), (0.8092058, 0.58752525, -1.0780773e-9), (0.891298, 0.45334682, 0.008026693), (0.8911068, 0.4537935, -1.0817603e-8), (0.8092058, 0.58752525, -1.0780773e-9), (0.8095281, 0.5870318, 0.007608464), (0.8095281, 0.5870318, 0.007608464), (0.8092058, 0.58752525, -1.0780773e-9), (0.70710504, 0.7071085, -1.8587393e-10), (0.70708627, 0.7070885, 0.007422013), (0.8092058, 0.58752525, -1.0780773e-9), (0.80952907, 0.5870304, -0.007608632), (0.7070866, 0.70708793, -0.00742207), (0.70710504, 0.7071085, -1.8587393e-10), (0.70710504, 0.7071085, -1.8587393e-10), (0.7070866, 0.70708793, -0.00742207), (0.5870316, 0.8095283, -0.007608454), (0.58752495, 0.80920607, 2.3606171e-8), (0.70708627, 0.7070885, 0.007422013), (0.70710504, 0.7071085, -1.8587393e-10), (0.58752495, 0.80920607, 2.3606171e-8), (0.58703077, 0.8095288, 0.007608584), (0.58703077, 0.8095288, 0.007608584), (0.58752495, 0.80920607, 2.3606171e-8), (0.45379558, 0.89110583, 3.7025206e-8), (0.45334852, 0.8912973, 0.008026781), (0.58752495, 0.80920607, 2.3606171e-8), (0.5870316, 0.8095283, -0.007608454), (0.4533473, 0.8912978, -0.008026624), (0.45379558, 0.89110583, 3.7025206e-8), (0.45379558, 0.89110583, 3.7025206e-8), (0.4533473, 0.8912978, -0.008026624), (0.25273252, 0.96749836, -0.008556316), (0.25295985, 0.9674768, 1.1972529e-8), (0.45334852, 0.8912973, 0.008026781), (0.45379558, 0.89110583, 3.7025206e-8), (0.25295985, 0.9674768, 1.1972529e-8), (0.25273377, 0.967498, 0.008556321), (0.25273377, 0.967498, 0.008556321), (0.25295985, 0.9674768, 1.1972529e-8), (0.06689952, 0.99775976, -2.5976166e-9), (0.06686938, 0.99772346, 0.0087461565), (0.25295985, 0.9674768, 1.1972529e-8), (0.25273252, 0.96749836, -0.008556316), (0.06686967, 0.99772346, -0.008746129), (0.06689952, 0.99775976, -2.5976166e-9), (0.06689952, 0.99775976, -2.5976166e-9), (0.06686967, 0.99772346, -0.008746129), (0.008729672, 0.9999237, -0.008729829), (0.008707651, 0.9999621, -1.11172085e-10), (0.06686938, 0.99772346, 0.0087461565), (0.06689952, 0.99775976, -2.5976166e-9), (0.008707651, 0.9999621, -1.11172085e-10), (0.008729672, 0.9999237, 0.008729846), (-0.008729551, -0.99992377, -0.008729891), (-0.008707456, -0.9999621, 4.8174564e-10), (-0.06690002, -0.9977597, 7.49598e-9), (-0.06686988, -0.99772346, -0.008746221), (-0.008707456, -0.9999621, 4.8174564e-10), (-0.008729584, -0.9999237, 0.008729909), (-0.066869654, -0.99772346, 0.008746261), (-0.06690002, -0.9977597, 7.49598e-9), (-0.06690002, -0.9977597, 7.49598e-9), (-0.066869654, -0.99772346, 0.008746261), (-0.25273407, -0.96749794, 0.008556378), (-0.25296128, -0.96747637, -2.271039e-8), (-0.06686988, -0.99772346, -0.008746221), (-0.06690002, -0.9977597, 7.49598e-9), (-0.25296128, -0.96747637, -2.271039e-8), (-0.25273424, -0.96749794, -0.008556371), (-0.25273424, -0.96749794, -0.008556371), (-0.25296128, -0.96747637, -2.271039e-8), (-0.4537953, -0.8911059, -3.1597807e-8), (-0.4533475, -0.89129776, -0.008026745), (-0.25296128, -0.96747637, -2.271039e-8), (-0.25273407, -0.96749794, 0.008556378), (-0.45334822, -0.8912974, 0.008026672), (-0.4537953, -0.8911059, -3.1597807e-8), (-0.4537953, -0.8911059, -3.1597807e-8), (-0.45334822, -0.8912974, 0.008026672), (-0.5870307, -0.80952895, 0.0076086107), (-0.5875245, -0.8092065, 2.7435206e-8), (-0.4533475, -0.89129776, -0.008026745), (-0.4537953, -0.8911059, -3.1597807e-8), (-0.5875245, -0.8092065, 2.7435206e-8), (-0.58703005, -0.80952936, -0.0076085827), (-0.58703005, -0.80952936, -0.0076085827), (-0.5875245, -0.8092065, 2.7435206e-8), (-0.7071059, -0.70710766, 3.5687794e-8), (-0.7070874, -0.7070872, -0.0074220886), (-0.5875245, -0.8092065, 2.7435206e-8), (-0.5870307, -0.80952895, 0.0076086107), (-0.70708597, -0.70708865, 0.007422134), (-0.7071059, -0.70710766, 3.5687794e-8), (-0.7071059, -0.70710766, 3.5687794e-8), (-0.70708597, -0.70708865, 0.007422134), (-0.8095282, -0.5870317, 0.0076084374), (-0.80920607, -0.58752483, -2.2230697e-8), (-0.7070874, -0.7070872, -0.0074220886), (-0.7071059, -0.70710766, 3.5687794e-8), (-0.80920607, -0.58752483, -2.2230697e-8), (-0.8095295, -0.58703, -0.0076085543), (-0.8095295, -0.58703, -0.0076085543), (-0.80920607, -0.58752483, -2.2230697e-8), (-0.89110637, -0.4537945, -4.479454e-8), (-0.89129734, -0.45334828, -0.008026751), (-0.80920607, -0.58752483, -2.2230697e-8), (-0.8095282, -0.5870317, 0.0076084374), (-0.891298, -0.45334697, 0.008026635), (-0.89110637, -0.4537945, -4.479454e-8), (-0.89110637, -0.4537945, -4.479454e-8), (-0.891298, -0.45334697, 0.008026635), (-0.9674983, -0.25273272, 0.008556292), (-0.9674768, -0.2529596, -5.761781e-9), (-0.89129734, -0.45334828, -0.008026751), (-0.89110637, -0.4537945, -4.479454e-8), (-0.9674768, -0.2529596, -5.761781e-9), (-0.96749806, -0.25273356, -0.008556345), (-0.96749806, -0.25273356, -0.008556345), (-0.9674768, -0.2529596, -5.761781e-9), (-0.99775976, -0.066898614, 1.0390466e-8), (-0.9977235, -0.066868536, -0.008746015), (-0.9674768, -0.2529596, -5.761781e-9), (-0.9674983, -0.25273272, 0.008556292), (-0.99772346, -0.066869155, 0.008745992), (-0.99775976, -0.066898614, 1.0390466e-8), (-0.99775976, -0.066898614, 1.0390466e-8), (-0.99772346, -0.066869155, 0.008745992), (-0.9999237, -0.008729834, 0.008729639), (-0.9999621, -0.008707771, 3.705736e-11), (-0.9977235, -0.066868536, -0.008746015), (-0.99775976, -0.066898614, 1.0390466e-8), (-0.9999621, -0.008707771, 3.705736e-11), (-0.9999237, -0.00872982, -0.00872964), (0.008729552, -0.99992377, 0.008729888), (0.008707444, -0.9999621, -7.1150135e-9), (0.0669, -0.9977597, -7.4217623e-9), (0.06686989, -0.99772346, 0.008746224), (0.008707444, -0.9999621, -7.1150135e-9), (0.008729553, -0.9999237, -0.008729913), (0.066869594, -0.99772346, -0.008746261), (0.0669, -0.9977597, -7.4217623e-9), (0.0669, -0.9977597, -7.4217623e-9), (0.066869594, -0.99772346, -0.008746261), (0.2527339, -0.967498, -0.008556373), (0.25295994, -0.9674767, -1.1186829e-8), (0.06686989, -0.99772346, 0.008746224), (0.0669, -0.9977597, -7.4217623e-9), (0.25295994, -0.9674767, -1.1186829e-8), (0.2527324, -0.96749836, 0.008556367), (0.2527324, -0.96749836, 0.008556367), (0.25295994, -0.9674767, -1.1186829e-8), (0.4537946, -0.89110637, 4.4980424e-9), (0.4533469, -0.89129806, 0.008026665), (0.25295994, -0.9674767, -1.1186829e-8), (0.2527339, -0.967498, -0.008556373), (0.45334753, -0.8912977, -0.008026807), (0.4537946, -0.89110637, 4.4980424e-9), (0.4537946, -0.89110637, 4.4980424e-9), (0.45334753, -0.8912977, -0.008026807), (0.58703107, -0.8095287, -0.007608625), (0.58752567, -0.80920553, 9.702695e-9), (0.4533469, -0.89129806, 0.008026665), (0.4537946, -0.89110637, 4.4980424e-9), (0.58752567, -0.80920553, 9.702695e-9), (0.587032, -0.80952793, 0.0076084905), (0.587032, -0.80952793, 0.0076084905), (0.58752567, -0.80920553, 9.702695e-9), (0.70710653, -0.707107, 2.0185906e-8), (0.70708746, -0.70708716, 0.007422076), (0.58752567, -0.80920553, 9.702695e-9), (0.58703107, -0.8095287, -0.007608625), (0.70708734, -0.7070873, -0.0074219937), (0.70710653, -0.707107, 2.0185906e-8), (0.70710653, -0.707107, 2.0185906e-8), (0.70708734, -0.7070873, -0.0074219937), (0.8095287, -0.58703107, -0.0076083946), (0.8092065, -0.5875243, 3.6431576e-8), (0.70708746, -0.70708716, 0.007422076), (0.70710653, -0.707107, 2.0185906e-8), (0.8092065, -0.5875243, 3.6431576e-8), (0.809529, -0.5870306, 0.007608515), (0.809529, -0.5870306, 0.007608515), (0.8092065, -0.5875243, 3.6431576e-8), (0.89110655, -0.45379406, 3.1709327e-8), (0.89129746, -0.45334807, 0.008026736), (0.8092065, -0.5875243, 3.6431576e-8), (0.8095287, -0.58703107, -0.0076083946), (0.89129794, -0.4533471, -0.008026635), (0.89110655, -0.45379406, 3.1709327e-8), (0.89110655, -0.45379406, 3.1709327e-8), (0.89129794, -0.4533471, -0.008026635), (0.9674983, -0.25273272, -0.008556292), (0.9674768, -0.2529596, 5.761781e-9), (0.89129746, -0.45334807, 0.008026736), (0.89110655, -0.45379406, 3.1709327e-8), (0.9674768, -0.2529596, 5.761781e-9), (0.96749806, -0.25273356, 0.008556345), (0.96749806, -0.25273356, 0.008556345), (0.9674768, -0.2529596, 5.761781e-9), (0.9977598, -0.066898614, -2.3935183e-8), (0.9977235, -0.066868536, 0.008746031), (0.9674768, -0.2529596, 5.761781e-9), (0.9674983, -0.25273272, -0.008556292), (0.99772346, -0.066869155, -0.008745991), (0.9977598, -0.066898614, -2.3935183e-8), (0.9977598, -0.066898614, -2.3935183e-8), (0.99772346, -0.066869155, -0.008745991), (0.9999237, -0.008729834, -0.008729639), (0.9999621, -0.008707768, -2.7311271e-8), (0.9977235, -0.066868536, 0.008746031), (0.9977598, -0.066898614, -2.3935183e-8), (0.9999621, -0.008707768, -2.7311271e-8), (0.9999237, -0.008729818, 0.008729671), (-0.0087295845, 0.9999237, 0.008729875), (-0.008707474, 0.9999621, -1.8158107e-9), (-0.06690006, 0.9977597, -7.3846538e-9), (-0.06686996, 0.99772346, 0.008746224), (-0.008707474, 0.9999621, -1.8158107e-9), (-0.008729585, 0.9999237, -0.008729895), (-0.066869654, 0.99772346, -0.008746261), (-0.06690006, 0.9977597, -7.3846538e-9), (-0.06690006, 0.9977597, -7.3846538e-9), (-0.066869654, 0.99772346, -0.008746261), (-0.2527339, 0.967498, -0.008556373), (-0.25295994, 0.9674767, -1.1186829e-8), (-0.06686996, 0.99772346, 0.008746224), (-0.06690006, 0.9977597, -7.3846538e-9), (-0.25295994, 0.9674767, -1.1186829e-8), (-0.2527324, 0.96749836, 0.008556367), (-0.2527324, 0.96749836, 0.008556367), (-0.25295994, 0.9674767, -1.1186829e-8), (-0.4537946, 0.89110637, 4.4980424e-9), (-0.4533469, 0.89129806, 0.008026665), (-0.25295994, 0.9674767, -1.1186829e-8), (-0.2527339, 0.967498, -0.008556373), (-0.45334753, 0.8912977, -0.008026807), (-0.4537946, 0.89110637, 4.4980424e-9), (-0.4537946, 0.89110637, 4.4980424e-9), (-0.45334753, 0.8912977, -0.008026807), (-0.58703107, 0.8095287, -0.007608625), (-0.58752567, 0.80920553, 9.702695e-9), (-0.4533469, 0.89129806, 0.008026665), (-0.4537946, 0.89110637, 4.4980424e-9), (-0.58752567, 0.80920553, 9.702695e-9), (-0.587032, 0.80952793, 0.0076084905), (-0.587032, 0.80952793, 0.0076084905), (-0.58752567, 0.80920553, 9.702695e-9), (-0.7071064, 0.7071072, -5.947965e-10), (-0.7070873, 0.7070874, 0.0074220556), (-0.58752567, 0.80920553, 9.702695e-9), (-0.58703107, 0.8095287, -0.007608625), (-0.70708734, 0.7070873, -0.0074219937), (-0.7071064, 0.7071072, -5.947965e-10), (-0.7071064, 0.7071072, -5.947965e-10), (-0.70708734, 0.7070873, -0.0074219937), (-0.8095287, 0.58703107, -0.0076083946), (-0.8092065, 0.58752435, 1.1524276e-9), (-0.7070873, 0.7070874, 0.0074220556), (-0.7071064, 0.7071072, -5.947965e-10), (-0.8092065, 0.58752435, 1.1524276e-9), (-0.80952924, 0.5870303, 0.007608562), (-0.80952924, 0.5870303, 0.007608562), (-0.8092065, 0.58752435, 1.1524276e-9), (-0.89110667, 0.45379397, 1.7248686e-8), (-0.89129776, 0.45334753, 0.008026788), (-0.8092065, 0.58752435, 1.1524276e-9), (-0.8095287, 0.58703107, -0.0076083946), (-0.89129794, 0.4533471, -0.008026635), (-0.89110667, 0.45379397, 1.7248686e-8), (-0.89110667, 0.45379397, 1.7248686e-8), (-0.89129794, 0.4533471, -0.008026635), (-0.9674983, 0.25273272, -0.008556292), (-0.9674768, 0.2529596, 5.761781e-9), (-0.89129776, 0.45334753, 0.008026788), (-0.89110667, 0.45379397, 1.7248686e-8), (-0.9674768, 0.2529596, 5.761781e-9), (-0.96749806, 0.25273356, 0.008556345), (-0.96749806, 0.25273356, 0.008556345), (-0.9674768, 0.2529596, 5.761781e-9), (-0.9977598, 0.066898614, -2.3935183e-8), (-0.9977235, 0.066868536, 0.008746031), (-0.9674768, 0.2529596, 5.761781e-9), (-0.9674983, 0.25273272, -0.008556292), (-0.99772346, 0.066869155, -0.008745991), (-0.9977598, 0.066898614, -2.3935183e-8), (-0.9977598, 0.066898614, -2.3935183e-8), (-0.99772346, 0.066869155, -0.008745991), (-0.9999237, 0.008729834, -0.0087296385), (-0.9999621, 0.008707768, -2.7311271e-8), (-0.9977235, 0.066868536, 0.008746031), (-0.9977598, 0.066898614, -2.3935183e-8), (-0.9999621, 0.008707768, -2.7311271e-8), (-0.9999237, 0.008729818, 0.008729671), (0.008729784, -0.008729593, 0.9999238), (-4.8174564e-10, -0.008707456, 0.9999621), (-7.49598e-9, -0.06690002, 0.9977597), (0.008746221, -0.06686988, 0.9977234), (-4.8174564e-10, -0.008707456, 0.9999621), (-0.008729802, -0.008729626, 0.9999238), (-0.008746261, -0.066869654, 0.99772346), (-7.49598e-9, -0.06690002, 0.9977597), (-7.49598e-9, -0.06690002, 0.9977597), (-0.008746261, -0.066869654, 0.99772346), (-0.008556378, -0.25273407, 0.96749794), (2.2672976e-8, -0.25296128, 0.96747637), (0.008746221, -0.06686988, 0.9977234), (-7.49598e-9, -0.06690002, 0.9977597), (2.2672976e-8, -0.25296128, 0.96747637), (0.008556371, -0.25273424, 0.96749794), (0.008556371, -0.25273424, 0.96749794), (2.2672976e-8, -0.25296128, 0.96747637), (3.152346e-8, -0.4537953, 0.8911059), (0.008026745, -0.4533475, 0.89129776), (2.2672976e-8, -0.25296128, 0.96747637), (-0.008556378, -0.25273407, 0.96749794), (-0.008026672, -0.45334822, 0.8912974), (3.152346e-8, -0.4537953, 0.8911059), (3.152346e-8, -0.4537953, 0.8911059), (-0.008026672, -0.45334822, 0.8912974), (-0.0076086093, -0.58703065, 0.80952895), (-2.7360855e-8, -0.5875245, 0.80920637), (0.008026745, -0.4533475, 0.89129776), (3.152346e-8, -0.4537953, 0.8911059), (-2.7360855e-8, -0.5875245, 0.80920637), (0.0076085827, -0.58703005, 0.80952936), (0.0076085827, -0.58703005, 0.80952936), (-2.7360855e-8, -0.5875245, 0.80920637), (-3.565062e-8, -0.7071059, 0.70710766), (0.0074220886, -0.7070874, 0.7070872), (-2.7360855e-8, -0.5875245, 0.80920637), (-0.0076086093, -0.58703065, 0.80952895), (-0.007422134, -0.707086, 0.7070886), (-3.565062e-8, -0.7071059, 0.70710766), (-3.565062e-8, -0.7071059, 0.70710766), (-0.007422134, -0.707086, 0.7070886), (-0.007608438, -0.80952823, 0.58703166), (2.2230697e-8, -0.80920607, 0.58752483), (0.0074220886, -0.7070874, 0.7070872), (-3.565062e-8, -0.7071059, 0.70710766), (2.2230697e-8, -0.80920607, 0.58752483), (0.0076085543, -0.8095295, 0.58703), (0.0076085543, -0.8095295, 0.58703), (2.2230697e-8, -0.80920607, 0.58752483), (4.479454e-8, -0.89110637, 0.4537945), (0.008026751, -0.89129734, 0.45334828), (2.2230697e-8, -0.80920607, 0.58752483), (-0.007608438, -0.80952823, 0.58703166), (-0.008026634, -0.89129794, 0.453347), (4.479454e-8, -0.89110637, 0.4537945), (4.479454e-8, -0.89110637, 0.4537945), (-0.008026634, -0.89129794, 0.453347), (-0.008556291, -0.9674983, 0.25273275), (5.761781e-9, -0.9674768, 0.2529596), (0.008026751, -0.89129734, 0.45334828), (4.479454e-8, -0.89110637, 0.4537945), (5.761781e-9, -0.9674768, 0.2529596), (0.008556345, -0.96749806, 0.25273356), (0.008556345, -0.96749806, 0.25273356), (5.761781e-9, -0.9674768, 0.2529596), (4.7128186e-9, -0.9977598, 0.066898614), (0.008746013, -0.99772346, 0.06686853), (5.761781e-9, -0.9674768, 0.2529596), (-0.008556291, -0.9674983, 0.25273275), (-0.008746006, -0.9977234, 0.06686912), (4.7128186e-9, -0.9977598, 0.066898614), (4.7128186e-9, -0.9977598, 0.066898614), (-0.008746006, -0.9977234, 0.06686912), (-0.008729584, -0.9999237, 0.008729909), (2.849711e-8, -0.9999621, 0.008707787), (0.008746013, -0.99772346, 0.06686853), (4.7128186e-9, -0.9977598, 0.066898614), (2.849711e-8, -0.9999621, 0.008707787), (0.008729552, -0.99992377, 0.008729888), (0.008729805, 0.008729596, 0.9999238), (0.00870758, -1.0376061e-9, 0.9999621), (0.06689927, 1.1021317e-8, 0.99775976), (0.06686945, 0.008746073, 0.99772334), (0.00870758, -1.0376061e-9, 0.9999621), (0.008729784, -0.008729593, 0.9999238), (0.06686886, -0.008746096, 0.99772346), (0.06689927, 1.1021317e-8, 0.99775976), (0.06689927, 1.1021317e-8, 0.99775976), (0.06686886, -0.008746096, 0.99772346), (0.25273392, -0.008556396, 0.96749806), (0.25295946, 2.469334e-9, 0.96747684), (0.06686945, 0.008746073, 0.99772334), (0.06689927, 1.1021317e-8, 0.99775976), (0.25295946, 2.469334e-9, 0.96747684), (0.25273225, 0.008556347, 0.9674984), (0.25273225, 0.008556347, 0.9674984), (0.25295946, 2.469334e-9, 0.96747684), (0.4537935, -1.0817603e-8, 0.8911068), (0.45334685, 0.008026693, 0.891298), (0.25295946, 2.469334e-9, 0.96747684), (0.25273392, -0.008556396, 0.96749806), (0.4533472, -0.008026838, 0.89129776), (0.4537935, -1.0817603e-8, 0.8911068), (0.4537935, -1.0817603e-8, 0.8911068), (0.4533472, -0.008026838, 0.89129776), (0.5870305, -0.0076086326, 0.8095291), (0.58752525, -1.0780774e-9, 0.8092058), (0.45334685, 0.008026693, 0.891298), (0.4537935, -1.0817603e-8, 0.8911068), (0.58752525, -1.0780774e-9, 0.8092058), (0.5870318, 0.007608464, 0.8095281), (0.5870318, 0.007608464, 0.8095281), (0.58752525, -1.0780774e-9, 0.8092058), (0.7071082, 9.888493e-9, 0.70710534), (0.7070877, 0.007422019, 0.7070869), (0.58752525, -1.0780774e-9, 0.8092058), (0.5870305, -0.0076086326, 0.8095291), (0.70708805, -0.007422071, 0.7070866), (0.7071082, 9.888493e-9, 0.70710534), (0.7071082, 9.888493e-9, 0.70710534), (0.70708805, -0.007422071, 0.7070866), (0.8095283, -0.007608454, 0.58703154), (0.80920607, 5.092985e-9, 0.587525), (0.7070877, 0.007422019, 0.7070869), (0.7071082, 9.888493e-9, 0.70710534), (0.80920607, 5.092985e-9, 0.587525), (0.8095288, 0.0076086037, 0.5870308), (0.8095288, 0.0076086037, 0.5870308), (0.80920607, 5.092985e-9, 0.587525), (0.89110607, 8.4756495e-9, 0.45379522), (0.89129764, 0.008026778, 0.4533477), (0.80920607, 5.092985e-9, 0.587525), (0.8095283, -0.007608454, 0.58703154), (0.8912978, -0.00802662, 0.45334724), (0.89110607, 8.4756495e-9, 0.45379522), (0.89110607, 8.4756495e-9, 0.45379522), (0.8912978, -0.00802662, 0.45334724), (0.96749836, -0.008556314, 0.25273246), (0.9674768, 1.1972529e-8, 0.25295985), (0.89129764, 0.008026778, 0.4533477), (0.89110607, 8.4756495e-9, 0.45379522), (0.9674768, 1.1972529e-8, 0.25295985), (0.967498, 0.008556321, 0.25273377), (0.967498, 0.008556321, 0.25273377), (0.9674768, 1.1972529e-8, 0.25295985), (0.99775976, -2.9315959e-9, 0.06689949), (0.9977234, 0.0087461565, 0.06686932), (0.9674768, 1.1972529e-8, 0.25295985), (0.96749836, -0.008556314, 0.25273246), (0.99772346, -0.008746131, 0.06686969), (0.99775976, -2.9315959e-9, 0.06689949), (0.99775976, -2.9315959e-9, 0.06689949), (0.99772346, -0.008746131, 0.06686969), (0.9999237, -0.008729818, 0.008729671), (0.9999621, -5.9291777e-10, 0.008707634), (0.9977234, 0.0087461565, 0.06686932), (0.99775976, -2.9315959e-9, 0.06689949), (0.9999621, -5.9291777e-10, 0.008707634), (0.9999237, 0.008729726, 0.0087296795), (-0.008729784, -0.008729593, -0.9999238), (4.8174564e-10, -0.008707456, -0.9999621), (7.49598e-9, -0.06690002, -0.9977597), (-0.0087462235, -0.06686989, -0.9977234), (4.8174564e-10, -0.008707456, -0.9999621), (0.008729802, -0.008729626, -0.9999238), (0.008746261, -0.066869654, -0.99772346), (7.49598e-9, -0.06690002, -0.9977597), (7.49598e-9, -0.06690002, -0.9977597), (0.008746261, -0.066869654, -0.99772346), (0.008556373, -0.2527339, -0.96749794), (1.1186829e-8, -0.25295994, -0.9674767), (-0.0087462235, -0.06686989, -0.9977234), (7.49598e-9, -0.06690002, -0.9977597), (1.1186829e-8, -0.25295994, -0.9674767), (-0.008556368, -0.25273243, -0.9674984), (-0.008556368, -0.25273243, -0.9674984), (1.1186829e-8, -0.25295994, -0.9674767), (4.4236943e-9, -0.45379484, -0.89110625), (-0.008026665, -0.4533469, -0.89129806), (1.1186829e-8, -0.25295994, -0.9674767), (0.008556373, -0.2527339, -0.96749794), (0.008026792, -0.45334834, -0.89129734), (4.4236943e-9, -0.45379484, -0.89110625), (4.4236943e-9, -0.45379484, -0.89110625), (0.008026792, -0.45334834, -0.89129734), (0.007608584, -0.5870311, -0.8095286), (-1.5241781e-9, -0.58752626, -0.8092051), (-0.008026665, -0.4533469, -0.89129806), (4.4236943e-9, -0.45379484, -0.89110625), (-1.5241781e-9, -0.58752626, -0.8092051), (-0.0076084705, -0.58703285, -0.8095272), (-0.0076084705, -0.58703285, -0.8095272), (-1.5241781e-9, -0.58752626, -0.8092051), (-4.148706e-8, -0.7071078, -0.70710576), (-0.007422083, -0.70708853, -0.7070861), (-1.5241781e-9, -0.58752626, -0.8092051), (0.007608584, -0.5870311, -0.8095286), (0.007422037, -0.70708776, -0.7070869), (-4.148706e-8, -0.7071078, -0.70710576), (-4.148706e-8, -0.7071078, -0.70710576), (0.007422037, -0.70708776, -0.7070869), (0.0076085823, -0.8095291, -0.5870304), (-6.7472754e-8, -0.80920607, -0.58752495), (-0.007422083, -0.70708853, -0.7070861), (-4.148706e-8, -0.7071078, -0.70710576), (-6.7472754e-8, -0.80920607, -0.58752495), (-0.0076085613, -0.8095282, -0.5870316), (-0.0076085613, -0.8095282, -0.5870316), (-6.7472754e-8, -0.80920607, -0.58752495), (-1.4646513e-8, -0.89110523, -0.4537968), (-0.008026697, -0.89129657, -0.45334983), (-6.7472754e-8, -0.80920607, -0.58752495), (0.0076085823, -0.8095291, -0.5870304), (0.008026815, -0.89129686, -0.45334926), (-1.4646513e-8, -0.89110523, -0.4537968), (-1.4646513e-8, -0.89110523, -0.4537968), (0.008026815, -0.89129686, -0.45334926), (0.00855638, -0.9674979, -0.2527341), (2.3159373e-8, -0.9674767, -0.25296023), (-0.008026697, -0.89129657, -0.45334983), (-1.4646513e-8, -0.89110523, -0.4537968), (2.3159373e-8, -0.9674767, -0.25296023), (-0.008556341, -0.967498, -0.25273386), (-0.008556341, -0.967498, -0.25273386), (2.3159373e-8, -0.9674767, -0.25296023), (9.165876e-9, -0.9977599, -0.06689818), (-0.008746027, -0.99772346, -0.06686853), (2.3159373e-8, -0.9674767, -0.25296023), (0.00855638, -0.9674979, -0.2527341), (0.008746003, -0.99772346, -0.06686869), (9.165876e-9, -0.9977599, -0.06689818), (9.165876e-9, -0.9977599, -0.06689818), (0.008746003, -0.99772346, -0.06686869), (0.008729553, -0.9999237, -0.008729913), (-1.3711223e-9, -0.9999621, -0.008707794), (-0.008746027, -0.99772346, -0.06686853), (9.165876e-9, -0.9977599, -0.06689818), (-1.3711223e-9, -0.9999621, -0.008707794), (-0.008729551, -0.99992377, -0.008729891), (-0.008729802, -0.008729626, 0.9999238), (-0.008707573, 2.8274766e-8, 0.9999621), (-0.06689927, 2.968705e-9, 0.99775976), (-0.066869475, -0.0087460885, 0.99772334), (-0.008707573, 2.8274766e-8, 0.9999621), (-0.008729781, 0.008729593, 0.9999238), (-0.06686886, 0.008746096, 0.99772346), (-0.06689927, 2.968705e-9, 0.99775976), (-0.06689927, 2.968705e-9, 0.99775976), (-0.06686886, 0.008746096, 0.99772346), (-0.25273433, 0.008556326, 0.9674979), (-0.2529609, -2.7461995e-8, 0.9674765), (-0.066869475, -0.0087460885, 0.99772334), (-0.06689927, 2.968705e-9, 0.99775976), (-0.2529609, -2.7461995e-8, 0.9674765), (-0.25273424, -0.008556368, 0.9674979), (-0.25273424, -0.008556368, 0.9674979), (-0.2529609, -2.7461995e-8, 0.9674765), (-0.45379397, 1.50926e-8, 0.89110667), (-0.45334777, -0.008026793, 0.89129764), (-0.2529609, -2.7461995e-8, 0.9674765), (-0.25273433, 0.008556326, 0.9674979), (-0.4533484, 0.008026673, 0.8912972), (-0.45379397, 1.50926e-8, 0.89110667), (-0.45379397, 1.50926e-8, 0.89110667), (-0.4533484, 0.008026673, 0.8912972), (-0.58703077, 0.007608622, 0.8095288), (-0.58752394, 8.7881894e-8, 0.8092067), (-0.45334777, -0.008026793, 0.89129764), (-0.45379397, 1.50926e-8, 0.89110667), (-0.58752394, 8.7881894e-8, 0.8092067), (-0.5870302, -0.007608621, 0.80952924), (-0.5870302, -0.007608621, 0.80952924), (-0.58752394, 8.7881894e-8, 0.8092067), (-0.70710784, 5.61711e-8, 0.7071057), (-0.70708776, -0.007422061, 0.70708686), (-0.58752394, 8.7881894e-8, 0.8092067), (-0.58703077, 0.007608622, 0.8095288), (-0.70708734, 0.0074221203, 0.7070873), (-0.70710784, 5.61711e-8, 0.7071057), (-0.70710784, 5.61711e-8, 0.7071057), (-0.70708734, 0.0074221203, 0.7070873), (-0.80952793, 0.00760842, 0.58703196), (-0.8092059, -2.3345944e-8, 0.5875251), (-0.70708776, -0.007422061, 0.70708686), (-0.70710784, 5.61711e-8, 0.7071057), (-0.8092059, -2.3345944e-8, 0.5875251), (-0.8095288, -0.0076085436, 0.5870307), (-0.8095288, -0.0076085436, 0.5870307), (-0.8092059, -2.3345944e-8, 0.5875251), (-0.89110583, -3.7099554e-8, 0.45379552), (-0.8912973, -0.008026751, 0.4533485), (-0.8092059, -2.3345944e-8, 0.5875251), (-0.80952793, 0.00760842, 0.58703196), (-0.8912978, 0.008026594, 0.4533473), (-0.89110583, -3.7099554e-8, 0.45379552), (-0.89110583, -3.7099554e-8, 0.45379552), (-0.8912978, 0.008026594, 0.4533473), (-0.96749836, 0.008556316, 0.25273252), (-0.9674768, -1.1972529e-8, 0.25295985), (-0.8912973, -0.008026751, 0.4533485), (-0.89110583, -3.7099554e-8, 0.45379552), (-0.9674768, -1.1972529e-8, 0.25295985), (-0.967498, -0.008556321, 0.25273377), (-0.967498, -0.008556321, 0.25273377), (-0.9674768, -1.1972529e-8, 0.25295985), (-0.99775976, 2.9315959e-9, 0.06689949), (-0.9977234, -0.0087461565, 0.06686932), (-0.9674768, -1.1972529e-8, 0.25295985), (-0.96749836, 0.008556316, 0.25273252), (-0.99772346, 0.008746129, 0.06686967), (-0.99775976, 2.9315959e-9, 0.06689949), (-0.99775976, 2.9315959e-9, 0.06689949), (-0.99772346, 0.008746129, 0.06686967), (-0.9999237, 0.008729818, 0.008729671), (-0.9999621, 5.9291777e-10, 0.008707634), (-0.9977234, -0.0087461565, 0.06686932), (-0.99775976, 2.9315959e-9, 0.06689949), (-0.9999621, 5.9291777e-10, 0.008707634), (-0.9999237, -0.008729834, 0.008729639), (-0.008729781, 0.008729593, 0.9999238), (7.1150135e-9, 0.008707444, 0.9999621), (7.4217623e-9, 0.0669, 0.9977597), (-0.008746224, 0.06686989, 0.9977234), (7.1150135e-9, 0.008707444, 0.9999621), (0.008729805, 0.008729596, 0.9999238), (0.008746261, 0.066869594, 0.99772346), (7.4217623e-9, 0.0669, 0.9977597), (7.4217623e-9, 0.0669, 0.9977597), (0.008746261, 0.066869594, 0.99772346), (0.008556378, 0.25273407, 0.96749794), (-2.2672976e-8, 0.25296128, 0.96747637), (-0.008746224, 0.06686989, 0.9977234), (7.4217623e-9, 0.0669, 0.9977597), (-2.2672976e-8, 0.25296128, 0.96747637), (-0.008556372, 0.25273418, 0.967498), (-0.008556372, 0.25273418, 0.967498), (-2.2672976e-8, 0.25296128, 0.96747637), (-3.152346e-8, 0.4537953, 0.8911059), (-0.008026742, 0.45334738, 0.89129776), (-2.2672976e-8, 0.25296128, 0.96747637), (0.008556378, 0.25273407, 0.96749794), (0.008026672, 0.45334822, 0.8912974), (-3.152346e-8, 0.4537953, 0.8911059), (-3.152346e-8, 0.4537953, 0.8911059), (0.008026672, 0.45334822, 0.8912974), (0.00760861, 0.5870307, 0.8095288), (2.7360855e-8, 0.5875245, 0.80920637), (-0.008026742, 0.45334738, 0.89129776), (-3.152346e-8, 0.4537953, 0.8911059), (2.7360855e-8, 0.5875245, 0.80920637), (-0.0076085827, 0.58703005, 0.80952936), (-0.0076085827, 0.58703005, 0.80952936), (2.7360855e-8, 0.5875245, 0.80920637), (3.5576267e-8, 0.7071059, 0.70710766), (-0.007422089, 0.7070873, 0.7070873), (2.7360855e-8, 0.5875245, 0.80920637), (0.00760861, 0.5870307, 0.8095288), (0.007422134, 0.70708597, 0.70708865), (3.5576267e-8, 0.7071059, 0.70710766), (3.5576267e-8, 0.7071059, 0.70710766), (0.007422134, 0.70708597, 0.70708865), (0.0076084374, 0.8095282, 0.5870317), (-2.2305047e-8, 0.80920607, 0.58752483), (-0.007422089, 0.7070873, 0.7070873), (3.5576267e-8, 0.7071059, 0.70710766), (-2.2305047e-8, 0.80920607, 0.58752483), (-0.0076085376, 0.8095291, 0.5870303), (-0.0076085376, 0.8095291, 0.5870303), (-2.2305047e-8, 0.80920607, 0.58752483), (-4.479454e-8, 0.89110637, 0.4537945), (-0.00802675, 0.89129716, 0.45334864), (-2.2305047e-8, 0.80920607, 0.58752483), (0.0076084374, 0.8095282, 0.5870317), (0.008026635, 0.891298, 0.45334697), (-4.479454e-8, 0.89110637, 0.4537945), (-4.479454e-8, 0.89110637, 0.4537945), (0.008026635, 0.891298, 0.45334697), (0.008556292, 0.9674983, 0.25273272), (-5.761781e-9, 0.9674768, 0.2529596), (-0.00802675, 0.89129716, 0.45334864), (-4.479454e-8, 0.89110637, 0.4537945), (-5.761781e-9, 0.9674768, 0.2529596), (-0.008556345, 0.96749806, 0.25273356), (-0.008556345, 0.96749806, 0.25273356), (-5.761781e-9, 0.9674768, 0.2529596), (1.0056487e-8, 0.99775976, 0.066898614), (-0.008746031, 0.9977235, 0.066868536), (-5.761781e-9, 0.9674768, 0.2529596), (0.008556292, 0.9674983, 0.25273272), (0.008746007, 0.9977234, 0.06686915), (1.0056487e-8, 0.99775976, 0.066898614), (1.0056487e-8, 0.99775976, 0.066898614), (0.008746007, 0.9977234, 0.06686915), (0.008729672, 0.9999237, 0.008729846), (-3.7057357e-10, 0.9999621, 0.008707775), (-0.008746031, 0.9977235, 0.066868536), (1.0056487e-8, 0.99775976, 0.066898614), (-3.7057357e-10, 0.9999621, 0.008707775), (-0.0087295845, 0.9999237, 0.008729875), (0.008729802, -0.008729626, -0.9999238), (0.008707573, 2.8274766e-8, -0.9999621), (0.06689927, 2.968705e-9, -0.99775976), (0.066869475, -0.0087460885, -0.99772334), (0.008707573, 2.8274766e-8, -0.9999621), (0.00872978, 0.008729593, -0.9999238), (0.06686886, 0.008746096, -0.99772346), (0.06689927, 2.968705e-9, -0.99775976), (0.06689927, 2.968705e-9, -0.99775976), (0.06686886, 0.008746096, -0.99772346), (0.25273392, 0.008556396, -0.96749806), (0.25295946, -2.469334e-9, -0.96747684), (0.066869475, -0.0087460885, -0.99772334), (0.06689927, 2.968705e-9, -0.99775976), (0.25295946, -2.469334e-9, -0.96747684), (0.25273225, -0.008556349, -0.9674984), (0.25273225, -0.008556349, -0.9674984), (0.25295946, -2.469334e-9, -0.96747684), (0.45379362, 3.323346e-8, -0.8911067), (0.45334682, -0.008026693, -0.891298), (0.25295946, -2.469334e-9, -0.96747684), (0.25273392, 0.008556396, -0.96749806), (0.45334783, 0.008026794, -0.8912975), (0.45379362, 3.323346e-8, -0.8911067), (0.45379362, 3.323346e-8, -0.8911067), (0.45334783, 0.008026794, -0.8912975), (0.58703065, 0.007608601, -0.80952895), (0.5875252, 5.119009e-8, -0.8092058), (0.45334682, -0.008026693, -0.891298), (0.45379362, 3.323346e-8, -0.8911067), (0.5875252, 5.119009e-8, -0.8092058), (0.5870318, -0.007608464, -0.8095281), (0.5870318, -0.007608464, -0.8095281), (0.5875252, 5.119009e-8, -0.8092058), (0.70710844, 2.7881091e-8, -0.70710516), (0.7070885, -0.007422013, -0.70708627), (0.5875252, 5.119009e-8, -0.8092058), (0.58703065, 0.007608601, -0.80952895), (0.70708776, 0.0074220975, -0.70708686), (0.70710844, 2.7881091e-8, -0.70710516), (0.70710844, 2.7881091e-8, -0.70710516), (0.70708776, 0.0074220975, -0.70708686), (0.8095283, 0.007608454, -0.58703154), (0.80920607, -2.3606171e-8, -0.58752495), (0.7070885, -0.007422013, -0.70708627), (0.70710844, 2.7881091e-8, -0.70710516), (0.80920607, -2.3606171e-8, -0.58752495), (0.8095288, -0.007608584, -0.58703077), (0.8095288, -0.007608584, -0.58703077), (0.80920607, -2.3606171e-8, -0.58752495), (0.89110583, -3.7025206e-8, -0.45379558), (0.89129716, -0.00802678, -0.4533485), (0.80920607, -2.3606171e-8, -0.58752495), (0.8095283, 0.007608454, -0.58703154), (0.8912978, 0.00802662, -0.45334724), (0.89110583, -3.7025206e-8, -0.45379558), (0.89110583, -3.7025206e-8, -0.45379558), (0.8912978, 0.00802662, -0.45334724), (0.96749836, 0.008556314, -0.25273246), (0.9674768, -1.1972529e-8, -0.25295985), (0.89129716, -0.00802678, -0.4533485), (0.89110583, -3.7025206e-8, -0.45379558), (0.9674768, -1.1972529e-8, -0.25295985), (0.967498, -0.008556321, -0.25273377), (0.967498, -0.008556321, -0.25273377), (0.9674768, -1.1972529e-8, -0.25295985), (0.99775976, 2.7831606e-9, -0.06689946), (0.9977234, -0.0087461565, -0.06686932), (0.9674768, -1.1972529e-8, -0.25295985), (0.96749836, 0.008556314, -0.25273246), (0.99772346, 0.008746131, -0.06686963), (0.99775976, 2.7831606e-9, -0.06689946), (0.99775976, 2.7831606e-9, -0.06689946), (0.99772346, 0.008746131, -0.06686963), (0.99992377, 0.008729713, -0.008729682), (0.9999621, 1.4822944e-10, -0.008707618), (0.9977234, -0.0087461565, -0.06686932), (0.99775976, 2.7831606e-9, -0.06689946), (0.9999621, 1.4822944e-10, -0.008707618), (0.9999237, -0.008729834, -0.008729639), (-0.008729585, 0.9999237, -0.008729895), (-0.008707474, 0.9999621, -1.8158107e-9), (-1.4822583e-10, 1, -1.1487502e-9), (2.2234414e-10, 0.9999621, -0.008707777), (-0.008707474, 0.9999621, -1.8158107e-9), (-0.0087295845, 0.9999237, 0.008729875), (-3.7057357e-10, 0.9999621, 0.008707775), (-1.4822583e-10, 1, -1.1487502e-9), (-1.4822583e-10, 1, -1.1487502e-9), (-3.7057357e-10, 0.9999621, 0.008707775), (0.008729672, 0.9999237, 0.008729846), (0.008707651, 0.9999621, -1.11172085e-10), (2.2234414e-10, 0.9999621, -0.008707777), (-1.4822583e-10, 1, -1.1487502e-9), (0.008707651, 0.9999621, -1.11172085e-10), (0.008729672, 0.9999237, -0.008729829)] (
                    interpolation = "faceVarying"
                )
                point3f[] points = [(0.54362965, 0.9967255, 0.54362965), (0.54362965, 0.54362965, 0.99672544), (0.99672544, 0.5436296, 0.5436296), (0.5435471, 0.98545766, 0.86068714), (0.54331124, 0.95780605, 0.9150263), (0.8606871, 0.9854577, 0.5435471), (0.8597605, 0.97450316, 0.8597605), (0.85774124, 0.94916475, 0.9110175), (0.9150263, 0.957806, 0.54331124), (0.9110175, 0.94916475, 0.85774124), (0.9035297, 0.93115807, 0.9035297), (0.86068714, 0.5435471, 0.98545766), (0.9150263, 0.54331124, 0.95780605), (0.5435471, 0.8606871, 0.9854577), (0.8597605, 0.8597605, 0.97450316), (0.9110175, 0.8577413, 0.94916475), (0.54331124, 0.9150263, 0.957806), (0.85774124, 0.9110174, 0.94916475), (0.90352976, 0.90352976, 0.93115807), (0.98545766, 0.86068714, 0.5435471), (0.95780605, 0.9150263, 0.54331124), (0.9854577, 0.5435471, 0.8606871), (0.97450316, 0.8597605, 0.8597605), (0.94916475, 0.9110175, 0.85774124), (0.95780605, 0.5433113, 0.91502637), (0.94916475, 0.85774124, 0.9110174), (0.93115807, 0.90352976, 0.90352976), (0.5436296, 0.5436296, -0.99672544), (0.54362965, 0.9967255, -0.54362965), (0.99672544, 0.54362965, -0.54362965), (0.5435471, 0.86068714, -0.98545766), (0.54331124, 0.9150263, -0.95780605), (0.8606871, 0.5435471, -0.9854577), (0.8597605, 0.8597605, -0.97450316), (0.85774124, 0.9110175, -0.94916475), (0.9150263, 0.54331124, -0.957806), (0.9110175, 0.85774124, -0.94916475), (0.9035297, 0.9035297, -0.93115807), (0.86068714, 0.98545766, -0.5435471), (0.9150263, 0.95780605, -0.54331124), (0.5435471, 0.9854577, -0.8606871), (0.8597605, 0.97450316, -0.8597605), (0.9110175, 0.94916475, -0.8577413), (0.54331124, 0.957806, -0.9150263), (0.85774124, 0.94916475, -0.9110174), (0.90352976, 0.93115807, -0.90352976), (0.98545766, 0.5435471, -0.86068714), (0.95780605, 0.54331124, -0.9150263), (0.9854577, 0.8606871, -0.5435471), (0.97450316, 0.8597605, -0.8597605), (0.94916475, 0.85774124, -0.9110175), (0.95780605, 0.91502637, -0.5433113), (0.94916475, 0.9110174, -0.85774124), (0.93115807, 0.90352976, -0.90352976), (0.9967255, -0.54362965, 0.54362965), (0.5436296, -0.5436296, 0.99672544), (0.5436296, -0.99672544, 0.5436296), (0.98545766, -0.5435471, 0.86068714), (0.95780605, -0.54331124, 0.9150263), (0.9854577, -0.8606871, 0.5435471), (0.97450316, -0.8597605, 0.8597605), (0.94916475, -0.85774124, 0.9110175), (0.957806, -0.9150263, 0.54331124), (0.94916475, -0.9110175, 0.85774124), (0.93115807, -0.9035297, 0.9035297), (0.5435471, -0.86068714, 0.98545766), (0.54331124, -0.9150263, 0.9578061), (0.8606871, -0.5435471, 0.9854577), (0.8597605, -0.8597605, 0.97450316), (0.85774136, -0.91101736, 0.9491648), (0.91502637, -0.5433113, 0.95780605), (0.9110174, -0.85774124, 0.94916475), (0.90352976, -0.90352976, 0.93115807), (0.86068714, -0.98545766, 0.5435471), (0.9150263, -0.95780605, 0.54331124), (0.5435471, -0.9854577, 0.8606871), (0.8597605, -0.97450316, 0.8597605), (0.9110175, -0.94916475, 0.85774124), (0.5433113, -0.957806, 0.9150263), (0.85774124, -0.94916475, 0.9110174), (0.90352976, -0.93115807, 0.90352976), (0.99672544, -0.5436296, -0.5436296), (0.54362965, -0.99672544, -0.54362965), (0.54362965, -0.54362965, -0.9967255), (0.98545766, -0.86068714, -0.5435471), (0.95780605, -0.9150263, -0.54331124), (0.9854577, -0.5435471, -0.8606871), (0.97450316, -0.8597605, -0.8597605), (0.94916475, -0.9110175, -0.85774124), (0.957806, -0.54331124, -0.9150263), (0.94916475, -0.85774124, -0.9110175), (0.93115807, -0.9035297, -0.9035297), (0.5435471, -0.98545766, -0.86068714), (0.54331124, -0.9578061, -0.9150263), (0.8606871, -0.9854577, -0.5435471), (0.8597605, -0.97450316, -0.8597605), (0.85774136, -0.9491648, -0.91101736), (0.91502637, -0.95780605, -0.5433113), (0.9110174, -0.94916475, -0.85774124), (0.90352976, -0.93115807, -0.90352976), (0.86068714, -0.5435471, -0.98545766), (0.9150263, -0.54331124, -0.95780605), (0.5435471, -0.8606871, -0.9854577), (0.8597605, -0.8597605, -0.97450316), (0.9110175, -0.85774124, -0.94916475), (0.5433113, -0.9150263, -0.957806), (0.85774124, -0.9110174, -0.94916475), (0.90352976, -0.90352976, -0.93115807), (-0.54362965, 0.9967255, 0.54362965), (-0.9967255, 0.54362965, 0.54362965), (-0.5436296, 0.5436296, 0.99672544), (-0.86068714, 0.98545766, 0.5435471), (-0.9150263, 0.95780605, 0.54331124), (-0.5435471, 0.9854577, 0.8606871), (-0.8597605, 0.97450316, 0.8597605), (-0.9110175, 0.94916475, 0.85774124), (-0.54331124, 0.957806, 0.9150263), (-0.85774124, 0.94916475, 0.9110175), (-0.9035297, 0.93115807, 0.9035297), (-0.98545766, 0.5435471, 0.86068714), (-0.95780605, 0.54331124, 0.9150263), (-0.9854577, 0.8606871, 0.5435471), (-0.97450316, 0.8597605, 0.8597605), (-0.94916475, 0.8577413, 0.9110175), (-0.95780605, 0.91502637, 0.5433113), (-0.94916475, 0.9110174, 0.85774124), (-0.93115807, 0.90352976, 0.90352976), (-0.5435471, 0.86068714, 0.98545766), (-0.54331124, 0.9150263, 0.9578061), (-0.8606871, 0.5435471, 0.9854577), (-0.8597605, 0.8597605, 0.97450316), (-0.8577413, 0.91101736, 0.9491648), (-0.9150263, 0.54331124, 0.957806), (-0.9110174, 0.85774124, 0.94916475), (-0.90352976, 0.90352976, 0.93115807), (-0.99672544, 0.5436296, -0.5436296), (-0.54362965, 0.9967255, -0.54362965), (-0.54362965, 0.54362965, -0.99672544), (-0.98545766, 0.86068714, -0.5435471), (-0.95780605, 0.9150263, -0.54331124), (-0.9854577, 0.5435471, -0.8606871), (-0.97450316, 0.8597605, -0.8597605), (-0.94916475, 0.9110175, -0.85774124), (-0.95780605, 0.54331124, -0.9150263), (-0.9491648, 0.85774136, -0.9110173), (-0.93115807, 0.9035297, -0.9035297), (-0.5435471, 0.98545766, -0.86068714), (-0.54331124, 0.9578061, -0.9150263), (-0.8606871, 0.9854577, -0.5435471), (-0.8597605, 0.97450316, -0.8597605), (-0.85774136, 0.9491648, -0.91101736), (-0.91502637, 0.95780605, -0.5433113), (-0.9110174, 0.94916475, -0.85774124), (-0.90352976, 0.93115807, -0.90352976), (-0.86068714, 0.5435471, -0.98545766), (-0.9150263, 0.54331124, -0.95780605), (-0.5435471, 0.8606871, -0.9854577), (-0.8597605, 0.8597605, -0.97450316), (-0.9110175, 0.85774124, -0.94916475), (-0.5433113, 0.9150263, -0.957806), (-0.85774124, 0.9110174, -0.94916475), (-0.9035298, 0.90352976, -0.9311581), (-0.99672544, -0.5436296, 0.5436296), (-0.54362965, -0.9967255, 0.54362965), (-0.54362965, -0.54362965, 0.9967255), (-0.98545766, -0.86068714, 0.5435471), (-0.95780605, -0.9150263, 0.54331124), (-0.9854577, -0.5435471, 0.8606871), (-0.97450316, -0.8597605, 0.8597605), (-0.94916475, -0.9110175, 0.85774124), (-0.957806, -0.54331124, 0.9150263), (-0.94916475, -0.85774124, 0.9110175), (-0.9311581, -0.9035298, 0.9035298), (-0.5435471, -0.98545766, 0.86068714), (-0.54331124, -0.95780605, 0.9150263), (-0.8606871, -0.9854577, 0.5435471), (-0.8597605, -0.97450316, 0.8597605), (-0.8577413, -0.94916475, 0.9110175), (-0.9150263, -0.957806, 0.54331124), (-0.9110174, -0.94916475, 0.85774124), (-0.90352976, -0.93115807, 0.90352976), (-0.86068714, -0.5435471, 0.98545766), (-0.9150263, -0.54331124, 0.9578061), (-0.5435471, -0.8606871, 0.9854577), (-0.8597605, -0.8597605, 0.97450316), (-0.91101736, -0.8577413, 0.9491648), (-0.54331124, -0.9150263, 0.957806), (-0.85774124, -0.9110174, 0.94916475), (-0.90352976, -0.90352976, 0.93115807), (-0.5436296, -0.5436296, -0.99672544), (-0.5436296, -0.99672544, -0.5436296), (-0.99672544, -0.54362965, -0.54362965), (-0.5435471, -0.86068714, -0.98545766), (-0.54331124, -0.9150263, -0.95780605), (-0.8606871, -0.5435471, -0.9854577), (-0.8597605, -0.8597605, -0.97450316), (-0.85774124, -0.9110175, -0.94916475), (-0.9150263, -0.54331124, -0.957806), (-0.9110175, -0.85774124, -0.94916475), (-0.9035298, -0.9035298, -0.9311581), (-0.86068714, -0.98545766, -0.5435471), (-0.9150263, -0.9578061, -0.54331124), (-0.5435471, -0.9854577, -0.8606871), (-0.8597605, -0.97450316, -0.8597605), (-0.91101736, -0.9491648, -0.85774136), (-0.54331124, -0.957806, -0.9150263), (-0.85774124, -0.94916475, -0.9110174), (-0.90352976, -0.93115807, -0.90352976), (-0.98545766, -0.5435471, -0.86068714), (-0.9578061, -0.54331124, -0.9150263), (-0.9854577, -0.8606871, -0.5435471), (-0.97450316, -0.8597605, -0.8597605), (-0.9491648, -0.8577413, -0.91101736), (-0.957806, -0.9150263, -0.5433113), (-0.94916475, -0.9110174, -0.85774124), (-0.93115807, -0.90352976, -0.90352976), (0.7987062, 0.99285316, 0.54361), (0.5436099, 0.99285316, 0.79870623), (0.7983943, 0.98161286, 0.8604025), (0.8604026, 0.98161286, 0.7983945), (0.5434268, 0.9737231, 0.88901067), (0.7975819, 0.95468104, 0.9136193), (0.8587087, 0.9635684, 0.88686585), (0.5432682, 0.93810683, 0.93810683), (0.79758185, 0.91361916, 0.9546809), (0.8573838, 0.9317182, 0.9317181), (0.8890107, 0.973723, 0.54342693), (0.8868658, 0.9635684, 0.85870874), (0.9136192, 0.954681, 0.797582), (0.8827259, 0.9411091, 0.9072393), (0.9072394, 0.9411091, 0.88272595), (0.88272583, 0.9072394, 0.9411092), (0.901694, 0.9194134, 0.9194134), (0.54361, 0.7987062, 0.99285316), (0.79870623, 0.5436099, 0.99285316), (0.8604025, 0.7983944, 0.98161286), (0.7983945, 0.8604026, 0.98161286), (0.88901067, 0.5434268, 0.9737231), (0.9136193, 0.7975819, 0.95468104), (0.88686585, 0.85870874, 0.9635684), (0.93810683, 0.5432682, 0.93810683), (0.95468104, 0.7975819, 0.9136192), (0.9317181, 0.8573838, 0.9317182), (0.54342675, 0.8890106, 0.97372305), (0.8587088, 0.8868658, 0.9635684), (0.9072393, 0.88272595, 0.9411091), (0.9411092, 0.8827259, 0.9072394), (0.9194134, 0.901694, 0.9194134), (0.99285316, 0.54361, 0.7987062), (0.99285316, 0.79870623, 0.5436099), (0.98161286, 0.8604025, 0.7983943), (0.98161286, 0.7983945, 0.8604026), (0.9737231, 0.88901067, 0.5434268), (0.95468104, 0.9136193, 0.7975819), (0.9635684, 0.88686585, 0.8587087), (0.93810683, 0.93810683, 0.5432682), (0.9317182, 0.9317181, 0.8573838), (0.973723, 0.54342693, 0.8890107), (0.9635684, 0.85870874, 0.8868658), (0.9411091, 0.9072393, 0.8827259), (0.9194134, 0.9194134, 0.901694), (0.7987062, 0.54361, -0.99285316), (0.5436099, 0.79870623, -0.99285316), (0.7983943, 0.8604025, -0.98161286), (0.8604026, 0.7983945, -0.98161286), (0.5434268, 0.88901067, -0.9737231), (0.7975819, 0.9136193, -0.95468104), (0.8587087, 0.88686585, -0.9635684), (0.5432682, 0.93810683, -0.93810683), (0.79758185, 0.9546809, -0.91361916), (0.8573838, 0.9317181, -0.9317182), (0.8890107, 0.54342693, -0.973723), (0.8868658, 0.85870874, -0.9635684), (0.9136192, 0.797582, -0.954681), (0.8827259, 0.9072393, -0.9411091), (0.9072394, 0.88272595, -0.9411091), (0.88272583, 0.9411092, -0.9072394), (0.901694, 0.9194134, -0.9194134), (0.54361, 0.99285316, -0.7987062), (0.79870623, 0.99285316, -0.5436099), (0.8604025, 0.98161286, -0.7983944), (0.7983945, 0.98161286, -0.8604026), (0.88901067, 0.9737231, -0.5434268), (0.9136193, 0.95468104, -0.7975819), (0.88686585, 0.9635684, -0.85870874), (0.93810683, 0.93810683, -0.5432682), (0.95468104, 0.9136192, -0.7975819), (0.9317181, 0.9317182, -0.8573838), (0.54342675, 0.97372305, -0.8890106), (0.8587088, 0.9635684, -0.8868658), (0.9072393, 0.9411091, -0.88272595), (0.9411092, 0.9072394, -0.8827259), (0.9194134, 0.9194134, -0.901694), (0.99285316, 0.7987062, -0.54361), (0.99285316, 0.5436099, -0.79870623), (0.98161286, 0.7983943, -0.8604025), (0.98161286, 0.8604026, -0.7983945), (0.9737231, 0.5434268, -0.88901067), (0.95468104, 0.7975819, -0.9136193), (0.9635684, 0.8587087, -0.88686585), (0.93810683, 0.5432682, -0.93810683), (0.9317182, 0.8573838, -0.9317181), (0.973723, 0.8890107, -0.54342693), (0.9635684, 0.8868658, -0.85870874), (0.9411091, 0.8827259, -0.9072393), (0.9194134, 0.901694, -0.9194134), (0.99285316, -0.7987062, 0.54361), (0.99285316, -0.5436099, 0.79870623), (0.98161286, -0.7983943, 0.8604025), (0.98161286, -0.8604026, 0.7983945), (0.9737231, -0.5434268, 0.88901067), (0.95468104, -0.7975819, 0.9136193), (0.9635684, -0.8587087, 0.88686585), (0.93810683, -0.5432682, 0.93810683), (0.9136192, -0.7975819, 0.95468104), (0.9317182, -0.8573838, 0.9317181), (0.973723, -0.8890107, 0.54342693), (0.9635684, -0.8868658, 0.85870874), (0.954681, -0.9136192, 0.797582), (0.9411091, -0.8827259, 0.9072393), (0.9411091, -0.9072394, 0.88272595), (0.9072394, -0.88272583, 0.9411092), (0.9194134, -0.901694, 0.9194134), (0.7987062, -0.54361, 0.99285316), (0.5436099, -0.79870623, 0.99285316), (0.7983944, -0.8604025, 0.98161286), (0.8604026, -0.7983945, 0.98161286), (0.54342675, -0.8890106, 0.97372305), (0.7975819, -0.9136191, 0.954681), (0.85870886, -0.8868658, 0.96356833), (0.5432682, -0.9381069, 0.9381069), (0.79758185, -0.954681, 0.9136192), (0.8573837, -0.9317182, 0.9317182), (0.8890107, -0.54342693, 0.973723), (0.8868658, -0.85870874, 0.9635684), (0.88272595, -0.9072393, 0.9411091), (0.8827259, -0.9411092, 0.9072394), (0.901694, -0.9194134, 0.9194134), (0.54361, -0.99285316, 0.7987062), (0.79870623, -0.99285316, 0.5436099), (0.8604025, -0.98161286, 0.7983943), (0.7983945, -0.98161286, 0.8604026), (0.88901067, -0.9737231, 0.5434268), (0.9136193, -0.95468104, 0.7975819), (0.88686585, -0.9635684, 0.8587087), (0.93810683, -0.93810683, 0.5432682), (0.9317181, -0.9317182, 0.8573838), (0.54342693, -0.973723, 0.8890107), (0.85870874, -0.9635684, 0.8868658), (0.9072393, -0.9411091, 0.8827259), (0.9194134, -0.9194134, 0.901694), (0.99285316, -0.54361, -0.7987062), (0.99285316, -0.79870623, -0.5436099), (0.98161286, -0.8604025, -0.7983943), (0.98161286, -0.7983945, -0.8604026), (0.9737231, -0.88901067, -0.5434268), (0.95468104, -0.9136193, -0.7975819), (0.9635684, -0.88686585, -0.8587087), (0.93810683, -0.93810683, -0.5432682), (0.9136192, -0.95468104, -0.7975819), (0.9317182, -0.9317181, -0.8573838), (0.973723, -0.54342693, -0.8890107), (0.9635684, -0.85870874, -0.8868658), (0.954681, -0.797582, -0.9136192), (0.9411091, -0.9072393, -0.8827259), (0.9411091, -0.88272595, -0.9072394), (0.9072394, -0.9411092, -0.88272583), (0.9194134, -0.9194134, -0.901694), (0.7987062, -0.99285316, -0.54361), (0.5436099, -0.99285316, -0.79870623), (0.7983944, -0.98161286, -0.8604025), (0.8604026, -0.98161286, -0.7983945), (0.54342675, -0.97372305, -0.8890106), (0.7975819, -0.954681, -0.9136191), (0.85870886, -0.96356833, -0.8868658), (0.5432682, -0.9381069, -0.9381069), (0.79758185, -0.9136192, -0.954681), (0.8573837, -0.9317182, -0.9317182), (0.8890107, -0.973723, -0.54342693), (0.8868658, -0.9635684, -0.85870874), (0.88272595, -0.9411091, -0.9072393), (0.8827259, -0.9072394, -0.9411092), (0.901694, -0.9194134, -0.9194134), (0.54361, -0.7987062, -0.99285316), (0.79870623, -0.5436099, -0.99285316), (0.8604025, -0.7983943, -0.98161286), (0.7983945, -0.8604026, -0.98161286), (0.88901067, -0.5434268, -0.9737231), (0.9136193, -0.7975819, -0.95468104), (0.88686585, -0.8587087, -0.9635684), (0.93810683, -0.5432682, -0.93810683), (0.9317181, -0.8573838, -0.9317182), (0.54342693, -0.8890107, -0.973723), (0.85870874, -0.8868658, -0.9635684), (0.9072393, -0.8827259, -0.9411091), (0.9194134, -0.901694, -0.9194134), (-0.54361, 0.99285316, 0.7987062), (-0.79870623, 0.99285316, 0.5436099), (-0.8604025, 0.98161286, 0.7983943), (-0.7983945, 0.98161286, 0.8604026), (-0.88901067, 0.9737231, 0.5434268), (-0.9136193, 0.95468104, 0.7975819), (-0.88686585, 0.9635684, 0.8587087), (-0.93810683, 0.93810683, 0.5432682), (-0.95468104, 0.9136192, 0.7975819), (-0.9317181, 0.9317182, 0.8573838), (-0.54342693, 0.973723, 0.8890107), (-0.85870874, 0.9635684, 0.8868658), (-0.797582, 0.954681, 0.9136192), (-0.9072393, 0.9411091, 0.8827259), (-0.88272595, 0.9411091, 0.9072394), (-0.9411092, 0.9072394, 0.88272583), (-0.9194134, 0.9194134, 0.901694), (-0.99285316, 0.7987062, 0.54361), (-0.99285316, 0.5436099, 0.79870623), (-0.98161286, 0.7983944, 0.8604025), (-0.98161286, 0.8604026, 0.7983945), (-0.9737231, 0.5434268, 0.88901067), (-0.95468104, 0.7975819, 0.9136193), (-0.9635684, 0.85870874, 0.88686585), (-0.93810683, 0.5432682, 0.93810683), (-0.91361916, 0.79758185, 0.9546809), (-0.9317182, 0.8573838, 0.9317181), (-0.973723, 0.8890107, 0.54342693), (-0.9635684, 0.8868658, 0.85870874), (-0.9411091, 0.88272595, 0.9072393), (-0.9072394, 0.8827259, 0.9411092), (-0.9194134, 0.901694, 0.9194134), (-0.7987062, 0.54361, 0.99285316), (-0.5436099, 0.79870623, 0.99285316), (-0.7983943, 0.8604025, 0.98161286), (-0.8604026, 0.7983945, 0.98161286), (-0.54342675, 0.8890106, 0.97372305), (-0.7975819, 0.9136191, 0.954681), (-0.8587087, 0.8868658, 0.96356833), (-0.5432682, 0.9381069, 0.9381069), (-0.8573837, 0.9317182, 0.9317182), (-0.8890106, 0.54342675, 0.97372305), (-0.8868658, 0.8587088, 0.9635684), (-0.8827259, 0.9072393, 0.9411091), (-0.901694, 0.9194134, 0.9194134), (-0.99285316, 0.54361, -0.7987062), (-0.99285316, 0.79870623, -0.5436099), (-0.98161286, 0.8604025, -0.7983943), (-0.98161286, 0.7983945, -0.8604026), (-0.9737231, 0.88901067, -0.5434268), (-0.95468104, 0.9136193, -0.7975819), (-0.9635684, 0.88686585, -0.8587087), (-0.93810683, 0.93810683, -0.5432682), (-0.9136192, 0.95468104, -0.7975819), (-0.9317182, 0.9317181, -0.8573838), (-0.97372305, 0.54342675, -0.8890106), (-0.9635684, 0.8587088, -0.8868658), (-0.9546809, 0.7975818, -0.9136191), (-0.9411091, 0.9072393, -0.8827259), (-0.9411091, 0.88272595, -0.9072394), (-0.9072394, 0.9411092, -0.88272583), (-0.9194134, 0.9194134, -0.901694), (-0.7987062, 0.99285316, -0.54361), (-0.5436099, 0.99285316, -0.79870623), (-0.7983944, 0.98161286, -0.8604025), (-0.8604026, 0.98161286, -0.7983945), (-0.54342675, 0.97372305, -0.8890106), (-0.7975819, 0.954681, -0.9136191), (-0.85870886, 0.96356833, -0.8868658), (-0.5432682, 0.9381069, -0.9381069), (-0.79758185, 0.9136192, -0.954681), (-0.8573837, 0.9317182, -0.9317182), (-0.8890107, 0.973723, -0.54342693), (-0.8868658, 0.9635684, -0.85870874), (-0.88272595, 0.9411091, -0.9072393), (-0.88272583, 0.9072395, -0.9411092), (-0.901694, 0.9194134, -0.91941345), (-0.54361, 0.7987062, -0.99285316), (-0.79870623, 0.5436099, -0.99285316), (-0.8604025, 0.7983943, -0.98161286), (-0.7983945, 0.8604026, -0.98161286), (-0.88901067, 0.5434268, -0.9737231), (-0.9136193, 0.7975819, -0.95468104), (-0.88686585, 0.8587087, -0.9635684), (-0.93810683, 0.5432682, -0.93810683), (-0.9317181, 0.8573838, -0.9317182), (-0.54342693, 0.8890107, -0.973723), (-0.85870874, 0.8868658, -0.9635684), (-0.9072395, 0.88272583, -0.9411092), (-0.9194134, 0.901694, -0.9194134), (-0.99285316, -0.54361, 0.7987062), (-0.99285316, -0.79870623, 0.5436099), (-0.98161286, -0.8604025, 0.7983943), (-0.98161286, -0.7983945, 0.8604026), (-0.9737231, -0.88901067, 0.5434268), (-0.95468104, -0.9136193, 0.7975819), (-0.9635684, -0.88686585, 0.8587087), (-0.93810683, -0.93810683, 0.5432682), (-0.91361916, -0.9546809, 0.79758185), (-0.9317182, -0.9317181, 0.8573838), (-0.973723, -0.54342693, 0.8890107), (-0.9635684, -0.85870874, 0.8868658), (-0.954681, -0.797582, 0.9136192), (-0.9411092, -0.9072395, 0.88272583), (-0.9411092, -0.88272583, 0.9072395), (-0.9072394, -0.9411092, 0.88272583), (-0.9194134, -0.9194134, 0.901694), (-0.7987062, -0.99285316, 0.54361), (-0.5436099, -0.99285316, 0.79870623), (-0.7983944, -0.98161286, 0.8604025), (-0.8604026, -0.98161286, 0.7983945), (-0.5434268, -0.9737231, 0.88901067), (-0.7975819, -0.95468104, 0.9136193), (-0.85870874, -0.9635684, 0.88686585), (-0.5432682, -0.93810683, 0.93810683), (-0.79758185, -0.91361916, 0.9546809), (-0.8573838, -0.9317182, 0.9317181), (-0.8890106, -0.97372305, 0.54342675), (-0.8868658, -0.9635684, 0.8587088), (-0.88272595, -0.9411091, 0.9072393), (-0.8827259, -0.9072394, 0.9411092), (-0.901694, -0.9194134, 0.9194134), (-0.54361, -0.7987062, 0.99285316), (-0.79870623, -0.5436099, 0.99285316), (-0.8604025, -0.7983943, 0.98161286), (-0.7983945, -0.8604026, 0.98161286), (-0.8890106, -0.54342675, 0.97372305), (-0.9136191, -0.7975819, 0.954681), (-0.8868658, -0.8587087, 0.96356833), (-0.9381069, -0.5432682, 0.9381069), (-0.9317182, -0.8573837, 0.9317182), (-0.54342675, -0.8890106, 0.97372305), (-0.8587088, -0.8868658, 0.9635684), (-0.9072393, -0.8827259, 0.9411091), (-0.91941345, -0.901694, 0.9194134), (-0.7987062, -0.54361, -0.99285316), (-0.5436099, -0.79870623, -0.99285316), (-0.7983943, -0.8604025, -0.98161286), (-0.8604026, -0.7983945, -0.98161286), (-0.5434268, -0.88901067, -0.9737231), (-0.7975819, -0.9136193, -0.95468104), (-0.8587087, -0.88686585, -0.9635684), (-0.5432682, -0.93810683, -0.93810683), (-0.79758185, -0.9546809, -0.91361916), (-0.8573838, -0.9317181, -0.9317182), (-0.8890107, -0.54342693, -0.973723), (-0.8868658, -0.85870874, -0.9635684), (-0.9136192, -0.797582, -0.954681), (-0.88272583, -0.9072395, -0.9411092), (-0.9072395, -0.88272583, -0.9411092), (-0.88272583, -0.9411092, -0.9072394), (-0.901694, -0.9194134, -0.9194134), (-0.54361, -0.99285316, -0.7987062), (-0.79870623, -0.99285316, -0.5436099), (-0.8604025, -0.98161286, -0.7983944), (-0.7983945, -0.98161286, -0.8604026), (-0.8890106, -0.97372305, -0.54342675), (-0.9136191, -0.954681, -0.7975819), (-0.8868658, -0.96356833, -0.85870886), (-0.9381069, -0.9381069, -0.5432682), (-0.954681, -0.9136192, -0.79758185), (-0.9317182, -0.9317182, -0.8573837), (-0.54342675, -0.97372305, -0.8890106), (-0.8587088, -0.9635684, -0.8868658), (-0.9072393, -0.9411091, -0.88272595), (-0.9411092, -0.9072394, -0.8827259), (-0.9194134, -0.9194134, -0.901694), (-0.99285316, -0.7987062, -0.54361), (-0.99285316, -0.5436099, -0.79870623), (-0.98161286, -0.7983943, -0.8604025), (-0.98161286, -0.8604026, -0.7983945), (-0.97372305, -0.54342675, -0.8890106), (-0.954681, -0.7975819, -0.9136191), (-0.96356833, -0.8587087, -0.8868658), (-0.9381069, -0.5432682, -0.9381069), (-0.9317182, -0.8573837, -0.9317182), (-0.973723, -0.8890107, -0.54342693), (-0.9635684, -0.8868658, -0.85870874), (-0.9411091, -0.8827259, -0.9072393), (-0.9194134, -0.901694, -0.91941345), (-0.54363436, -2.3515895e-8, -0.99795735), (-0.8607715, 8.8475645e-9, -0.9866954), (-0.9154795, 9.080395e-9, -0.9588285), (-0.95882833, -1.0244548e-8, -0.91547936), (-0.98669547, 0, -0.8607715), (-0.99795735, 2.3515895e-8, -0.54363436), (-6.9849193e-10, 0.5436344, -0.99795735), (8.8475645e-9, 0.8607715, -0.9866954), (8.8475645e-9, 0.9154795, -0.9588285), (-1.1175871e-8, 0.95882833, -0.91547936), (0, 0.98669547, -0.8607715), (6.9849193e-10, 0.99795735, -0.5436344), (0.99795735, 0.5436344, -6.9849193e-10), (0.9866954, 0.8607715, 8.8475645e-9), (0.9588285, 0.9154795, 8.8475645e-9), (0.91547936, 0.9588285, 2.7939677e-9), (0.8607715, 0.9866954, 8.1490725e-9), (0.5436344, 0.99795735, 6.9849193e-10), (-0.5436343, -0.99795735, -2.7939677e-9), (-0.8607715, -0.9866954, -8.8475645e-9), (-0.91547936, -0.9588285, 1.0244548e-8), (-0.95882845, -0.9154794, 0), (-0.9866954, -0.8607715, -8.1490725e-9), (-0.99795735, -0.5436344, -6.9849193e-10), (0.5436344, -0.99795735, -6.9849193e-10), (0.8607715, -0.9866954, 8.8475645e-9), (0.9154795, -0.9588285, 9.080395e-9), (0.9588285, -0.91547936, 2.7939677e-9), (0.9866954, -0.8607715, 8.1490725e-9), (0.99795735, -0.5436343, -2.7939677e-9), (-0.5436343, 0.99795735, 2.7939677e-9), (-0.8607715, 0.9866954, 8.8475645e-9), (-0.9154795, 0.9588285, 9.080395e-9), (-0.9588285, 0.91547936, 2.7939677e-9), (-0.9866954, 0.8607715, 8.1490725e-9), (-0.99795735, 0.5436343, -2.7939677e-9), (2.7939677e-9, -0.5436343, 0.99795735), (8.8475645e-9, -0.8607715, 0.9866954), (-1.0244548e-8, -0.91547936, 0.9588285), (0, -0.95882845, 0.9154794), (8.1490725e-9, -0.9866954, 0.8607715), (-1.5832484e-8, -0.99795735, 0.54363436), (0.54363436, -2.3515895e-8, 0.99795735), (0.8607715, 8.8475645e-9, 0.9866954), (0.9154795, 9.080395e-9, 0.9588285), (0.9588285, 2.7939677e-9, 0.91547936), (0.9866954, 8.1490725e-9, 0.8607715), (0.99795735, -1.5832484e-8, 0.54363436), (-2.7939677e-9, -0.5436343, -0.99795735), (-8.8475645e-9, -0.8607715, -0.9866954), (-8.8475645e-9, -0.9154795, -0.9588285), (1.1175871e-8, -0.95882833, -0.91547936), (0, -0.98669547, -0.8607715), (-2.3515895e-8, -0.99795735, -0.54363436), (-0.54363436, -1.5832484e-8, 0.99795735), (-0.8607715, -8.8475645e-9, 0.9866954), (-0.91547936, 1.0244548e-8, 0.9588285), (-0.95882845, 0, 0.9154794), (-0.9866954, -8.1490725e-9, 0.8607715), (-0.99795735, 1.5832484e-8, 0.54363436), (6.9849193e-10, 0.5436344, 0.99795735), (-8.8475645e-9, 0.8607715, 0.9866954), (1.0244548e-8, 0.91547936, 0.9588285), (0, 0.95882845, 0.9154794), (-8.1490725e-9, 0.9866954, 0.8607715), (-6.9849193e-10, 0.99795735, 0.5436344), (0.54363436, -1.5832484e-8, -0.99795735), (0.8607715, -8.8475645e-9, -0.9866954), (0.9154795, -9.080395e-9, -0.9588285), (0.9588285, -2.7939677e-9, -0.91547936), (0.9866954, -8.1490725e-9, -0.8607715), (0.99795735, -2.3515895e-8, -0.54363436), (2.4447218e-9, -7.1013346e-9, -0.9991834), (-0.9991834, 7.1013346e-9, 2.4447218e-9), (-7.1013346e-9, -0.9991834, 2.4447218e-9), (-2.4447218e-9, -7.1013346e-9, 0.9991834), (0.9991834, -7.1013346e-9, 2.4447218e-9), (0.79862374, 0.98895913, 0.7986238), (0.79797727, 0.9700971, 0.8882922), (0.79743487, 0.9358064, 0.93580633), (0.8882922, 0.970097, 0.7979773), (0.8847072, 0.9537774, 0.8847072), (0.88193786, 0.92585355, 0.9258536), (0.7986238, 0.79862374, 0.98895913), (0.8882922, 0.79797727, 0.9700971), (0.9358064, 0.79743487, 0.9358064), (0.79797727, 0.88829225, 0.970097), (0.8847072, 0.8847072, 0.9537774), (0.9258536, 0.88193786, 0.92585355), (0.98895913, 0.7986238, 0.79862374), (0.9700971, 0.8882922, 0.79797727), (0.9358064, 0.9358064, 0.79743487), (0.970097, 0.7979773, 0.8882922), (0.9537774, 0.8847072, 0.8847072), (0.92585355, 0.9258536, 0.88193786), (0.91418165, 0.9141817, 0.91418165), (0.79862374, 0.7986238, -0.98895913), (0.79797727, 0.8882922, -0.9700971), (0.79743487, 0.93580633, -0.9358064), (0.8882922, 0.7979773, -0.970097), (0.8847072, 0.8847072, -0.9537774), (0.88193786, 0.9258536, -0.92585355), (0.7986238, 0.98895913, -0.79862374), (0.8882922, 0.9700971, -0.79797727), (0.9358064, 0.9358064, -0.79743487), (0.79797727, 0.970097, -0.88829225), (0.8847072, 0.9537774, -0.8847072), (0.9258536, 0.92585355, -0.88193786), (0.98895913, 0.79862374, -0.7986238), (0.9700971, 0.79797727, -0.8882922), (0.9358064, 0.79743487, -0.9358064), (0.970097, 0.8882922, -0.7979773), (0.9537774, 0.8847072, -0.8847072), (0.92585355, 0.88193786, -0.9258536), (0.91418165, 0.91418165, -0.9141817), (0.98895913, -0.79862374, 0.7986238), (0.9700971, -0.79797727, 0.8882922), (0.9358064, -0.79743487, 0.9358064), (0.970097, -0.8882922, 0.7979773), (0.9537774, -0.8847072, 0.8847072), (0.92585355, -0.88193786, 0.9258536), (0.79862374, -0.7986238, 0.98895913), (0.7979772, -0.88829225, 0.97009695), (0.7974349, -0.93580633, 0.9358064), (0.8882922, -0.7979773, 0.970097), (0.8847072, -0.8847072, 0.9537774), (0.88193786, -0.9258536, 0.92585355), (0.7986238, -0.98895913, 0.79862374), (0.8882922, -0.9700971, 0.79797727), (0.9358064, -0.9358064, 0.79743487), (0.7979773, -0.970097, 0.8882922), (0.8847072, -0.9537774, 0.8847072), (0.9258536, -0.92585355, 0.88193786), (0.9141817, -0.91418165, 0.91418165), (0.98895913, -0.7986238, -0.79862374), (0.9700971, -0.8882922, -0.79797727), (0.9358064, -0.9358064, -0.79743487), (0.970097, -0.7979773, -0.8882922), (0.9537774, -0.8847072, -0.8847072), (0.92585355, -0.9258536, -0.88193786), (0.79862374, -0.98895913, -0.7986238), (0.7979772, -0.97009695, -0.88829225), (0.7974349, -0.9358064, -0.93580633), (0.8882922, -0.970097, -0.7979773), (0.8847072, -0.9537774, -0.8847072), (0.88193786, -0.92585355, -0.9258536), (0.7986238, -0.79862374, -0.98895913), (0.8882922, -0.79797727, -0.9700971), (0.9358064, -0.79743487, -0.9358064), (0.7979773, -0.8882922, -0.970097), (0.8847072, -0.8847072, -0.9537774), (0.9258536, -0.88193786, -0.92585355), (0.9141817, -0.91418165, -0.91418165), (-0.7986238, 0.98895913, 0.79862374), (-0.8882922, 0.9700971, 0.79797727), (-0.9358064, 0.9358064, 0.79743487), (-0.7979773, 0.970097, 0.8882922), (-0.8847072, 0.9537774, 0.8847072), (-0.9258536, 0.92585355, 0.88193786), (-0.98895913, 0.79862374, 0.7986238), (-0.9700971, 0.79797727, 0.8882922), (-0.9358064, 0.7974349, 0.93580633), (-0.970097, 0.8882922, 0.7979773), (-0.9537774, 0.8847072, 0.8847072), (-0.92585355, 0.88193786, 0.9258536), (-0.79862374, 0.7986238, 0.98895913), (-0.7979772, 0.88829225, 0.97009695), (-0.7974349, 0.93580633, 0.9358064), (-0.88829225, 0.79797727, 0.970097), (-0.8847072, 0.8847072, 0.9537774), (-0.88193786, 0.9258536, 0.92585355), (-0.91418165, 0.9141817, 0.91418165), (-0.98895913, 0.7986238, -0.79862374), (-0.9700971, 0.8882922, -0.79797727), (-0.9358064, 0.9358064, -0.79743487), (-0.970097, 0.79797727, -0.88829225), (-0.9537774, 0.8847072, -0.8847072), (-0.92585355, 0.9258536, -0.88193786), (-0.79862374, 0.98895913, -0.7986238), (-0.7979772, 0.97009695, -0.88829225), (-0.7974349, 0.9358064, -0.93580633), (-0.8882922, 0.970097, -0.7979773), (-0.8847072, 0.9537774, -0.8847072), (-0.88193786, 0.92585367, -0.9258537), (-0.7986238, 0.79862374, -0.98895913), (-0.8882922, 0.79797727, -0.9700971), (-0.93580633, 0.79743487, -0.9358064), (-0.7979773, 0.8882922, -0.970097), (-0.88470733, 0.88470733, -0.9537774), (-0.9258536, 0.88193786, -0.92585355), (-0.9141817, 0.91418165, -0.91418165), (-0.98895913, -0.7986238, 0.79862374), (-0.9700971, -0.8882922, 0.79797727), (-0.9358064, -0.93580633, 0.79743487), (-0.970097, -0.7979773, 0.8882922), (-0.9537774, -0.88470733, 0.88470733), (-0.92585355, -0.9258536, 0.88193786), (-0.79862374, -0.98895913, 0.7986238), (-0.79797727, -0.9700971, 0.8882922), (-0.7974349, -0.9358064, 0.93580633), (-0.88829225, -0.970097, 0.79797727), (-0.8847072, -0.9537774, 0.8847072), (-0.88193786, -0.92585355, 0.9258536), (-0.7986238, -0.79862374, 0.98895913), (-0.88829225, -0.7979772, 0.97009695), (-0.93580633, -0.7974349, 0.9358064), (-0.79797727, -0.88829225, 0.970097), (-0.8847072, -0.8847072, 0.9537774), (-0.9258537, -0.88193786, 0.92585367), (-0.9141817, -0.91418165, 0.91418165), (-0.79862374, -0.7986238, -0.98895913), (-0.79797727, -0.8882922, -0.9700971), (-0.79743487, -0.93580633, -0.9358064), (-0.8882922, -0.7979773, -0.970097), (-0.88470733, -0.88470733, -0.9537774), (-0.88193786, -0.9258536, -0.92585355), (-0.7986238, -0.98895913, -0.79862374), (-0.88829225, -0.97009695, -0.7979772), (-0.93580633, -0.9358064, -0.7974349), (-0.79797727, -0.970097, -0.88829225), (-0.8847072, -0.9537774, -0.8847072), (-0.9258536, -0.92585355, -0.88193786), (-0.98895913, -0.79862374, -0.7986238), (-0.97009695, -0.7979772, -0.88829225), (-0.9358064, -0.7974349, -0.93580633), (-0.970097, -0.8882922, -0.7979773), (-0.9537774, -0.8847072, -0.8847072), (-0.92585367, -0.88193786, -0.9258537), (-0.91418165, -0.91418165, -0.9141817), (-0.79872787, 2.9685907e-9, -0.9940977), (-0.8892359, 2.9976945e-9, -0.9749014), (-0.9388578, -1.8626451e-9, -0.9388578), (-0.9749013, 0, -0.88923585), (-0.99409753, -2.7066562e-9, -0.79872787), (2.9685907e-9, 0.79872787, -0.9940977), (2.9685907e-9, 0.8892359, -0.9749014), (-1.8626451e-9, 0.9388578, -0.9388578), (0, 0.9749013, -0.88923585), (-2.7066562e-9, 0.99409753, -0.79872787), (0.9940977, 0.79872787, 2.9685907e-9), (0.9749014, 0.8892359, 2.9685907e-9), (0.93885785, 0.93885785, 3.1432137e-9), (0.88923585, 0.9749013, 2.8812792e-9), (0.79872787, 0.99409753, -2.7066562e-9), (-0.79872787, -0.9940977, -2.9685907e-9), (-0.8892358, -0.97490126, -7.450581e-9), (-0.9388578, -0.93885785, 0), (-0.9749013, -0.88923585, -2.8812792e-9), (-0.99409753, -0.79872787, 2.7066562e-9), (0.79872787, -0.9940977, 2.9685907e-9), (0.8892359, -0.9749014, 2.9976945e-9), (0.93885785, -0.93885785, 4.0745363e-9), (0.9749013, -0.88923585, 2.8812792e-9), (0.99409753, -0.79872787, -2.7066562e-9), (-0.79872787, 0.9940977, 2.9685907e-9), (-0.8892359, 0.9749014, 2.9976945e-9), (-0.93885785, 0.93885785, 4.0745363e-9), (-0.9749013, 0.88923585, 2.8812792e-9), (-0.99409753, 0.79872787, -2.7066562e-9), (2.9685907e-9, -0.79872787, 0.9940977), (7.450581e-9, -0.8892358, 0.97490126), (0, -0.9388578, 0.93885785), (2.8812792e-9, -0.9749013, 0.88923585), (-2.7066562e-9, -0.99409753, 0.79872787), (0.79872787, 2.9685907e-9, 0.9940977), (0.8892359, 2.9976945e-9, 0.9749014), (0.93885785, 4.0745363e-9, 0.93885785), (0.9749013, 2.8812792e-9, 0.88923585), (0.99409753, -2.7066562e-9, 0.79872787), (-2.9685907e-9, -0.79872787, -0.9940977), (-2.9685907e-9, -0.8892359, -0.9749014), (1.8626451e-9, -0.9388578, -0.9388578), (0, -0.9749013, -0.88923585), (2.7066562e-9, -0.99409753, -0.79872787), (-0.79872787, -2.9685907e-9, 0.9940977), (-0.8892358, -7.450581e-9, 0.97490126), (-0.9388578, 0, 0.93885785), (-0.9749013, -2.8812792e-9, 0.88923585), (-0.99409753, 2.7066562e-9, 0.79872787), (-2.9685907e-9, 0.79872787, 0.9940977), (-7.450581e-9, 0.8892358, 0.97490126), (0, 0.9388578, 0.93885785), (-2.8812792e-9, 0.9749013, 0.88923585), (2.7066562e-9, 0.99409753, 0.79872787), (0.79872787, -2.9685907e-9, -0.9940977), (0.8892359, -2.9976945e-9, -0.9749014), (0.93885785, -4.0745363e-9, -0.93885785), (0.9749013, -2.8812792e-9, -0.88923585), (0.99409753, 2.7066562e-9, -0.79872787), (7.1013346e-9, 0.9991834, 2.4447218e-9)]
                float3 primvars:random_color = (0.93103945, 0.27602673, 0.9250565)
                float3 primvars:random_intensity = (0.56797326, 0.91950375, 0.4426124)
                float2[] primvars:st = [(0.56795126, 0.5251618), (0.40019813, 0.74999994), (0.6075859, 0.8070567), (0.3179513, 0.5251618), (0.3834383, 0.3750001), (0.56794345, 0.51741415), (0.13479523, 0.692914), (0.1301144, 0.6955821), (0.56792843, 0.4864458), (0.38090658, 0.50000006), (0.38346824, 0.4823547), (0.14964922, 0.5051854), (0.4320489, 0.7751619), (0.37500003, 0.7646865), (0.13633484, 0.5063233), (0.625, 0.017559625), (0.61449754, 0.26370275), (0.15025285, 0.7361487), (0.6198857, 0.94558215), (0.37500003, 0.27127984), (0.5, 0.5), (0.4000185, 0.26363203), (0.35035083, 0.74481463), (0.60372025, 0), (0.40010116, 0.758146), (0.59984106, 0.12500001), (0.3631869, 0.75), (0.39241418, 0.6929435), (0.43209153, 0.25000003), (0.38346824, 0.98320794), (0.36664972, 0.7381869), (0.4320567, 0.23258589), (0.6199083, 0.8750001), (0.3496977, 0.7400996), (0.5000001, 0.75804126), (0.13476187, 0.62500006), (0.6190935, 0.005906568), (0.5, 0.5135301), (0.61034507, 0.0055769538), (0.43204635, 0.057046313), (0.6333004, 0.73382753), (0.60721767, 0.5083004), (0.56791395, 0.7580663), (0.4001618, 0.5570489), (0.56794345, 0.2325859), (0.8506124, 0.7414662), (0.61121106, 0.5176203), (0.37500003, 0.48531368), (0.62500006, 0.50590664), (0.40010113, 0.49185416), (0.36146998, 0.62500006), (0.35733864, 0.73598576), (0.6073387, 0.7362111), (0.61098576, 0.9842134), (0.13543157, 0.7354868), (0.50000006, 0.47484103), (0.38344666, 0.22541857), (0.38863206, 0.72474724), (0.13589005, 0.51089007), (0.6462799, 0.75000006), (0.3750001, 0.51782703), (0.6198857, 0.19558208), (0.75000006, 0.5570458), (0.38344666, 0.27458143), (0.37500003, 0.014686378), (0.60755044, 0.77520084), (0.34979934, 0.73255044), (0.14241412, 0.6929435), (0.56794345, 0.7674142), (0.375, 0.011813134), (0.5996978, 0.5081459), (0.63863206, 0.7249765), (0.3750001, 0.72467935), (0.6112111, 0.73237973), (0.15, 0.5), (0.39995277, 0.025172051), (0.85002476, 0.5157361), (0.39072654, 0.76753), (0.34984097, 0.62500006), (0.43207175, 0.76355433), (0.39068294, 0.8750002), (0.875, 0.525), (0.6075965, 0.3750001), (0.8592736, 0.7339455), (0.37500006, 0.5253207), (0.12500001, 0.5212799), (0.3906853, 0.8070567), (0.39994574, 0.057048786), (0.3999754, 0.48255044), (0.611255, 0.37500003), (0.6793981, 0.5084399), (0.14252993, 0.73247015), (0.43204582, 0.37500006), (0.3890059, 0.735907), (0.6131869, 0.24164972), (0.3205821, 0.74488574), (0.56795126, 0.7751619), (0.56795126, 0.22483829), (0.40002367, 0.486368), (0.60733867, 0.263789), (0.6109857, 0.2676204), (0.13901442, 0.5176614), (0.84999996, 0.75), (0.31795126, 0.7248383), (0.6111487, 0.97498167), (0.59979934, 0.76744974), (0.43204638, 0.30704638), (0.3924542, 0.74169976), (0.4320861, 0.49193373), (0.62500006, 0.7440935), (0.50000006, 0.224841), (0.59979934, 0.9843049), (0.6502008, 0.51569515), (0.3836017, 0.0055506425), (0.3666997, 0.73221767), (0.56794345, 0.017414121), (0.18204574, 0.6250001), (0.1396864, 0.50000006), (0.13951318, 0.7395685), (0.63855433, 0.55707175), (0.18207167, 0.7362298), (0.60372025, 1.0000001), (0.36318687, 0.5118131), (0.36144575, 0.55707175), (0.6112298, 0.8070718), (0.36685416, 0.7246978), (0.50000006, 0.025159035), (0.82060194, 0.5084399), (0.5, 0.7635301), (0.875, 0.7324404), (0.6820458, 0.6250001), (0.8593049, 0.7249839), (0.38350958, 0.2640978), (0.6107085, 0.9914905), (0.4000185, 0.013851343), (0.6502008, 0.734305), (0.39068294, 0.12500001), (0.38314593, 0.52530223), (0.599828, 0.7751721), (0.8537203, 0.50000006), (0.625, 0.23244038), (0.39072648, 0.23247007), (0.61669964, 0.5174542), (0.12500001, 0.62500006), (0.6152382, 0.87500006), (0.56795436, 0.87500006), (0.56795126, 0.97505444), (0.39069515, 0.4747994), (0.40026134, 0.5081459), (0.59979934, 0.2674497), (0.13057697, 0.7353452), (0.13032076, 0.51781094), (0.3631869, 0.5), (0.59969777, 0.49185422), (0.38870275, 0.7412121), (0.6136653, 0.0063232626), (0.50000006, 0.72484106), (0.6131869, 0.48991832), (0.62500006, 0.23531365), (0.56794345, 0.48258594), (0.43204582, 0.6250001), (0.6144858, 0.48542398), (0.625, 0.52519804), (0.3574701, 0.5175299), (0.39117253, 0.49169967), (0.60733867, 0.014014405), (0.39994574, 0.9429514), (0.6198857, 0.80441797), (0.6199083, 0.125), (0.5705821, 0.005114406), (0.8665602, 0.5543981), (0.3926204, 0.513789), (0.50000006, 0.69295436), (0.3906853, 0.94294345), (0.4320567, 0.51741415), (0.6333003, 0.5161725), (0.39069512, 0.77520084), (0.84999996, 0.5), (0.14252993, 0.5175299), (0.85005623, 0.62500006), (0.38359672, 0.4859022), (0.13681313, 0.5), (0.3834383, 0.8750001), (0.3906853, 0.05705663), (0.34982803, 0.72482795), (0.3906853, 0.1929434), (0.50000006, 0.97505623), (0.60755044, 0.7247994), (0.5996978, 0.24185413), (0.6131869, 0.49164972), (0.14266142, 0.7359857), (0.1301854, 0.52464926), (0.13926616, 0.7357339), (0.34974724, 0.7361488), (0.3612111, 0.73233867), (0.599828, 0.27517208), (0.35721773, 0.73989624), (0.60035074, 0.0051853927), (0.39082766, 0.48621112), (0.18204632, 0.5570464), (0.34974718, 0.51385134), (0.5000001, 0.017403578), (0.6152049, 0.30708614), (0.6074701, 0.5175299), (0.36685416, 0.5253023), (0.611255, 0.8750001), (0.50000006, 0.3750001), (0.43209153, 0.7500002), (0.3571891, 0.7446793), (0.59974724, 0.236368), (0.3666997, 0.51778233), (0.38344666, 0.7745815), (0.12500001, 0.51468647), (0.14281097, 0.5053208), (0.5000001, 0.73259646), (0.38306636, 0.692914), (0.61489624, 0.9841557), (0.39084443, 0.010103811), (0.6185868, 0.7622563), (0.50000006, 0.44295436), (0.7500001, 0.7343172), (0.6131869, 0.2399183), (0.8574404, 0.5), (0.6198147, 0.47535086), (0.63855433, 0.69292843), (0.1820488, 0.7248383), (0.36491835, 0.7440935), (0.5, 0.00976186), (0.37500003, 0.47872025), (0.6330663, 0.69291395), (0.38090658, 0.75000006), (0.820602, 0.7415602), (0.13926616, 0.5142662), (0.6107132, 0.48590702), (0.6131869, 0.7600819), (0.36090702, 0.7357132), (0.37500003, 0.87500006), (0.43204635, 0.8070464), (0.5000001, 0.23259647), (0.62500006, 0.62500006), (0.39995277, 0.27517208), (0.34983835, 0.55704886), (0.25000006, 0.62500006), (0.56795377, 0.5570464), (0.361368, 0.52525276), (0.3574404, 0.75), (0.6107132, 0.26400584), (0.1347952, 0.5570861), (0.39938766, 0.9914663), (0.8500474, 0.7250422), (0.59982806, 0.22482798), (0.50000006, 0.12500001), (0.36024722, 0.50559765), (0.8750001, 0.5118132), (0.43204886, 0.7248383), (0.59979934, 0.48255038), (0.599828, 0.525172), (0.43204638, 0.44295377), (0.39069512, 0.27520072), (0.39184648, 0.50000006), (0.31795377, 0.5570464), (0.6074701, 0.76752996), (0.6190935, 0.7600819), (0.38343987, 0.94560206), (0.6495815, 0.7415535), (0.6107132, 0.76409304), (0.37500006, 0.6929086), (0.8590694, 0.74067044), (0.125, 0.7381869), (0.39994574, 0.807049), (0.7500001, 0.75000006), (0.6190935, 0.2399183), (0.6501618, 0.6929513), (0.625, 0.011813134), (0.86656016, 0.6956019), (0.68205667, 0.5156853), (0.8506124, 0.50853384), (0.15, 0.75), (0.38377988, 0.99409354), (0.37500003, 0.37500006), (0.50000006, 0.005091811), (0.6194024, 0.23524716), (0.67939824, 0.74156016), (0.7500001, 0.69295436), (0.61318684, 0.73818684), (0.37500003, 0.9853137), (0.375, 0.275), (0.5998383, 0.807049), (0.38350958, 0.014291601), (0.50000006, 0.7364701), (0.25, 0.74490833), (0.60744035, 0), (0.6109857, 0.76766145), (0.5679284, 0.5135543), (0.62500006, 0.2287202), (0.61712945, 0.007870538), (0.56794345, 0.9843148), (0.37500003, 0.77127993), (0.6, 0), (0.4320489, 0.025161747), (0.13965489, 0.7444231), (0.50000006, 0.24195887), (0.6198147, 0.02464921), (0.3572177, 0.5101038), (0.50000006, 0.4919589), (0.6, 1), (0.39084437, 0.25830036), (0.38346818, 0.76764536), (0.85005444, 0.55704886), (0.5996978, 0.009900476), (0.399944, 0.125), (0.6107338, 0.014266156), (0.6424497, 0.7250248), (0.56791395, 0.7419338), (0.1349005, 0.52530223), (0.13057695, 0.514655), (0.4320567, 0.26741415), (0.6462799, 0.50000006), (0.13510382, 0.73221767), (0.75, 0.5084383), (0.13090658, 0.7440935), (0.4320861, 0.009795208), (0.38376734, 0.51456416), (0.63379025, 0.5094107), (0.25, 0.75000006), (0.61031365, 1.0000001), (0.6103968, 0.75878793), (0.5679284, 0.013770362), (0.61942303, 0.014654891), (0.64264536, 0.5084683), (0.25000003, 0.7402382), (0.63909775, 0.74140334), (0.5679544, 0.37500006), (0.6169337, 0.55708617), (0.39069512, 0.025200715), (0.61509955, 0.22469775), (0.625, 0.48244038), (0.39999998, 0), (0.86656183, 0.625), (0.37500003, 0.7381869), (0.5, 0.26353008), (0.8750001, 0.5212799), (0.38376737, 0.73543584), (0.6198147, 0.97555554), (0.4320567, 0.98431486), (0.599828, 0.02517205), (0.8665319, 0.733208), (0.6196793, 0.9839901), (0.15017205, 0.5251721), (0.5000001, 0.30704573), (0.60755044, 0.5252007), (0.6424497, 0.5249753), (0.6074701, 0.26752996), (0.43208614, 0.7580663), (0.50000006, 0.013745125), (0.40001854, 0.23636802), (0.6145684, 0.014513178), (0.3750001, 0.62500006), (0.56794345, 0.26741412), (0.40019813, 0.50000006), (0.4320861, 0.24193372), (0.56795126, 0.7248383), (0.60733867, 0.76378906), (0.866453, 0.73833036), (0.4320567, 0.01741412), (0.6424142, 0.55705667), (0.8665534, 0.7255253), (0.56795126, 0.025161745), (0.13132326, 0.51133484), (0.39255965, 0), (0.125, 0.51755965), (0.3999754, 0.98426396), (0.17941795, 0.7448857), (0.42939818, 0.9915602), (0.34999996, 0.5), (0.625, 0.23818687), (0.68204886, 0.5249457), (0.56795377, 0.94295377), (0.25000003, 0.7325965), (0.68204886, 0.7250545), (0.38354927, 0.010504819), (0.61318684, 0.48818687), (0.25000006, 0.5251591), (0.1820488, 0.5251618), (0.62500006, 0.55709153), (0.6168542, 0.72473884), (0.6075965, 0.625), (0.43207175, 0.5135544), (0.36144578, 0.6929284), (0.375, 0.48244038), (0.6425596, 0.75), (0.14255962, 0.75), (0.1396864, 0.75000006), (0.38853008, 0.6250001), (0.5, 0.25), (0.6111487, 0.025252854), (0.39072654, 0.26752996), (0.38663226, 0.75000006), (0.6198147, 0.27456206), (0.39255965, 1), (0.40024775, 0.51363206), (0.38330036, 0.5177824), (0.40002364, 0.76363194), (0.6501618, 0.5570489), (0.6104359, 0.5087674), (0.6190935, 1.0000001), (0.875, 0.72499996), (0.43204635, 0.19295372), (0.39184654, 0.75000006), (0.38304117, 0.62500006), (0.35747012, 0.73247015), (0.6112297, 0.44292837), (0.31792837, 0.73622984), (0.43207175, 0.26355428), (0.5679538, 0.30704632), (0.6425596, 0.5), (0.13885134, 0.5252529), (0.37500003, 0.7352996), (0.62500006, 0.021279817), (0.62500006, 0.77127993), (0.43207175, 0.73644584), (0.13589005, 0.73911), (0.65000004, 0.5), (0.4320567, 0.73258597), (0.15017205, 0.724828), (0.1395132, 0.5104316), (0.59969777, 0.7418542), (0.3868131, 0.5118131), (0.37500006, 0.51470035), (0.8593049, 0.5250163), (0.14627983, 0.75000006), (0.5, 0.75000006), (0.39994574, 0.3070488), (0.5679085, 0.50000006), (0.62500006, 0.7646865), (0.3906853, 0.3070567), (0.1301144, 0.5544179), (0.375, 0.98244035), (0.13287054, 0.7421295), (0.34979934, 0.5174497), (0.8750001, 0.73818696), (0.56795126, 0.47483832), (0.375, 0.23244038), (0.36491835, 0.51181316), (0.5997472, 0.013851341), (0.39072654, 0.017529938), (0.81795436, 0.6250001), (0.5996978, 0.758146), (0.38863203, 0.5252529), (0.6194024, 0.48524716), (0.36491835, 0.50590664), (0.38343984, 0.8043982), (0.62500006, 0.7331536), (0.3669337, 0.69291395), (0.38306633, 0.5570861), (0.63379025, 0.74058944), (0.6331459, 0.525101), (0.13885134, 0.72474724), (0.59982806, 0.47482803), (0.5998383, 0.057048783), (0.6501721, 0.5249527), (0.56795436, 0.12500001), (0.6111487, 0.77525294), (0.62500006, 0.48531368), (0.56795377, 0.1929537), (0.8593171, 0.62500006), (0.37500003, 0.2646864), (0.13877037, 0.69292843), (0.6152049, 0.057086103), (0.15030229, 0.7400996), (0.6103968, 0.25876734), (0.6111487, 0.22474717), (0.1424036, 0.6250001), (0.6198857, 0.054417938), (0.50000006, 0.9843171), (0.39084437, 0.24169967), (0.25000006, 0.72484094), (0.81794345, 0.51568526), (0.4320489, 0.27516177), (0.40006006, 0.009900478), (0.3835472, 0.98833036), (0.625, 0.5168465), (0.6424036, 0.6250001), (0.25000006, 0.69295436), (0.8574404, 0.75), (0.625, 0.225), (0.36695886, 0.62500006), (0.3909307, 0.9906705), (0.6330663, 0.5570861), (0.875, 0.51755965), (0.38354927, 0.25879022), (0.6103968, 0.24121217), (0.125, 0.7324404), (0.8179513, 0.7250545), (0.36274385, 0.7435868), (0.6198147, 0.22535081), (0.5679284, 0.26355425), (0.8665534, 0.5244748), (0.35718912, 0.5053208), (0.37500003, 0.021279814), (0.633146, 0.7248991), (0.57060194, 0.9915602), (0.14281097, 0.7446793), (0.6170542, 0.23926954), (0.1300918, 0.625), (0.6152048, 0.94291395), (0.3642695, 0.74205416), (0.610907, 0.7359941), (0.63909775, 0.5085968), (0.5000001, 0.77515906), (0.61029965, 0.50000006), (0.6131869, 0.7583505), (0.375, 0.025000006), (0.56791395, 0.24193372), (0.60755044, 0.22479929), (0.61318684, 0.26181313), (0.5998383, 0.9429513), (0.3866322, 0.5), (0.56791395, 0.009795206), (0.61031365, 0), (0.38441065, 0.4912098), (0.50000006, 0.19295432), (0.43204886, 0.22483829), (0.37500003, 0.23531365), (0.14627983, 0.50000006), (0.3999754, 0.23255035), (0.59967935, 0.75000006), (0.18207167, 0.5137704), (0.6104868, 0.010431563), (0.50000006, 0.7419589), (0.429418, 0.0051144073), (0.50000006, 0.62500006), (0.15025285, 0.51385134), (0.6075965, 0.8750001), (0.61147004, 0.6250001), (0.60717314, 0.25000003), (0.64264536, 0.7415319), (0.81795377, 0.6929538), (0.8179538, 0.5570464), (0.35755035, 0.5252007), (0.17941794, 0.50511444), (0.6131869, 0.75000006), (0.37500006, 0), (0.43204582, 0.12500001), (0.50000006, 0.48647007), (0.6495815, 0.5084467), (0.13018541, 0.7253509), (0.6424142, 0.6929435), (0.43208614, 0.50806636), (0.39994574, 0.19295125), (0.36042404, 0.73948586), (0.62500006, 0.47872025), (0.6152382, 0.125), (0.5000001, 0.51740366), (0.25000006, 0.73625493), (0.37500003, 0.25000003), (0.6196792, 0.76781106), (0.625, 0.48818687), (0.3868131, 0.7381868), (0.6194493, 0.26158264), (0.39086598, 0.25000003), (0.13965489, 0.50557697), (0.625, 0.275), (0.63853, 0.62500006), (0.5998383, 0.55704886), (0.43204635, 0.9429538), (0.61318684, 0), (0.56795126, 0.27516174), (0.3750001, 0.732173), (0.61410993, 0.010890038), (0.39994574, 0.4429513), (0.4320861, 0.7419337), (0.8500248, 0.73426396), (0.43204886, 0.9750545), (0.6103968, 0.4912122), (0.38344666, 0.47541866), (0.6114458, 0.6929284), (0.6368131, 0.75), (0.18208611, 0.7402048), (0.38346818, 0.26764533), (0.38377988, 0), (0.5997472, 0.263632), (0.56794345, 0.73258597), (0.50000006, 0.8070459), (0.39241418, 0.55705667), (0.64252996, 0.7342737), (0.13877037, 0.55707175), (0.60744035, 1), (0.50000006, 1.0000001), (0.85906935, 0.5093296), (0.5000001, 0.7674036), (0.6185868, 0.23774384), (0.59979934, 0.5174497), (0.6114458, 0.55707175), (0.6190935, 0.2559066), (0.86653197, 0.5167922), (0.6075965, 0.12500001), (0.36621222, 0.73539686), (0.25000003, 0.50976187), (0.14266144, 0.51401436), (0.62500006, 0.25000003), (0.25000006, 0.5570458), (0.39072648, 0.9839454), (0.6111487, 0.27524772), (0.375, 0.23818687), (0.60755044, 0.025200712), (0.375, 0.48818687), (0.59982806, 0.72482795), (0.39069515, 0.2247993), (0.35755035, 0.7247994), (0.5998383, 0.19295125), (0.85005444, 0.6929513), (0.34969774, 0.5099005), (0.6074701, 0.23247008), (0.62500006, 0.97872025), (0.39068294, 0.37500006), (0.375, 0.26755962), (0.62500006, 0.87500006), (0.62499994, 0.5116322), (0.6150996, 0.025302274), (0.38855433, 0.69292843), (0.39999998, 1), (0.25000003, 0.5137451), (0.6075859, 0.5570566), (0.625, 0.975), (0.31794342, 0.73258597), (0.12500001, 0.7287203), (0.625, 0.475), (0.39262047, 0.7362111), (0.8179513, 0.52494574), (0.6196792, 0.26694962), (0.14241414, 0.55705667), (0.39997536, 0.017449684), (0.38870275, 0.50878793), (0.39082763, 0.76378894), (0.32058212, 0.50511444), (0.40006015, 0.25814593), (0.13510382, 0.5177824), (0.6198857, 0.4455821), (0.38359675, 0.7640979), (0.5679085, 0.25000003), (0.31791392, 0.7402049), (0.7500001, 0.50000006), (0.62500006, 1.0000001), (0.625, 0.76181316), (0.60755044, 0.97502476), (0.13681313, 0.75), (0.40007555, 0.25), (0.61029965, 0.74999994), (0.38343987, 0.1956019), (0.15015906, 0.62500006), (0.5000001, 0.2580412), (0.61520475, 0.44291392), (0.625, 0.72480196), (0.13490048, 0.72469777), (0.36024722, 0.7444024), (0.5998383, 0.6929513), (0.6196793, 0.48218906), (0.62500006, 0.73836786), (0.60721767, 0.24169967), (0.60755044, 0.47479934), (0.6075859, 0.057056624), (0.399944, 0.37500006), (0.375, 0.76755965), (0.6368131, 0.5), (0.3179284, 0.5137704), (0.13090658, 0.50590664), (0.6075859, 0.6929434), (0.39995277, 0.7751721), (0.5000001, 0.5251591), (0.81794345, 0.73431486), (0.37500006, 0.98818696), (0.125, 0.51181316), (0.39078665, 0.23621105), (0.37500003, 0.005906568), (0.7500002, 0.7250561), (0.56791395, 0.50806636), (0.1424497, 0.5252008), (0.39995277, 0.22482798), (0.50000006, 0.23647001), (0.3924542, 0.5083003), (0.6073547, 0.9915319), (0.68204635, 0.6929538), (0.6820464, 0.5570464), (0.6131869, 0.50000006), (0.50000006, 0.99156183), (0.18205664, 0.73258597), (0.6152382, 0.375), (0.59979934, 0.73255044), (0.61098576, 0.2323386), (0.399944, 0.8750002), (0.61090696, 0.51400584), (0.38878903, 0.73233867), (0.18204632, 0.6929538), (0.375, 0.775), (0.56792843, 0.23644577), (0.43204582, 0.87500006), (0.56795377, 0.44295377), (0.50000006, 0.5570458), (0.638789, 0.73417246), (0.6144858, 0.7645761), (0.43209153, 0.5), (0.125, 0.72499996), (0.6072177, 0.49169967), (0.38343987, 0.44560194), (0.34983832, 0.6929513), (0.8664529, 0.51166964), (0.13132328, 0.7386652), (0.7500002, 0.62500006), (0.61685413, 0.5252612), (0.36318687, 0.73818684), (0.59984106, 0.87500006), (0.6148962, 0.48221767), (0.63968647, 0.50000006), (0.6109857, 0.017661413), (0.38314593, 0.72469777), (0.5998383, 0.30704883), (0.61705416, 0.48926955), (0.13287055, 0.5078706), (0.36090702, 0.5142868), (0.6185868, 0.48774385), (0.8592736, 0.5160546), (0.61318684, 0.7618131), (0.59967935, 0.5000001), (0.6072177, 0.74169976), (0.361368, 0.7247472), (0.85931486, 0.6929434), (0.6194024, 0.76475286), (0.61489624, 0.2674542), (0.5000001, 0.2674036), (0.59974724, 0.48636803), (0.375, 0.225), (0.3603137, 0.50000006), (0.375, 0.475), (0.61695886, 0.62500006), (0.4001591, 0.6250001), (0.50000006, 0.94295436), (0.39072648, 0.4824701), (0.375, 0.26181313), (0.56795377, 0.057046313), (0.85004747, 0.5249578), (0.3833004, 0.7322177), (0.56792843, 0.7364459), (0.43207175, 0.23644578), (0.60041857, 0.9915534), (0.15020071, 0.7325505), (0.50000006, 0.8750001), (0.6148962, 0.7677824), (0.6162122, 0.7362973), (0.39995277, 0.474828), (0.3669337, 0.55708605), (0.6150996, 0.77530235), (0.38441065, 0.7587904), (0.3573386, 0.5140144), (0.18205664, 0.51741415), (0.43204635, 0.6929538), (0.62500006, 0.37500006), (0.56795436, 0.6250001), (0.86622024, 0.50590664), (0.37500003, 0.12500001), (0.60721767, 0.010103811), (0.13901442, 0.73233867), (0.15020072, 0.51744974), (0.6109857, 0.48233864), (0.6112297, 0.94292843), (0.59984106, 0.6250001), (0.14278235, 0.73989624), (0.6144858, 0.23542398), (0.61489624, 0.23221767), (0.3906853, 0.44294342), (0.625, 0.98244035), (0.59974724, 0.73636806), (0.38356405, 0.25000003), (0.38344666, 0.9755254), (0.37500003, 0.97872025), (0.35372022, 0.75000006), (0.64252996, 0.5157265), (0.59979934, 0.017449683), (0.5000001, 0.27515906), (0.61669964, 0.7325458), (0.61449516, 0.9914508), (0.1496492, 0.74481463), (0.6112298, 0.057071656), (0.625, 0.025000006), (0.8750001, 0.62500006), (0.50000006, 0), (0.6112297, 0.19292836), (0.86622024, 0.7440935), (0.360424, 0.51051426), (0.6501721, 0.7250474), (0.39627984, 0), (0.61136806, 0.7247523), (0.375, 0.76181316), (0.63968647, 0.75000006), (0.6074701, 0.9842736), (0.13543157, 0.5145132), (0.56791395, 0.25806633), (0.63304126, 0.62500006), (0.31795436, 0.6250001), (0.3603137, 0.75000006), (0.85931486, 0.5570566), (0.611255, 0.12500001), (0.39244977, 0.7247994), (0.60721767, 0.25830033), (0.43204886, 0.47483832), (0.37500003, 0.55709153), (0.40026134, 0.74185425), (0.6152048, 0.1929139), (0.8750001, 0.7353137), (0.62500006, 0.014686381), (0.56795377, 0.8070464), (0.13874513, 0.62500006), (0.5000001, 0.48259652), (0.50000006, 0.057045724), (0.31795377, 0.6929538), (0.59982806, 0.9750474), (0.5998383, 0.4429513), (0.8537203, 0.75000006), (0.60721767, 0.7583004), (0.388789, 0.5176614), (0.5000001, 0.5080412), (0.56795377, 0.6929538), (0.68205667, 0.73431486), (0.3834383, 0.12500001), (0.56791395, 0.4919337), (0.39244974, 0.5252008), (0.38346824, 0.23235469), (0.39078662, 0.26378897), (0.6073387, 0.23621106), (0.3574404, 0.5), (0.25000003, 0.51740366), (0.38350952, 0.23590223), (0.61318684, 1), (0.39995277, 0.9750423), (0.39069515, 0.9749838), (0.60755044, 0.27520072), (0.6107132, 0.23590705), (0.3612111, 0.51766133), (0.61509955, 0.97494), (0.1363348, 0.7436767), (0.35759652, 0.62500006), (0.39117256, 0.7583004), (0.36664975, 0.51181316), (0.6073387, 0.48621112), (0.40006015, 0.24185415), (0.8750001, 0.7287203), (0.34999996, 0.75), (0.39627984, 1.0000001), (0.61489624, 0.017782347), (0.6196793, 0.23218906), (0.39252996, 0.73247015), (0.6075859, 0.4429434), (0.6075859, 0.30705664), (0.5997472, 0.513632), (0.5996978, 0.25814593), (0.37500003, 0.2287202), (0.65000004, 0.75), (0.15016177, 0.5570489), (0.6186768, 0.011334811), (0.6194494, 0.99139845), (0.4320567, 0.7674142), (0.43207175, 0.013770364), (0.6196792, 0.017810965), (0.65015906, 0.62500006), (0.3575859, 0.5570566), (0.5997472, 0.763632), (0.6074701, 0.4824701), (0.3662122, 0.51460326), (0.40020078, 0.51744974), (0.6150996, 0.2752613), (0.37500003, 0.51181316), (0.59967935, 0.24999999), (0.38346818, 0.017645337), (0.39078662, 0.014014407), (0.39240363, 0.62500006), (0.638789, 0.5158276), (0.60717314, 0.7500001), (0.62500006, 0.6929086), (0.5679085, 0.7500001), (0.18208611, 0.5097952), (0.6111487, 0.4747472), (0.62500006, 0.9912203), (0.6131869, 0.25000003), (0.62500006, 0.25877985), (0.25, 0.50000006), (0.35372022, 0.50000006), (0.3503509, 0.5051854), (0.3575859, 0.6929434), (0.6198147, 0.7746493), (0.6104359, 0.7412327), (0.625, 0.26755965), (0.39101008, 0.0053207725), (0.7500001, 0.52494395), (0.60733867, 0.513789), (0.12500001, 0.7353137), (0.6162121, 0.5137028), (0.3994446, 0.0051853945), (0.38343984, 0.30439812), (0.6169337, 0.69291395), (0.6112298, 0.3070717), (0.6071891, 0.0053207716), (0.13032079, 0.7321891), (0.61318684, 0.5118131), (0.625, 0.775), (0.625, 0.76755965), (0.611368, 0.52524763), (0.40017205, 0.5251721), (0.6075859, 0.19294338), (0.38900587, 0.514093), (0.4002008, 0.7325505), (0.15016177, 0.6929513), (0.5679284, 0.7635544), (0.375, 0.017559618), (0.7500002, 0.51568294), (0.4320489, 0.5251618), (0.38344666, 0.024581421), (0.40024775, 0.73636806), (0.36274388, 0.50641334), (0.638632, 0.5250236), (0.36491835, 0.7381869), (0.43208614, 0.25806633), (0.6198857, 0.30441797), (0.61509955, 0.47469777), (0.40017205, 0.724828), (0.59979934, 0.23255034), (0.3885543, 0.55707175), (0.61029965, 0.25), (0.31794345, 0.51741415), (0.15030229, 0.5099005), (0.62500006, 0.12500001), (0.6152048, 0.8070861), (0.38343984, 0.054398112), (0.39252996, 0.5175299), (0.39997536, 0.76744974), (0.6074701, 0.73247015), (0.61318684, 0.23818687), (0.62500006, 0.27127987), (0.6074701, 0.017529937), (0.14244969, 0.7247994), (0.36426955, 0.5079459), (0.14255962, 0.5), (0.6075859, 0.9429434), (0.125, 0.525), (0.25, 0.50509185), (0.34982798, 0.525172), (0.75000006, 0.74156183), (0.8750001, 0.51468647), (0.38354924, 0.2412098), (0.4320567, 0.48258597), (0.6170542, 0.76073056), (0.39997536, 0.2674497), (0.6199083, 0.37500003), (0.6190935, 0.48991832), (0.59984106, 0.37500003), (0.31791392, 0.5097952), (0.14278236, 0.5101038), (0.43207175, 0.4864458), (0.4001618, 0.6929513), (0.43204635, 0.5570464), (0.375, 0.975), (0.60717314, 0.5000001)] (
                    interpolation = "faceVarying"
                )
                int[] primvars:st:indices = [199, 601, 242, 116, 601, 260, 798, 242, 242, 798, 814, 483, 116, 242, 483, 693, 39, 813, 251, 543, 813, 739, 461, 251, 251, 461, 464, 521, 543, 251, 521, 407, 237, 583, 746, 696, 583, 810, 145, 746, 746, 145, 377, 736, 696, 746, 736, 565, 683, 62, 708, 130, 62, 538, 446, 708, 708, 446, 537, 283, 130, 708, 283, 682, 958, 698, 531, 160, 698, 243, 757, 531, 531, 757, 821, 172, 160, 531, 172, 755, 697, 816, 458, 441, 816, 851, 660, 458, 458, 660, 866, 255, 441, 458, 255, 159, 851, 411, 880, 660, 411, 652, 922, 880, 880, 922, 712, 763, 660, 880, 763, 866, 652, 638, 223, 922, 638, 627, 551, 223, 223, 551, 336, 657, 922, 223, 657, 712, 159, 255, 730, 8, 255, 866, 843, 730, 730, 843, 703, 153, 8, 730, 153, 824, 866, 763, 233, 843, 763, 712, 161, 233, 233, 161, 381, 574, 843, 233, 574, 703, 712, 657, 449, 161, 657, 336, 463, 449, 449, 463, 557, 720, 161, 449, 720, 381, 683, 403, 460, 376, 403, 365, 351, 460, 460, 351, 776, 112, 376, 460, 112, 275, 365, 119, 918, 351, 119, 488, 456, 918, 918, 456, 175, 875, 351, 918, 875, 776, 488, 384, 162, 456, 384, 333, 709, 162, 162, 709, 142, 481, 456, 162, 481, 175, 275, 112, 545, 90, 112, 776, 329, 545, 545, 329, 415, 317, 90, 545, 317, 422, 776, 875, 508, 329, 875, 175, 323, 508, 508, 323, 664, 713, 329, 508, 713, 415, 175, 481, 618, 323, 481, 142, 895, 618, 618, 895, 902, 48, 323, 618, 48, 664, 243, 0, 256, 564, 0, 5, 592, 256, 256, 592, 203, 350, 564, 256, 350, 623, 5, 293, 853, 592, 293, 676, 70, 853, 853, 70, 41, 893, 592, 853, 893, 203, 676, 433, 723, 70, 433, 824, 153, 723, 723, 153, 703, 960, 70, 723, 960, 41, 623, 350, 905, 593, 350, 203, 46, 905, 905, 46, 142, 709, 593, 905, 709, 333, 203, 893, 691, 46, 893, 41, 404, 691, 691, 404, 902, 895, 46, 691, 895, 142, 41, 960, 510, 404, 960, 703, 574, 510, 510, 574, 381, 684, 404, 510, 684, 902, 381, 720, 717, 157, 557, 952, 717, 720, 189, 157, 717, 952, 260, 3, 944, 241, 3, 927, 439, 944, 944, 439, 163, 539, 241, 944, 539, 864, 927, 665, 200, 439, 665, 954, 612, 200, 200, 612, 303, 753, 439, 200, 753, 163, 954, 635, 886, 612, 635, 374, 885, 886, 886, 885, 829, 498, 612, 886, 498, 303, 864, 539, 244, 123, 539, 163, 837, 244, 244, 837, 210, 204, 123, 244, 204, 750, 163, 753, 719, 837, 753, 303, 788, 719, 719, 788, 122, 867, 837, 719, 867, 210, 303, 498, 252, 788, 498, 829, 732, 252, 252, 732, 152, 917, 788, 252, 917, 122, 257, 804, 749, 570, 804, 948, 88, 749, 749, 88, 737, 147, 570, 749, 147, 769, 948, 956, 98, 88, 956, 108, 49, 98, 98, 49, 164, 198, 88, 98, 198, 737, 108, 701, 359, 49, 701, 548, 148, 359, 359, 148, 680, 259, 49, 359, 259, 164, 769, 147, 575, 704, 147, 737, 10, 575, 575, 10, 389, 228, 704, 575, 228, 733, 737, 198, 180, 10, 198, 164, 520, 180, 180, 520, 606, 47, 10, 180, 47, 389, 164, 259, 517, 520, 259, 680, 633, 517, 517, 633, 427, 9, 520, 517, 9, 606, 958, 43, 906, 914, 43, 584, 825, 906, 906, 825, 932, 868, 914, 906, 868, 174, 584, 925, 448, 825, 925, 454, 137, 448, 448, 137, 401, 819, 825, 448, 819, 932, 454, 805, 84, 137, 805, 750, 204, 84, 84, 204, 210, 60, 137, 84, 60, 401, 174, 868, 400, 387, 868, 932, 171, 400, 400, 171, 680, 148, 387, 400, 148, 548, 932, 819, 908, 171, 819, 401, 322, 908, 908, 322, 427, 633, 171, 908, 633, 680, 401, 60, 428, 322, 60, 210, 867, 428, 428, 867, 122, 870, 322, 428, 870, 427, 122, 917, 939, 443, 152, 450, 939, 917, 842, 443, 939, 450, 821, 656, 607, 361, 656, 667, 187, 607, 607, 187, 934, 688, 361, 607, 688, 582, 667, 576, 791, 187, 576, 898, 385, 791, 791, 385, 779, 73, 187, 791, 73, 934, 898, 877, 653, 385, 877, 229, 500, 653, 653, 500, 40, 452, 385, 653, 452, 779, 582, 688, 771, 742, 688, 934, 52, 771, 771, 52, 724, 426, 742, 771, 426, 313, 934, 73, 507, 52, 73, 779, 748, 507, 507, 748, 284, 889, 52, 507, 889, 724, 779, 452, 658, 748, 452, 40, 455, 658, 658, 455, 577, 109, 748, 658, 109, 284, 682, 379, 789, 272, 379, 822, 135, 789, 789, 135, 585, 312, 272, 789, 312, 547, 822, 282, 264, 135, 282, 856, 59, 264, 264, 59, 390, 536, 135, 264, 536, 585, 903, 167, 888, 419, 167, 930, 751, 888, 888, 751, 747, 556, 419, 888, 556, 904, 547, 312, 71, 224, 312, 585, 699, 71, 71, 699, 40, 500, 224, 71, 500, 229, 585, 536, 331, 699, 536, 390, 793, 331, 331, 793, 577, 455, 699, 331, 455, 40, 904, 556, 727, 434, 556, 747, 700, 727, 727, 700, 722, 218, 434, 727, 218, 644, 810, 96, 138, 287, 96, 68, 105, 138, 138, 105, 261, 65, 287, 138, 65, 2, 68, 911, 865, 105, 911, 42, 447, 865, 865, 447, 818, 362, 105, 865, 362, 261, 42, 878, 526, 447, 878, 313, 426, 526, 526, 426, 724, 876, 447, 526, 876, 818, 2, 65, 462, 124, 65, 261, 292, 462, 462, 292, 747, 751, 124, 462, 751, 930, 261, 362, 265, 292, 362, 818, 326, 265, 265, 326, 722, 700, 292, 265, 700, 747, 818, 876, 648, 326, 876, 724, 889, 648, 648, 889, 284, 541, 326, 648, 541, 722, 511, 262, 949, 234, 644, 218, 949, 262, 722, 234, 949, 218, 755, 254, 923, 957, 254, 423, 909, 923, 923, 909, 850, 802, 957, 923, 802, 27, 423, 420, 916, 909, 420, 571, 806, 916, 916, 806, 107, 628, 909, 916, 628, 850, 571, 207, 1, 806, 207, 353, 24, 1, 1, 24, 841, 408, 806, 1, 408, 107, 27, 802, 57, 620, 802, 850, 692, 57, 57, 692, 741, 715, 620, 57, 715, 215, 850, 628, 93, 692, 628, 107, 154, 93, 93, 154, 558, 342, 692, 93, 342, 741, 107, 408, 397, 154, 408, 841, 752, 397, 397, 752, 792, 230, 154, 397, 230, 558, 237, 269, 668, 12, 269, 86, 176, 668, 668, 176, 77, 933, 12, 668, 933, 860, 86, 451, 211, 176, 451, 694, 297, 211, 211, 297, 663, 307, 176, 211, 307, 77, 846, 95, 22, 775, 95, 641, 33, 22, 22, 33, 196, 208, 775, 22, 208, 245, 860, 933, 402, 79, 933, 77, 634, 402, 402, 634, 841, 24, 79, 402, 24, 353, 77, 307, 639, 634, 307, 663, 13, 639, 639, 13, 792, 752, 634, 639, 752, 841, 245, 208, 655, 799, 208, 196, 550, 655, 655, 550, 710, 494, 799, 655, 494, 26, 814, 705, 184, 103, 705, 887, 609, 184, 184, 609, 410, 66, 103, 184, 66, 625, 887, 388, 725, 609, 388, 453, 125, 725, 725, 125, 114, 194, 609, 725, 194, 410, 453, 266, 72, 125, 266, 215, 715, 72, 72, 715, 741, 568, 125, 72, 568, 114, 625, 66, 193, 412, 66, 410, 51, 193, 193, 51, 196, 33, 412, 193, 33, 641, 410, 194, 235, 51, 194, 114, 597, 235, 235, 597, 710, 550, 51, 235, 550, 196, 114, 568, 417, 597, 568, 741, 342, 417, 417, 342, 558, 339, 597, 417, 339, 710, 30, 226, 506, 919, 26, 494, 506, 226, 710, 919, 506, 494, 414, 567, 195, 716, 567, 358, 149, 195, 195, 149, 352, 835, 716, 195, 835, 852, 358, 496, 581, 149, 496, 796, 854, 581, 581, 854, 803, 99, 149, 581, 99, 352, 796, 640, 871, 854, 640, 513, 188, 871, 871, 188, 659, 535, 854, 871, 535, 803, 852, 835, 603, 899, 835, 352, 100, 603, 603, 100, 728, 869, 899, 603, 869, 202, 352, 99, 246, 100, 99, 803, 470, 246, 246, 470, 515, 16, 100, 246, 16, 728, 803, 535, 926, 470, 535, 659, 491, 926, 926, 491, 935, 882, 470, 926, 882, 515, 464, 610, 250, 97, 610, 907, 514, 250, 250, 514, 613, 924, 97, 250, 924, 44, 907, 786, 471, 514, 786, 807, 335, 471, 471, 335, 768, 689, 514, 471, 689, 613, 807, 61, 495, 335, 61, 485, 294, 495, 495, 294, 140, 849, 335, 495, 849, 768, 44, 924, 209, 695, 924, 613, 828, 209, 209, 828, 659, 188, 695, 209, 188, 513, 613, 689, 836, 828, 689, 768, 767, 836, 836, 767, 935, 491, 828, 836, 491, 659, 768, 849, 281, 767, 849, 140, 158, 281, 281, 158, 375, 591, 767, 281, 591, 935, 538, 629, 740, 308, 629, 477, 76, 740, 740, 76, 721, 429, 308, 740, 429, 800, 477, 127, 276, 76, 127, 177, 139, 276, 276, 139, 222, 589, 76, 276, 589, 721, 562, 921, 398, 936, 921, 202, 869, 398, 398, 869, 728, 630, 936, 398, 630, 890, 800, 429, 497, 170, 429, 721, 595, 497, 497, 595, 489, 341, 170, 497, 341, 81, 721, 589, 706, 595, 589, 222, 758, 706, 706, 758, 253, 946, 595, 706, 946, 489, 890, 630, 559, 883, 630, 728, 16, 559, 559, 16, 515, 594, 883, 559, 594, 600, 94, 221, 503, 271, 935, 591, 503, 221, 375, 271, 503, 591, 407, 522, 678, 549, 522, 31, 525, 678, 678, 525, 141, 608, 549, 678, 608, 185, 31, 743, 355, 525, 743, 360, 844, 355, 355, 844, 475, 673, 525, 355, 673, 141, 360, 28, 647, 844, 28, 920, 636, 647, 647, 636, 306, 560, 844, 647, 560, 475, 185, 608, 56, 649, 608, 141, 826, 56, 56, 826, 442, 855, 649, 56, 855, 731, 141, 673, 831, 826, 673, 475, 947, 831, 831, 947, 604, 523, 826, 831, 523, 442, 475, 560, 772, 947, 560, 306, 490, 772, 772, 490, 738, 555, 947, 772, 555, 604, 106, 432, 240, 478, 432, 435, 258, 240, 240, 258, 396, 950, 478, 240, 950, 316, 435, 897, 63, 258, 897, 286, 19, 63, 63, 19, 616, 579, 258, 63, 579, 396, 74, 540, 11, 524, 540, 879, 928, 11, 11, 928, 955, 213, 524, 11, 213, 940, 316, 950, 21, 413, 950, 396, 827, 21, 21, 827, 306, 636, 413, 21, 636, 920, 396, 579, 132, 827, 579, 616, 466, 132, 132, 466, 738, 490, 827, 132, 490, 306, 940, 213, 561, 117, 213, 955, 425, 561, 561, 425, 58, 14, 117, 561, 14, 181, 199, 857, 348, 383, 857, 631, 677, 348, 348, 677, 178, 762, 383, 348, 762, 754, 631, 586, 416, 677, 586, 247, 314, 416, 416, 314, 637, 101, 677, 416, 101, 178, 247, 436, 191, 314, 436, 942, 85, 191, 191, 85, 370, 151, 314, 191, 151, 637, 754, 762, 532, 527, 762, 178, 599, 532, 532, 599, 955, 928, 527, 532, 928, 879, 178, 101, 232, 599, 101, 637, 795, 232, 232, 795, 58, 425, 599, 232, 425, 955, 637, 151, 315, 795, 151, 370, 212, 315, 315, 212, 672, 368, 795, 315, 368, 58, 672, 666, 718, 368, 181, 14, 718, 666, 58, 368, 718, 14, 739, 367, 345, 459, 367, 115, 777, 345, 345, 777, 937, 605, 459, 345, 605, 661, 115, 327, 444, 777, 327, 518, 309, 444, 444, 309, 760, 165, 777, 444, 165, 937, 518, 169, 197, 309, 169, 298, 23, 197, 197, 23, 291, 900, 309, 197, 900, 760, 661, 605, 395, 782, 605, 937, 714, 395, 395, 714, 848, 619, 782, 395, 619, 468, 937, 165, 311, 714, 165, 760, 528, 311, 311, 528, 569, 356, 714, 311, 356, 848, 760, 900, 38, 528, 900, 291, 519, 38, 38, 519, 566, 155, 528, 38, 155, 569, 377, 516, 815, 146, 516, 941, 645, 815, 815, 645, 794, 111, 146, 815, 111, 296, 941, 764, 104, 645, 764, 505, 838, 104, 104, 838, 216, 53, 645, 104, 53, 794, 505, 18, 343, 838, 18, 624, 614, 343, 343, 614, 770, 347, 838, 343, 347, 216, 296, 111, 744, 501, 111, 794, 681, 744, 744, 681, 587, 121, 501, 744, 121, 305, 794, 53, 133, 681, 53, 216, 780, 133, 133, 780, 832, 325, 681, 133, 325, 587, 216, 347, 859, 780, 347, 770, 881, 859, 859, 881, 643, 405, 780, 859, 405, 832, 537, 611, 249, 493, 611, 726, 131, 249, 249, 131, 83, 572, 493, 249, 572, 670, 726, 274, 366, 131, 274, 406, 845, 366, 366, 845, 129, 346, 131, 366, 346, 83, 783, 473, 302, 418, 473, 468, 619, 302, 302, 619, 848, 862, 418, 302, 862, 15, 670, 572, 45, 231, 572, 83, 267, 45, 45, 267, 484, 817, 231, 45, 817, 102, 83, 346, 363, 267, 346, 129, 808, 363, 363, 808, 440, 787, 267, 363, 787, 484, 15, 862, 328, 809, 862, 848, 356, 328, 328, 356, 569, 858, 809, 328, 858, 273, 569, 155, 295, 858, 566, 36, 295, 155, 273, 858, 295, 36, 693, 225, 424, 910, 225, 686, 745, 424, 424, 745, 91, 938, 910, 424, 938, 67, 686, 120, 17, 745, 120, 578, 469, 17, 17, 469, 766, 190, 745, 17, 190, 91, 578, 372, 781, 469, 372, 277, 430, 781, 781, 430, 391, 502, 469, 781, 502, 766, 67, 938, 457, 467, 938, 91, 761, 457, 457, 761, 318, 654, 467, 457, 654, 6, 91, 190, 192, 761, 190, 766, 118, 192, 192, 118, 421, 54, 761, 192, 54, 318, 766, 502, 300, 118, 502, 391, 392, 300, 300, 392, 646, 839, 118, 300, 839, 421, 565, 573, 833, 166, 573, 344, 371, 833, 833, 371, 602, 834, 166, 833, 834, 173, 344, 373, 248, 371, 373, 621, 847, 248, 248, 847, 399, 487, 371, 248, 487, 602, 337, 530, 896, 790, 530, 321, 479, 896, 896, 479, 217, 891, 790, 896, 891, 369, 173, 834, 773, 263, 834, 602, 29, 773, 773, 29, 437, 774, 263, 773, 774, 959, 602, 487, 480, 29, 487, 399, 278, 480, 480, 278, 671, 285, 29, 480, 285, 437, 369, 891, 113, 580, 891, 217, 380, 113, 113, 380, 69, 674, 580, 113, 674, 542, 39, 87, 75, 299, 87, 183, 334, 75, 75, 334, 445, 632, 299, 75, 632, 364, 183, 931, 915, 334, 931, 512, 499, 915, 915, 499, 912, 872, 334, 915, 872, 445, 702, 7, 546, 626, 7, 6, 654, 546, 546, 654, 318, 901, 626, 546, 901, 492, 364, 632, 134, 861, 632, 445, 873, 134, 134, 873, 217, 479, 861, 134, 479, 321, 445, 872, 288, 873, 872, 912, 64, 288, 288, 64, 69, 380, 873, 288, 380, 217, 492, 901, 150, 894, 901, 318, 54, 150, 150, 54, 421, 707, 894, 150, 707, 268, 421, 839, 438, 707, 646, 320, 438, 839, 268, 707, 438, 320, 199, 116, 650, 857, 116, 693, 910, 650, 650, 910, 67, 472, 857, 650, 472, 631, 631, 472, 811, 586, 472, 67, 467, 811, 811, 467, 6, 35, 586, 811, 35, 247, 247, 35, 504, 436, 35, 6, 7, 504, 504, 7, 702, 143, 436, 504, 143, 942, 731, 759, 823, 649, 759, 512, 931, 823, 823, 931, 183, 136, 649, 823, 136, 185, 185, 136, 310, 549, 136, 183, 87, 310, 310, 87, 39, 543, 549, 310, 543, 407, 260, 601, 382, 3, 601, 199, 383, 382, 382, 383, 754, 830, 3, 382, 830, 927, 927, 830, 622, 665, 830, 754, 527, 622, 622, 527, 879, 598, 665, 622, 598, 954, 954, 598, 943, 635, 598, 879, 540, 943, 943, 540, 74, 884, 635, 943, 884, 374, 733, 279, 4, 704, 279, 286, 897, 4, 4, 897, 435, 615, 704, 4, 615, 769, 769, 615, 662, 570, 615, 435, 432, 662, 662, 432, 106, 92, 570, 662, 92, 257, 243, 698, 669, 0, 698, 958, 914, 669, 669, 914, 174, 553, 0, 669, 553, 5, 5, 553, 37, 293, 553, 174, 387, 37, 37, 387, 548, 820, 293, 37, 820, 676, 676, 820, 20, 433, 820, 548, 701, 20, 20, 701, 108, 304, 433, 20, 304, 824, 824, 304, 544, 8, 304, 108, 956, 544, 544, 956, 948, 812, 8, 544, 812, 159, 159, 812, 55, 441, 812, 948, 804, 55, 55, 804, 257, 219, 441, 55, 219, 697, 565, 736, 186, 573, 736, 377, 146, 186, 186, 146, 296, 474, 573, 186, 474, 344, 344, 474, 685, 373, 474, 296, 501, 685, 685, 501, 305, 588, 373, 685, 588, 621, 337, 785, 280, 530, 785, 298, 169, 280, 280, 169, 518, 227, 530, 280, 227, 321, 321, 227, 354, 861, 227, 518, 327, 354, 354, 327, 115, 201, 861, 354, 201, 364, 364, 201, 126, 299, 201, 115, 367, 126, 126, 367, 739, 813, 299, 126, 813, 39, 810, 583, 509, 96, 583, 237, 12, 509, 509, 12, 860, 590, 96, 509, 590, 68, 68, 590, 128, 911, 590, 860, 79, 128, 128, 79, 353, 34, 911, 128, 34, 42, 42, 34, 431, 878, 34, 353, 207, 431, 431, 207, 571, 529, 878, 431, 529, 313, 313, 529, 289, 742, 529, 571, 420, 289, 289, 420, 423, 214, 742, 289, 214, 582, 582, 214, 156, 361, 214, 423, 254, 156, 156, 254, 755, 172, 361, 156, 172, 821, 414, 349, 778, 567, 349, 106, 478, 778, 778, 478, 316, 729, 567, 778, 729, 358, 358, 729, 340, 496, 729, 316, 413, 340, 340, 413, 920, 651, 496, 340, 651, 796, 796, 651, 394, 640, 651, 920, 28, 394, 394, 28, 360, 301, 640, 394, 301, 513, 513, 301, 679, 695, 301, 360, 743, 679, 679, 743, 31, 238, 695, 679, 238, 44, 44, 238, 110, 97, 238, 31, 522, 110, 110, 522, 407, 521, 97, 110, 521, 464, 682, 283, 675, 379, 283, 537, 493, 675, 675, 493, 670, 220, 379, 675, 220, 822, 822, 220, 945, 282, 220, 670, 231, 945, 945, 231, 102, 270, 282, 945, 270, 856, 903, 617, 32, 167, 617, 624, 18, 32, 32, 18, 505, 144, 167, 32, 144, 930, 930, 144, 205, 124, 144, 505, 764, 205, 205, 764, 941, 533, 124, 205, 533, 2, 2, 533, 711, 287, 533, 941, 516, 711, 711, 516, 377, 145, 287, 711, 145, 810, 683, 130, 863, 403, 130, 682, 272, 863, 863, 272, 547, 482, 403, 863, 482, 365, 365, 482, 563, 119, 482, 547, 224, 563, 563, 224, 229, 797, 119, 563, 797, 488, 488, 797, 239, 384, 797, 229, 877, 239, 239, 877, 898, 734, 384, 239, 734, 333, 333, 734, 534, 593, 734, 898, 576, 534, 534, 576, 667, 386, 593, 534, 386, 623, 623, 386, 765, 564, 386, 667, 656, 765, 765, 656, 821, 757, 564, 765, 757, 243, 693, 483, 476, 225, 483, 814, 103, 476, 476, 103, 625, 378, 225, 476, 378, 686, 686, 378, 554, 120, 378, 625, 412, 554, 554, 412, 641, 330, 120, 554, 330, 578, 578, 330, 290, 372, 330, 641, 95, 290, 290, 95, 846, 324, 372, 290, 324, 277, 959, 236, 182, 263, 236, 694, 451, 182, 182, 451, 86, 80, 263, 182, 80, 173, 173, 80, 690, 166, 80, 86, 269, 690, 690, 269, 237, 696, 166, 690, 696, 565, 537, 446, 179, 611, 446, 538, 308, 179, 179, 308, 800, 465, 611, 179, 465, 726, 726, 465, 338, 274, 465, 800, 170, 338, 338, 170, 81, 784, 274, 338, 784, 406, 783, 929, 168, 473, 929, 485, 61, 168, 168, 61, 807, 552, 473, 168, 552, 468, 468, 552, 801, 782, 552, 807, 786, 801, 801, 786, 907, 596, 782, 801, 596, 661, 661, 596, 25, 459, 596, 907, 610, 25, 25, 610, 464, 461, 459, 25, 461, 739, 538, 62, 892, 629, 62, 683, 376, 892, 892, 376, 275, 913, 629, 892, 913, 477, 477, 913, 319, 127, 913, 275, 90, 319, 319, 90, 422, 642, 127, 319, 642, 177, 562, 756, 951, 921, 756, 627, 638, 951, 951, 638, 652, 687, 921, 951, 687, 202, 202, 687, 89, 899, 687, 652, 411, 89, 89, 411, 851, 82, 899, 89, 82, 852, 852, 82, 953, 716, 82, 851, 816, 953, 953, 816, 697, 332, 716, 953, 332, 414, 814, 798, 78, 705, 798, 260, 241, 78, 78, 241, 864, 840, 705, 78, 840, 887, 887, 840, 50, 388, 840, 864, 123, 50, 50, 123, 750, 486, 388, 50, 486, 453, 453, 486, 357, 266, 486, 750, 805, 357, 357, 805, 454, 409, 266, 357, 409, 215, 215, 409, 393, 620, 409, 454, 925, 393, 393, 925, 584, 874, 620, 393, 874, 27, 27, 874, 735, 957, 874, 584, 43, 735, 735, 43, 958, 160, 957, 735, 160, 755, 106, 349, 206, 92, 349, 414, 332, 206, 206, 332, 697, 219, 92, 206, 219, 257]
                uniform token subdivisionScheme = "none"
                token visibility
            }
        }
    }
}

def "Environment"
{
    def DomeLight "sky" (
        apiSchemas = ["ShapingAPI"]
    )
    {
        float intensity = 1000
        float shaping:cone:angle = 180
        float shaping:cone:softness
        float shaping:focus = 0
        color3f shaping:focusTint = (0, 0, 0)
        asset shaping:ies:file
        float specular = 1
        asset texture:file = @https://omniverse-content-production.s3.us-west-2.amazonaws.com/Assets/Skies/2022_1/Skies/Indoor/small_hangar_01.hdr@
        token texture:format = "latlong"
        token visibility = "inherited"
        bool visibleInPrimaryRay = 1
        double3 xformOp:rotateXYZ = (270, 174.5894891995585, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }
}

def Shader "data_lookup_float3" (
    apiSchemas = ["NodeGraphNodeAPI"]
)
{
    reorder properties = ["inputs:name", "inputs:default_value"]
    uniform token info:implementationSource = "sourceAsset"
    uniform asset info:mdl:sourceAsset = @nvidia/support_definitions.mdl@
    uniform token info:mdl:sourceAsset:subIdentifier = "data_lookup_float3"
    float3 inputs:default_value (
        customData = {
            float3 default = (0, 0, 0)
        }
        hidden = false
        renderType = "float3"
    )
    bool inputs:excludeFromWhiteMode = 0 (
        customData = {
            bool default = 0
        }
        displayGroup = "Material Flags"
        displayName = "Exclude from White Mode"
        hidden = false
    )
    string inputs:name = "random_color" (
        hidden = false
        renderType = "string"
    )
    float3 outputs:out (
        renderType = "float3"
    )
    uniform token ui:nodegraph:node:expansionState = "open"
    uniform float2 ui:nodegraph:node:pos = (-1719.1984, 136.92104)
}

def Camera "OmniverseKit_Persp" (
    customData = {
        dictionary omni = {
            dictionary kit = {
                bool hide_in_stage_window = 1
                bool no_delete = 1
            }
        }
    }
    hide_in_stage_window = true
    kind = "component"
    no_delete = true
)
{
    float2 clippingRange = (1, 10000000)
    float focalLength = 18.147562
    custom uniform vector3d omni:kit:centerOfInterest = (-1.5448471651330086e-15, -2.4717554642128132e-15, -66.97754746649706)
    float3 xformOp:rotateXYZ = (-21.38725, -20.503822, -2.4618642e-14)
    float3 xformOp:scale = (1, 1, 1)
    double3 xformOp:translate = (-27.43726414861917, 32.59290269818252, 59.677509323096864)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
}

def Camera "OmniverseKit_Front" (
    customData = {
        dictionary omni = {
            dictionary kit = {
                bool hide_in_stage_window = 1
                bool no_delete = 1
            }
        }
    }
    hide_in_stage_window = true
    kind = "component"
    no_delete = true
)
{
    float2 clippingRange = (20000, 10000000)
    float horizontalAperture = 5000
    custom uniform vector3d omni:kit:centerOfInterest = (0, 0, -50000)
    token projection = "orthographic"
    float verticalAperture = 5000
    float3 xformOp:rotateXYZ = (-0, 0, -0)
    float3 xformOp:scale = (1, 1, 1)
    double3 xformOp:translate = (0, 0, 50000)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
}

def Camera "OmniverseKit_Top" (
    customData = {
        dictionary omni = {
            dictionary kit = {
                bool hide_in_stage_window = 1
                bool no_delete = 1
            }
        }
    }
    hide_in_stage_window = true
    kind = "component"
    no_delete = true
)
{
    float2 clippingRange = (20000, 10000000)
    float horizontalAperture = 5000
    custom uniform vector3d omni:kit:centerOfInterest = (-1.5407439555097887e-33, 0, -50000)
    token projection = "orthographic"
    float verticalAperture = 5000
    float3 xformOp:rotateXYZ = (-119.99992, -0.00011739155, -0.00003145489)
    float3 xformOp:scale = (1, 1, 1)
    double3 xformOp:translate = (-4.329780281177466e-12, 50000, 1.1102230246251565e-11)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
}

def Camera "OmniverseKit_Right" (
    customData = {
        dictionary omni = {
            dictionary kit = {
                bool hide_in_stage_window = 1
                bool no_delete = 1
            }
        }
    }
    hide_in_stage_window = true
    kind = "component"
    no_delete = true
)
{
    float2 clippingRange = (20000, 10000000)
    float horizontalAperture = 5000
    custom uniform vector3d omni:kit:centerOfInterest = (0, 0, -50000)
    token projection = "orthographic"
    float verticalAperture = 5000
    float3 xformOp:rotateXYZ = (0, -90, -0)
    float3 xformOp:scale = (1, 1, 1)
    double3 xformOp:translate = (-50000, 0, -1.1102230246251565e-11)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
}


